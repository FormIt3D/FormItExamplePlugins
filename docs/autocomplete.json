[
    {
        "label": "FormIt.CallJS",
        "kind": "Function",
        "detail": "Execute the given function with the given params Parameters function, params (json) Out: string.",
        "insertText": "FormIt.CallJS(funcName, paramsJSON);",
        "documentation": {
            "value": "# [FormIt.CallJS](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gaf9ff6b5d91f7e5d945fe113d359a5195)\n\n## Execute the given function with the given params Parameters function, params (json) Out: string.\n\n## Parameters\n* funcName\n* paramsJSON\n"
        }
    },
    {
        "label": "FormIt.ChangeTargetBuildableArea",
        "kind": "Function",
        "detail": "ChangeTargetBuildableArea() function.",
        "insertText": "FormIt.ChangeTargetBuildableArea(value);",
        "documentation": {
            "value": "# [FormIt.ChangeTargetBuildableArea](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga8dbd9de00b244cee2ca78b62d1c578bf)\n\n## ChangeTargetBuildableArea() function.\n\n## Parameters\n* value\n"
        }
    },
    {
        "label": "FormIt.ConsoleLog",
        "kind": "Function",
        "detail": "Log the given msg to the FormIt console.",
        "insertText": "FormIt.ConsoleLog(msg);",
        "documentation": {
            "value": "# [FormIt.ConsoleLog](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gac21e6ff3cb0a28fdb5a93570130dd792)\n\n## Log the given msg to the FormIt console.\n\n## Parameters\n* msg\n"
        }
    },
    {
        "label": "FormIt.DeleteImage",
        "kind": "Function",
        "detail": "DeleteImage() function.",
        "insertText": "FormIt.DeleteImage(nHistoryID, imageID);",
        "documentation": {
            "value": "# [FormIt.DeleteImage](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga5287e53d504635f1c85d71e34bccd5b7)\n\n## DeleteImage() function.\n\n## Parameters\n* nHistoryID\n* imageID\n"
        }
    },
    {
        "label": "FormIt.FindLatestVersion",
        "kind": "Function",
        "detail": "Retrieve the latest version string from a plugin versions.json file passed as a string Parameters In: versionJsonString Out: The version json obj of the plugin to load.",
        "insertText": "FormIt.FindLatestVersion(versionJsonString, testVersion);",
        "documentation": {
            "value": "# [FormIt.FindLatestVersion](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gadc9ea2cf19ee73eeefe10a3c4460d10b)\n\n## Retrieve the latest version string from a plugin versions.json file passed as a string Parameters In: versionJsonString Out: The version json obj of the plugin to load.\n\n## Parameters\n* versionJsonString\n* testVersion\n"
        }
    },
    {
        "label": "FormIt.GetAppDefaultContentsWithoutAXM",
        "kind": "Function",
        "detail": "GetAppDefaultContentsWithoutAXM() function.",
        "insertText": "FormIt.GetAppDefaultContentsWithoutAXM();",
        "documentation": {
            "value": "# [FormIt.GetAppDefaultContentsWithoutAXM](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga1f3abb4f70e850e370800f5ec2a806a1)\n\n## GetAppDefaultContentsWithoutAXM() function.\n\n"
        }
    },
    {
        "label": "FormIt.GetBuildingType",
        "kind": "Function",
        "detail": "GetBuildingType() function.",
        "insertText": "FormIt.GetBuildingType();",
        "documentation": {
            "value": "# [FormIt.GetBuildingType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga462a2eedc22b78fca5435a50def210eb)\n\n## GetBuildingType() function.\n\n"
        }
    },
    {
        "label": "FormIt.GetCurveAccuracyOrCountDefault",
        "kind": "Function",
        "detail": "Get the curve accuracy for the application.",
        "insertText": "FormIt.GetCurveAccuracyOrCountDefault();",
        "documentation": {
            "value": "# [FormIt.GetCurveAccuracyOrCountDefault](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga6063c04bd1fdc297f6cdfda74518a2a5)\n\n## Get the curve accuracy for the application.\n\n"
        }
    },
    {
        "label": "FormIt.GetShowEditableDimensions",
        "kind": "Function",
        "detail": "GetShowEditableDimensions returns true if editable dimensions are being displayed.",
        "insertText": "FormIt.GetShowEditableDimensions();",
        "documentation": {
            "value": "# [FormIt.GetShowEditableDimensions](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga549695812c3f714ec0c9542ae4204a4e)\n\n## GetShowEditableDimensions returns true if editable dimensions are being displayed.\n\n"
        }
    },
    {
        "label": "FormIt.GetSnap",
        "kind": "Function",
        "detail": "Get snapping state.",
        "insertText": "FormIt.GetSnap();",
        "documentation": {
            "value": "# [FormIt.GetSnap](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga46a8b5553bbc92f41175587c69d0dfce)\n\n## Get snapping state.\n\n"
        }
    },
    {
        "label": "FormIt.GetSurfaceAccuracyOrCountDefault",
        "kind": "Function",
        "detail": "Get the surface accuracy for the application.",
        "insertText": "FormIt.GetSurfaceAccuracyOrCountDefault();",
        "documentation": {
            "value": "# [FormIt.GetSurfaceAccuracyOrCountDefault](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga9cb7def3d515e4037fa92bb5bdb2b18e)\n\n## Get the surface accuracy for the application.\n\n"
        }
    },
    {
        "label": "FormIt.GetTimeNow",
        "kind": "Function",
        "detail": "Get the time.",
        "insertText": "FormIt.GetTimeNow();",
        "documentation": {
            "value": "# [FormIt.GetTimeNow](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga6b73c79ba37cd2023da92e77c9b4bbc3)\n\n## Get the time.\n\n"
        }
    },
    {
        "label": "FormIt.GetTouchEnabled",
        "kind": "Function",
        "detail": "Are touch interactions enabled?",
        "insertText": "FormIt.GetTouchEnabled();",
        "documentation": {
            "value": "# [FormIt.GetTouchEnabled](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga333902ea2865a7d8b813eff4403e30c1)\n\n## Are touch interactions enabled?\n\n"
        }
    },
    {
        "label": "FormIt.GetUnitTypeDefault",
        "kind": "Function",
        "detail": "Get the Application (as opposed to Model) UnitType.",
        "insertText": "FormIt.GetUnitTypeDefault();",
        "documentation": {
            "value": "# [FormIt.GetUnitTypeDefault](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gac192223146ba90539b9ca21cd7e809bd)\n\n## Get the Application (as opposed to Model) UnitType.\n\n"
        }
    },
    {
        "label": "FormIt.GetVersion",
        "kind": "Function",
        "detail": "Retrieve the FormIt version number Parameters Out: FormIt.Version.",
        "insertText": "FormIt.GetVersion();",
        "documentation": {
            "value": "# [FormIt.GetVersion](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gae6a82b88e26dd76df9d8fb8b5351d5ed)\n\n## Retrieve the FormIt version number Parameters Out: FormIt.Version.\n\n"
        }
    },
    {
        "label": "FormIt.HandleHUDTextInput",
        "kind": "Function",
        "detail": "HandleHUDTextInput will handle the HUD input values Parameters: In: dimensionID Out: Boolean.",
        "insertText": "FormIt.HandleHUDTextInput(dimensionID, inputText);",
        "documentation": {
            "value": "# [FormIt.HandleHUDTextInput](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga35d542c19ea71ce11f6d34f399ca8f74)\n\n## HandleHUDTextInput will handle the HUD input values Parameters: In: dimensionID Out: Boolean.\n\n## Parameters\n* dimensionID\n* inputText\n"
        }
    },
    {
        "label": "FormIt.ImportFile",
        "kind": "Function",
        "detail": "Imports the content of the given file.",
        "insertText": "FormIt.ImportFile(sFileName, bGroupImport, nHistoryID, bKeepLevels, bKeepLevelsWhenGrouping);",
        "documentation": {
            "value": "# [FormIt.ImportFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga08efbf8c53ad9c458de8b5e8afa5a44e)\n\n## Imports the content of the given file.\n\n## Parameters\n* sFileName\n* bGroupImport\n* nHistoryID\n* bKeepLevels\n* bKeepLevelsWhenGrouping\n"
        }
    },
    {
        "label": "FormIt.ImportToGroup",
        "kind": "Function",
        "detail": "Import to a Group Parameters: In: string In: string Out: HistoryID.",
        "insertText": "FormIt.ImportToGroup(sFileType, sFilePath);",
        "documentation": {
            "value": "# [FormIt.ImportToGroup](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gaff896c93a93a93138aad2c407a670ece)\n\n## Import to a Group Parameters: In: string In: string Out: HistoryID.\n\n## Parameters\n* sFileType\n* sFilePath\n"
        }
    },
    {
        "label": "FormIt.IsWSRAvailable",
        "kind": "Function",
        "detail": "IsWSRAvailable() function.",
        "insertText": "FormIt.IsWSRAvailable();",
        "documentation": {
            "value": "# [FormIt.IsWSRAvailable](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga4acc7bf1ffa6c4854a99d48da8fcefcc)\n\n## IsWSRAvailable() function.\n\n"
        }
    },
    {
        "label": "FormIt.LoadPreviewImage",
        "kind": "Function",
        "detail": "Load preview image of the given file.",
        "insertText": "FormIt.LoadPreviewImage(sFileName, sFileName);",
        "documentation": {
            "value": "# [FormIt.LoadPreviewImage](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gaab1ecb373268be043b57c8c742307d45)\n\n## Load preview image of the given file.\n\n## Parameters\n* sFileName\n* sFileName\n"
        }
    },
    {
        "label": "FormIt.NewFile",
        "kind": "Function",
        "detail": "Run the new file method.",
        "insertText": "FormIt.NewFile(forced);",
        "documentation": {
            "value": "# [FormIt.NewFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga292bd3cd6444368c0429fcd9c2af5326)\n\n## Run the new file method.\n\n## Parameters\n* forced\n"
        }
    },
    {
        "label": "FormIt.OpenFile",
        "kind": "Function",
        "detail": "Open the given file.",
        "insertText": "FormIt.OpenFile(sFileName);",
        "documentation": {
            "value": "# [FormIt.OpenFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gaf52f8ba17cd66189390ee42f7499bad9)\n\n## Open the given file.\n\n## Parameters\n* sFileName\n"
        }
    },
    {
        "label": "FormIt.ResumeMessaging",
        "kind": "Function",
        "detail": "Resumes messaging that was suspended by a call to SuspendMessaging.",
        "insertText": "FormIt.ResumeMessaging();",
        "documentation": {
            "value": "# [FormIt.ResumeMessaging](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga962c2554a7788c4391c66656812d5c64)\n\n## Resumes messaging that was suspended by a call to SuspendMessaging.\n\n"
        }
    },
    {
        "label": "FormIt.SaveFile",
        "kind": "Function",
        "detail": "Save the current model to the given file name.",
        "insertText": "FormIt.SaveFile(sFileName, saveOptions, previewImage, forSave);",
        "documentation": {
            "value": "# [FormIt.SaveFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga0190a9ba500d284c05266930f9c8a6c5)\n\n## Save the current model to the given file name.\n\n## Parameters\n* sFileName\n* saveOptions\n* previewImage\n* forSave\n"
        }
    },
    {
        "label": "FormIt.SaveFileForEnergyAnalysis",
        "kind": "Function",
        "detail": "Save the current model to the given file name for energy analysis.",
        "insertText": "FormIt.SaveFileForEnergyAnalysis(sFileName);",
        "documentation": {
            "value": "# [FormIt.SaveFileForEnergyAnalysis](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga86150da702fa81dc9b0161159bfb495e)\n\n## Save the current model to the given file name for energy analysis.\n\n## Parameters\n* sFileName\n"
        }
    },
    {
        "label": "FormIt.SetBuildingType",
        "kind": "Function",
        "detail": "SetBuildingType() function.",
        "insertText": "FormIt.SetBuildingType(value);",
        "documentation": {
            "value": "# [FormIt.SetBuildingType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gae0b6ab210ed83a9732201c642e24d604)\n\n## SetBuildingType() function.\n\n## Parameters\n* value\n"
        }
    },
    {
        "label": "FormIt.SetCurveAccuracyOrCountDefault",
        "kind": "Function",
        "detail": "Set the curve accuracy for the application.",
        "insertText": "FormIt.SetCurveAccuracyOrCountDefault(accuracyORcount, accuracyORcount);",
        "documentation": {
            "value": "# [FormIt.SetCurveAccuracyOrCountDefault](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gac414a121926a97459f12f3d3c6bd6f91)\n\n## Set the curve accuracy for the application.\n\n## Parameters\n* accuracyORcount\n* accuracyORcount\n"
        }
    },
    {
        "label": "FormIt.SetGeoLocationData",
        "kind": "Function",
        "detail": "SetGeoLocationData() function.",
        "insertText": "FormIt.SetGeoLocationData(geodata);",
        "documentation": {
            "value": "# [FormIt.SetGeoLocationData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gae1eb161439ecf4abbc2189ae1d845d7e)\n\n## SetGeoLocationData() function.\n\n## Parameters\n* geodata\n"
        }
    },
    {
        "label": "FormIt.SetKeyboardShortcutsEnabled",
        "kind": "Function",
        "detail": "SetKeyboardShortcutsEnabled Enables/Disables Keyboard Shortcuts Parameters: In: enabled Out: JSON_UNDEFINED.",
        "insertText": "FormIt.SetKeyboardShortcutsEnabled(enabled);",
        "documentation": {
            "value": "# [FormIt.SetKeyboardShortcutsEnabled](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gaaf948638c6a7439bfa5c562cb4486b45)\n\n## SetKeyboardShortcutsEnabled Enables/Disables Keyboard Shortcuts Parameters: In: enabled Out: JSON_UNDEFINED.\n\n## Parameters\n* enabled\n"
        }
    },
    {
        "label": "FormIt.SetLocaleForWeb",
        "kind": "Function",
        "detail": "Set the Locale for web client given locale type Parameters In string localType Out: undefined.",
        "insertText": "FormIt.SetLocaleForWeb(nameCode);",
        "documentation": {
            "value": "# [FormIt.SetLocaleForWeb](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga6d6f2d82c0644d22c1e88cbbe9248547)\n\n## Set the Locale for web client given locale type Parameters In string localType Out: undefined.\n\n## Parameters\n* nameCode\n"
        }
    },
    {
        "label": "FormIt.SetRenderData",
        "kind": "Function",
        "detail": "SetRenderData() function.",
        "insertText": "FormIt.SetRenderData(renderdata);",
        "documentation": {
            "value": "# [FormIt.SetRenderData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gaa7b3bc46376707509c6a3dad66615e12)\n\n## SetRenderData() function.\n\n## Parameters\n* renderdata\n"
        }
    },
    {
        "label": "FormIt.SetShowEditableDimensions",
        "kind": "Function",
        "detail": "SetShowEditableDimensions sets if editable dimensions are being displayed.",
        "insertText": "FormIt.SetShowEditableDimensions(show);",
        "documentation": {
            "value": "# [FormIt.SetShowEditableDimensions](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gaa4633c34d5a3c77c0e3194247d96184c)\n\n## SetShowEditableDimensions sets if editable dimensions are being displayed.\n\n## Parameters\n* show\n"
        }
    },
    {
        "label": "FormIt.SetSnap",
        "kind": "Function",
        "detail": "Set snapping state.",
        "insertText": "FormIt.SetSnap(bSnap);",
        "documentation": {
            "value": "# [FormIt.SetSnap](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gafcbfbffe1c4874775cd2b8869d49b047)\n\n## Set snapping state.\n\n## Parameters\n* bSnap\n"
        }
    },
    {
        "label": "FormIt.SetSurfaceAccuracyOrCountDefault",
        "kind": "Function",
        "detail": "Set the surface accuracy for the application.",
        "insertText": "FormIt.SetSurfaceAccuracyOrCountDefault(accuracyORcount, accuracyORcount);",
        "documentation": {
            "value": "# [FormIt.SetSurfaceAccuracyOrCountDefault](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gada7318034743bdd8adb7a416e5d0f81a)\n\n## Set the surface accuracy for the application.\n\n## Parameters\n* accuracyORcount\n* accuracyORcount\n"
        }
    },
    {
        "label": "FormIt.SetTouchEnabled",
        "kind": "Function",
        "detail": "Enable touch interactions.",
        "insertText": "FormIt.SetTouchEnabled(bTouchEnabled);",
        "documentation": {
            "value": "# [FormIt.SetTouchEnabled](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gab929131640395aa72d0dc372e0cb6aac)\n\n## Enable touch interactions.\n\n## Parameters\n* bTouchEnabled\n"
        }
    },
    {
        "label": "FormIt.SetUnitTypeDefault",
        "kind": "Function",
        "detail": "Set the Application (as opposed to Model) UnitType.",
        "insertText": "FormIt.SetUnitTypeDefault(FormIt.UnitType);",
        "documentation": {
            "value": "# [FormIt.SetUnitTypeDefault](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#gae40144c6f7d7ea90daa5d23ad1c94a30)\n\n## Set the Application (as opposed to Model) UnitType.\n\n## Parameters\n* FormIt.UnitType\n"
        }
    },
    {
        "label": "FormIt.SuspendMessaging",
        "kind": "Function",
        "detail": "SuspendMessaging suspends all update messages from WSM until ResumeMessaging is called.",
        "insertText": "FormIt.SuspendMessaging(bSuppress, nTopLevelHistory, bFullUpdate);",
        "documentation": {
            "value": "# [FormIt.SuspendMessaging](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga4d996a3ea7d048d5213b8070adbeb458)\n\n## SuspendMessaging suspends all update messages from WSM until ResumeMessaging is called.\n\n## Parameters\n* bSuppress\n* nTopLevelHistory\n* bFullUpdate\n"
        }
    },
    {
        "label": "FormIt.Version",
        "kind": "Function",
        "detail": "Get the version of FormIt.",
        "insertText": "FormIt.Version();",
        "documentation": {
            "value": "# [FormIt.Version](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga29e3f7340e90048c57b8ac4f47fef741)\n\n## Get the version of FormIt.\n\n"
        }
    },
    {
        "label": "FormIt.WriteAppDefaultContentToFile",
        "kind": "Function",
        "detail": "WriteAppDefaultContentToFile() function.",
        "insertText": "FormIt.WriteAppDefaultContentToFile(id, path);",
        "documentation": {
            "value": "# [FormIt.WriteAppDefaultContentToFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit.html#ga51a9a609bfd2976992bfb6926714fd1f)\n\n## WriteAppDefaultContentToFile() function.\n\n## Parameters\n* id\n* path\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.Analyze",
        "kind": "Function",
        "insertText": "FormIt.Analysis.Solar.Analyze();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.Analyze](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga2033c5a0140fcd69e347747a2994cf90)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.CanAnalyze",
        "kind": "Function",
        "detail": "CanAnalyze Parameters: In: Out: bool.",
        "insertText": "FormIt.Analysis.Solar.CanAnalyze();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.CanAnalyze](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#gaad1f2027b02adb304549f451486c2202)\n\n## CanAnalyze Parameters: In: Out: bool.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.CancelAnalysis",
        "kind": "Function",
        "detail": "Cancel the analysis.",
        "insertText": "FormIt.Analysis.Solar.CancelAnalysis();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.CancelAnalysis](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#gaeebeca84b6d3e0d8b1b21bdd367a74f8)\n\n## Cancel the analysis.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.EnterAnalysisMode",
        "kind": "Function",
        "detail": "Start Solar Analysis mode.",
        "insertText": "FormIt.Analysis.Solar.EnterAnalysisMode();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.EnterAnalysisMode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga01630ad157206c02a6dd79be5ec992d1)\n\n## Start Solar Analysis mode.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.ExitAnalysisMode",
        "kind": "Function",
        "detail": "End Solar Analysis mode.",
        "insertText": "FormIt.Analysis.Solar.ExitAnalysisMode();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.ExitAnalysisMode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga0b9a66aceb3e75a8c2199494f21a75c9)\n\n## End Solar Analysis mode.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.GetLimits",
        "kind": "Function",
        "detail": "GetLimits Parameters: In: Out: {success: ,min: , max:}.",
        "insertText": "FormIt.Analysis.Solar.GetLimits();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.GetLimits](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#gaf4e2f1eff2a5a445d027a7f4860e9c34)\n\n## GetLimits Parameters: In: Out: {success: ,min: , max:}.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.GetMethod",
        "kind": "Function",
        "detail": "Gets the analysis method : monthly peak (true) or yearly cumulative (false).",
        "insertText": "FormIt.Analysis.Solar.GetMethod();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.GetMethod](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga05b91e9942489fa78f38cd622296eddb)\n\n## Gets the analysis method : monthly peak (true) or yearly cumulative (false).\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.GetNumTooltipsToShow",
        "kind": "Function",
        "detail": "GetNumTooltipsToShow Parameters: In: Out: Number of tooltips to show.",
        "insertText": "FormIt.Analysis.Solar.GetNumTooltipsToShow();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.GetNumTooltipsToShow](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga69e08d9ddf951157ee68272f62e5c25a)\n\n## GetNumTooltipsToShow Parameters: In: Out: Number of tooltips to show.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.GetPeakMonth",
        "kind": "Function",
        "detail": "Gets the month for the monthly peak analysis method.",
        "insertText": "FormIt.Analysis.Solar.GetPeakMonth();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.GetPeakMonth](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga4b9270e8c80039c1c5fd0b45d48a3dd9)\n\n## Gets the month for the monthly peak analysis method.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.GetUnitString",
        "kind": "Function",
        "detail": "GetUnitString Parameters: In: Out: {success: , UnitString:}.",
        "insertText": "FormIt.Analysis.Solar.GetUnitString();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.GetUnitString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#gaad25a6db3f0a860c36db86d1744e1ae5)\n\n## GetUnitString Parameters: In: Out: {success: , UnitString:}.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.GetValueFromFaceAtPoint",
        "kind": "Function",
        "insertText": "FormIt.Analysis.Solar.GetValueFromFaceAtPoint();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.GetValueFromFaceAtPoint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga5c65a7996fb1b0f3578eeee333f36cce)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.GetWeatherDataStatus",
        "kind": "Function",
        "detail": "GetWeatherDataStatus Parameters: In: Out: status of weather data.",
        "insertText": "FormIt.Analysis.Solar.GetWeatherDataStatus();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.GetWeatherDataStatus](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga5c99dd6212ffc45f0051269c75d625da)\n\n## GetWeatherDataStatus Parameters: In: Out: status of weather data.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.IsAnalysisInProgress",
        "kind": "Function",
        "detail": "IsAnalysisInProgress Parameters: In: Out: bool.",
        "insertText": "FormIt.Analysis.Solar.IsAnalysisInProgress();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.IsAnalysisInProgress](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga0ec03ddbad0fa9590e641359eda40177)\n\n## IsAnalysisInProgress Parameters: In: Out: bool.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.IsInSolarAnalysisMode",
        "kind": "Function",
        "detail": "IsInSolarAnalysisMode Parameters: In: Out: bool IsInSolarAnalysisMode.",
        "insertText": "FormIt.Analysis.Solar.IsInSolarAnalysisMode();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.IsInSolarAnalysisMode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga7cb9bc3aed12a62635f3cb3853d8d883)\n\n## IsInSolarAnalysisMode Parameters: In: Out: bool IsInSolarAnalysisMode.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.IsNewAnalysisEnabled",
        "kind": "Function",
        "detail": "IsNewAnalysisEnabled Parameters: In: Out: bool.",
        "insertText": "FormIt.Analysis.Solar.IsNewAnalysisEnabled();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.IsNewAnalysisEnabled](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga952c8c8d3fc69f4010c3d6ddc207c5cb)\n\n## IsNewAnalysisEnabled Parameters: In: Out: bool.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.ResetAnalysis",
        "kind": "Function",
        "detail": "Reset the analysis.",
        "insertText": "FormIt.Analysis.Solar.ResetAnalysis();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.ResetAnalysis](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#gadf45e95fed4892326db3a46cd478b3d4)\n\n## Reset the analysis.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.SetMethod",
        "kind": "Function",
        "detail": "Sets the analysis method to monthly peak or yearly cumulative.",
        "insertText": "FormIt.Analysis.Solar.SetMethod(bMonthlyPeak);",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.SetMethod](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga116dd547daaf54d19a7a07544eb01fa5)\n\n## Sets the analysis method to monthly peak or yearly cumulative.\n\n## Parameters\n* bMonthlyPeak\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.SetNumTooltipsToShow",
        "kind": "Function",
        "detail": "SetNumTooltipsToShow Parameters: In: Out: JSON_UNDEFINED.",
        "insertText": "FormIt.Analysis.Solar.SetNumTooltipsToShow(numToolTips);",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.SetNumTooltipsToShow](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#gab6174a891f39a723f120094e8ebc97d3)\n\n## SetNumTooltipsToShow Parameters: In: Out: JSON_UNDEFINED.\n\n## Parameters\n* numToolTips\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.SetPeakMonth",
        "kind": "Function",
        "detail": "Sets the month for the monthly peak analysis method.",
        "insertText": "FormIt.Analysis.Solar.SetPeakMonth(month);",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.SetPeakMonth](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga37db540ed5cc92c37e6081877d752967)\n\n## Sets the month for the monthly peak analysis method.\n\n## Parameters\n* month\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.SetWeatherDataStatus",
        "kind": "Function",
        "detail": "SetWeatherDataStatus Parameters: In: status of weather data Out:",
        "insertText": "FormIt.Analysis.Solar.SetWeatherDataStatus(status);",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.SetWeatherDataStatus](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga9860eb5124c1308c1e897fd4096d150b)\n\n## SetWeatherDataStatus Parameters: In: status of weather data Out:\n\n## Parameters\n* status\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.ToggleAnalysisMode",
        "kind": "Function",
        "detail": "ToggleAnalysisMode Solar Analysis mode.",
        "insertText": "FormIt.Analysis.Solar.ToggleAnalysisMode();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.ToggleAnalysisMode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#ga12549c554750b5804eebb864a36fa589)\n\n## ToggleAnalysisMode Solar Analysis mode.\n\n"
        }
    },
    {
        "label": "FormIt.Analysis.Solar.ToggleFaceSelections",
        "kind": "Function",
        "insertText": "FormIt.Analysis.Solar.ToggleFaceSelections();",
        "documentation": {
            "value": "# [FormIt.Analysis.Solar.ToggleFaceSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__analysis__solar.html#gac2abc201d7b862d44c2c2b152de6efd2)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.AutoSave.AddProtectedFile",
        "kind": "Function",
        "detail": "AddProtectedFile() function.",
        "insertText": "FormIt.AutoSave.AddProtectedFile(path);",
        "documentation": {
            "value": "# [FormIt.AutoSave.AddProtectedFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#ga26b2fa9829e802ae46f058e1887b5c02)\n\n## AddProtectedFile() function.\n\n## Parameters\n* path\n"
        }
    },
    {
        "label": "FormIt.AutoSave.Cleanup",
        "kind": "Function",
        "insertText": "FormIt.AutoSave.Cleanup();",
        "documentation": {
            "value": "# [FormIt.AutoSave.Cleanup](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#gaf0a8e75d328b2d0f31026534b16ec1d1)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.AutoSave.ClearProtectedFiles",
        "kind": "Function",
        "detail": "ClearProtectedFiles() function.",
        "insertText": "FormIt.AutoSave.ClearProtectedFiles();",
        "documentation": {
            "value": "# [FormIt.AutoSave.ClearProtectedFiles](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#gaaf80b5957a03362d0593364a5d1d55fa)\n\n## ClearProtectedFiles() function.\n\n"
        }
    },
    {
        "label": "FormIt.AutoSave.Disable",
        "kind": "Function",
        "detail": "Disable() function.",
        "insertText": "FormIt.AutoSave.Disable();",
        "documentation": {
            "value": "# [FormIt.AutoSave.Disable](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#ga7803103e633eec3eacbd644786e900e9)\n\n## Disable() function.\n\n"
        }
    },
    {
        "label": "FormIt.AutoSave.Enable",
        "kind": "Function",
        "insertText": "FormIt.AutoSave.Enable();",
        "documentation": {
            "value": "# [FormIt.AutoSave.Enable](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#ga74dd313b573d364e167f3779dbdafb97)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.AutoSave.GetConfig",
        "kind": "Function",
        "detail": "GetConfig() function.",
        "insertText": "FormIt.AutoSave.GetConfig();",
        "documentation": {
            "value": "# [FormIt.AutoSave.GetConfig](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#ga35315626837fc4d9f9c904de48ecef10)\n\n## GetConfig() function.\n\n"
        }
    },
    {
        "label": "FormIt.AutoSave.GetDefaultConfig",
        "kind": "Function",
        "detail": "GetDefaultConfig() function.",
        "insertText": "FormIt.AutoSave.GetDefaultConfig();",
        "documentation": {
            "value": "# [FormIt.AutoSave.GetDefaultConfig](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#gace4a8c630173a29eaf0a400f64054383)\n\n## GetDefaultConfig() function.\n\n"
        }
    },
    {
        "label": "FormIt.AutoSave.GetExistingBackupFile",
        "kind": "Function",
        "detail": "GetExistingBackupFile() function.",
        "insertText": "FormIt.AutoSave.GetExistingBackupFile(path);",
        "documentation": {
            "value": "# [FormIt.AutoSave.GetExistingBackupFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#ga7cc6aa33173c9998ec6d25be7e324247)\n\n## GetExistingBackupFile() function.\n\n## Parameters\n* path\n"
        }
    },
    {
        "label": "FormIt.AutoSave.IsEnabled",
        "kind": "Function",
        "detail": "IsEnabled() function.",
        "insertText": "FormIt.AutoSave.IsEnabled();",
        "documentation": {
            "value": "# [FormIt.AutoSave.IsEnabled](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#gac48dd87970d5fbd23debdb738629ab30)\n\n## IsEnabled() function.\n\n"
        }
    },
    {
        "label": "FormIt.AutoSave.IsFileProtected",
        "kind": "Function",
        "detail": "IsFileProtected() function.",
        "insertText": "FormIt.AutoSave.IsFileProtected(path);",
        "documentation": {
            "value": "# [FormIt.AutoSave.IsFileProtected](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#ga8250cbf6cb78ba0928bf4a4255a03299)\n\n## IsFileProtected() function.\n\n## Parameters\n* path\n"
        }
    },
    {
        "label": "FormIt.AutoSave.Save",
        "kind": "Function",
        "detail": "Save() function.",
        "insertText": "FormIt.AutoSave.Save(force);",
        "documentation": {
            "value": "# [FormIt.AutoSave.Save](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#ga9223ee154438c335e2460308cfa09701)\n\n## Save() function.\n\n## Parameters\n* force\n"
        }
    },
    {
        "label": "FormIt.AutoSave.SetConfig",
        "kind": "Function",
        "detail": "SetConfig() function.",
        "insertText": "FormIt.AutoSave.SetConfig(config);",
        "documentation": {
            "value": "# [FormIt.AutoSave.SetConfig](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#ga2ff9feaf64f8f8e9f0093e928d35ae20)\n\n## SetConfig() function.\n\n## Parameters\n* config\n"
        }
    },
    {
        "label": "FormIt.AutoSave.SetConfigFromPath",
        "kind": "Function",
        "detail": "SetConfigFromPath() function.",
        "insertText": "FormIt.AutoSave.SetConfigFromPath(path);",
        "documentation": {
            "value": "# [FormIt.AutoSave.SetConfigFromPath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#gac0059042f51a74c91e27cd8b961477ee)\n\n## SetConfigFromPath() function.\n\n## Parameters\n* path\n"
        }
    },
    {
        "label": "FormIt.AutoSave.StartSignalThread",
        "kind": "Function",
        "detail": "StartSignalThread() function.",
        "insertText": "FormIt.AutoSave.StartSignalThread();",
        "documentation": {
            "value": "# [FormIt.AutoSave.StartSignalThread](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#gad2b54ecd9a62c236acb7f391b9d53583)\n\n## StartSignalThread() function.\n\n"
        }
    },
    {
        "label": "FormIt.AutoSave.StopSignalThread",
        "kind": "Function",
        "detail": "StopSignalThread() function.",
        "insertText": "FormIt.AutoSave.StopSignalThread();",
        "documentation": {
            "value": "# [FormIt.AutoSave.StopSignalThread](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__autosave.html#gab639362d81ac62ec542bca65f575e59c)\n\n## StopSignalThread() function.\n\n"
        }
    },
    {
        "label": "FormIt.Cameras.AlignWithFace",
        "kind": "Function",
        "detail": "Set the camera to look straight at the given face and zoom to fit it.",
        "insertText": "FormIt.Cameras.AlignWithFace(facePath, withTransition);",
        "documentation": {
            "value": "# [FormIt.Cameras.AlignWithFace](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__cameras.html#ga5f7d33e958291642628f2d17c7915377)\n\n## Set the camera to look straight at the given face and zoom to fit it.\n\n## Parameters\n* facePath\n* withTransition\n"
        }
    },
    {
        "label": "FormIt.Cameras.GetCameraData",
        "kind": "Function",
        "insertText": "FormIt.Cameras.GetCameraData();",
        "documentation": {
            "value": "# [FormIt.Cameras.GetCameraData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__cameras.html#gae7049e11523cbec87c37013fe09d1a42)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Cameras.GetCameraWorldForward",
        "kind": "Function",
        "detail": "Get the vector of GetCameraWorldForward.",
        "insertText": "FormIt.Cameras.GetCameraWorldForward();",
        "documentation": {
            "value": "# [FormIt.Cameras.GetCameraWorldForward](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__cameras.html#gab02a07b611a732dff42597d291daa310)\n\n## Get the vector of GetCameraWorldForward.\n\n"
        }
    },
    {
        "label": "FormIt.Cameras.GetCameraWorldUp",
        "kind": "Function",
        "detail": "Get the vector of GetCameraWorldUp.",
        "insertText": "FormIt.Cameras.GetCameraWorldUp();",
        "documentation": {
            "value": "# [FormIt.Cameras.GetCameraWorldUp](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__cameras.html#gaecb40fc47ecb48cd72da2e6566d9b768)\n\n## Get the vector of GetCameraWorldUp.\n\n"
        }
    },
    {
        "label": "FormIt.Cameras.GetProjectionType",
        "kind": "Function",
        "detail": "Get the camera to perspective.",
        "insertText": "FormIt.Cameras.GetProjectionType();",
        "documentation": {
            "value": "# [FormIt.Cameras.GetProjectionType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__cameras.html#gafec38e56a1b06c8a73ea1b50d350865b)\n\n## Get the camera to perspective.\n\n"
        }
    },
    {
        "label": "FormIt.Cameras.GetViewportSize",
        "kind": "Function",
        "detail": "Get the camera width and height Parameters: Out: width and height of the current viewport.",
        "insertText": "FormIt.Cameras.GetViewportSize();",
        "documentation": {
            "value": "# [FormIt.Cameras.GetViewportSize](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__cameras.html#ga781d8a364420cd86391b618b6ad92319)\n\n## Get the camera width and height Parameters: Out: width and height of the current viewport.\n\n"
        }
    },
    {
        "label": "FormIt.Cameras.SetCameraData",
        "kind": "Function",
        "detail": "Set the parameters that define the current camera.",
        "insertText": "FormIt.Cameras.SetCameraData(cameraData);",
        "documentation": {
            "value": "# [FormIt.Cameras.SetCameraData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__cameras.html#gaedb337bea3b51706a8469004a5540530)\n\n## Set the parameters that define the current camera.\n\n## Parameters\n* cameraData\n"
        }
    },
    {
        "label": "FormIt.Cameras.SetProjectionType",
        "kind": "Function",
        "detail": "Set the camera to perspective.",
        "insertText": "FormIt.Cameras.SetProjectionType(projectionType);",
        "documentation": {
            "value": "# [FormIt.Cameras.SetProjectionType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__cameras.html#ga2dd0be8dfe1fb683972751dffaa25f89)\n\n## Set the camera to perspective.\n\n## Parameters\n* projectionType\n"
        }
    },
    {
        "label": "FormIt.Cameras.SetViewportSize",
        "kind": "Function",
        "detail": "Set the parameters that define the current camera.",
        "insertText": "FormIt.Cameras.SetViewportSize(x, y);",
        "documentation": {
            "value": "# [FormIt.Cameras.SetViewportSize](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__cameras.html#ga20ef4a981653e405cf689d124535c59f)\n\n## Set the parameters that define the current camera.\n\n## Parameters\n* x\n* y\n"
        }
    },
    {
        "label": "FormIt.Clipboard.GetJSONStringForClipboard",
        "kind": "Function",
        "insertText": "FormIt.Clipboard.GetJSONStringForClipboard();",
        "documentation": {
            "value": "# [FormIt.Clipboard.GetJSONStringForClipboard](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__clipboard.html#ga4f39d8f34e5ebbe3533906357df5dd28)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Clipboard.SetJSONStringFromClipboard",
        "kind": "Function",
        "detail": "SetJSONStringFromClipboard sets the clipboard data and sets it in FormIt.Clipboard.",
        "insertText": "FormIt.Clipboard.SetJSONStringFromClipboard(str);",
        "documentation": {
            "value": "# [FormIt.Clipboard.SetJSONStringFromClipboard](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__clipboard.html#ga289116a38bd121a0db0b20986a61037e)\n\n## SetJSONStringFromClipboard sets the clipboard data and sets it in FormIt.Clipboard.\n\n## Parameters\n* str\n"
        }
    },
    {
        "label": "FormIt.Collaboration.Connect",
        "kind": "Function",
        "insertText": "FormIt.Collaboration.Connect();",
        "documentation": {
            "value": "# [FormIt.Collaboration.Connect](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#ga2d17546c5b56d0aa3440ebb100e0c4ac)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Collaboration.Disconnect",
        "kind": "Function",
        "detail": "Disconnect from the collaboration server.",
        "insertText": "FormIt.Collaboration.Disconnect();",
        "documentation": {
            "value": "# [FormIt.Collaboration.Disconnect](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#gaa3c67a17370363cc0c9e8f9a03ead64d)\n\n## Disconnect from the collaboration server.\n\n"
        }
    },
    {
        "label": "FormIt.Collaboration.FollowCamera",
        "kind": "Function",
        "detail": "Follow the camera of another client specified by sUserId.",
        "insertText": "FormIt.Collaboration.FollowCamera(sUserId);",
        "documentation": {
            "value": "# [FormIt.Collaboration.FollowCamera](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#ga0d8956b693414d734c65a19146889946)\n\n## Follow the camera of another client specified by sUserId.\n\n## Parameters\n* sUserId\n"
        }
    },
    {
        "label": "FormIt.Collaboration.GetFollowingCameraUserID",
        "kind": "Function",
        "detail": "GetFollowingCameraUserID returns the user ID of the client being followed.",
        "insertText": "FormIt.Collaboration.GetFollowingCameraUserID();",
        "documentation": {
            "value": "# [FormIt.Collaboration.GetFollowingCameraUserID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#ga8897296dba7e6ee37ac5501315395694)\n\n## GetFollowingCameraUserID returns the user ID of the client being followed.\n\n"
        }
    },
    {
        "label": "FormIt.Collaboration.GetSessionId",
        "kind": "Function",
        "detail": "Get ID of the current Collaboration session (empty, if not connected).",
        "insertText": "FormIt.Collaboration.GetSessionId();",
        "documentation": {
            "value": "# [FormIt.Collaboration.GetSessionId](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#gad5a0f6625a74b1970065ded7b725710c)\n\n## Get ID of the current Collaboration session (empty, if not connected).\n\n"
        }
    },
    {
        "label": "FormIt.Collaboration.IsConnected",
        "kind": "Function",
        "detail": "Check whether this client is the collaboration session's owner Parameters: In: Out: bIsConnected.",
        "insertText": "FormIt.Collaboration.IsConnected();",
        "documentation": {
            "value": "# [FormIt.Collaboration.IsConnected](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#gac0f237a50bea991ecf1372dd8da92166)\n\n## Check whether this client is the collaboration session's owner Parameters: In: Out: bIsConnected.\n\n"
        }
    },
    {
        "label": "FormIt.Collaboration.IsFollowingCamera",
        "kind": "Function",
        "detail": "Check whether this client is following the camera of another client specified by sUserId.",
        "insertText": "FormIt.Collaboration.IsFollowingCamera();",
        "documentation": {
            "value": "# [FormIt.Collaboration.IsFollowingCamera](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#ga15bcecad10815627d9283bbe6aca93ec)\n\n## Check whether this client is following the camera of another client specified by sUserId.\n\n"
        }
    },
    {
        "label": "FormIt.Collaboration.IsSessionOwner",
        "kind": "Function",
        "detail": "Check whether this client is the collaboration session's owner Parameters: In: Out: isOwner.",
        "insertText": "FormIt.Collaboration.IsSessionOwner();",
        "documentation": {
            "value": "# [FormIt.Collaboration.IsSessionOwner](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#ga3125b1b52d4a9b42ada4ceb48d0a5fd4)\n\n## Check whether this client is the collaboration session's owner Parameters: In: Out: isOwner.\n\n"
        }
    },
    {
        "label": "FormIt.Collaboration.ReceiveCreateRefHistory",
        "kind": "Function",
        "detail": "Receive \"referenced History created\" notification from the collaboration server.",
        "insertText": "FormIt.Collaboration.ReceiveCreateRefHistory(nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Collaboration.ReceiveCreateRefHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#gae8af4455cd5ac459aa4e94be12077299)\n\n## Receive \"referenced History created\" notification from the collaboration server.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Collaboration.ReceiveDataAcceptance",
        "kind": "Function",
        "detail": "Receive data acceptance from the collaboration server.",
        "insertText": "FormIt.Collaboration.ReceiveDataAcceptance(nHistoryID, nDataType, nDeltaID, bAccepted);",
        "documentation": {
            "value": "# [FormIt.Collaboration.ReceiveDataAcceptance](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#gad646c8358a3e0c782347a91b280af785)\n\n## Receive data acceptance from the collaboration server.\n\n## Parameters\n* nHistoryID\n* nDataType\n* nDeltaID\n* bAccepted\n"
        }
    },
    {
        "label": "FormIt.Collaboration.ReceiveDelta",
        "kind": "Function",
        "detail": "Receive Delta from the collaboration server.",
        "insertText": "FormIt.Collaboration.ReceiveDelta(nHistoryID, nDeltaID, sBase64Delta);",
        "documentation": {
            "value": "# [FormIt.Collaboration.ReceiveDelta](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#ga20356fe759fe1db249cf0de6fa58b563)\n\n## Receive Delta from the collaboration server.\n\n## Parameters\n* nHistoryID\n* nDeltaID\n* sBase64Delta\n"
        }
    },
    {
        "label": "FormIt.Collaboration.ReceiveHistory",
        "kind": "Function",
        "detail": "Receive initial history and owner status from the collaboration server.",
        "insertText": "FormIt.Collaboration.ReceiveHistory(nHistoryID, sBase64History, bIsOwner);",
        "documentation": {
            "value": "# [FormIt.Collaboration.ReceiveHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#ga7f2522f0cec2172874dcae1b9f0e4864)\n\n## Receive initial history and owner status from the collaboration server.\n\n## Parameters\n* nHistoryID\n* sBase64History\n* bIsOwner\n"
        }
    },
    {
        "label": "FormIt.Collaboration.ReceiveUndoRedo",
        "kind": "Function",
        "detail": "Receive Undo/Redo from the collaboration server.",
        "insertText": "FormIt.Collaboration.ReceiveUndoRedo(nHistoryID, nUndoValue, nBaseDeltaID, sBase64Delta);",
        "documentation": {
            "value": "# [FormIt.Collaboration.ReceiveUndoRedo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#ga7780a278e7885a9bebe7a5ade27f3d2e)\n\n## Receive Undo/Redo from the collaboration server.\n\n## Parameters\n* nHistoryID\n* nUndoValue\n* nBaseDeltaID\n* sBase64Delta\n"
        }
    },
    {
        "label": "FormIt.Collaboration.UnFollowCamera",
        "kind": "Function",
        "detail": "Parameters: Un-follow somebody else's camera.",
        "insertText": "FormIt.Collaboration.UnFollowCamera();",
        "documentation": {
            "value": "# [FormIt.Collaboration.UnFollowCamera](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__collaboration.html#gac4b86e49ffae886d557fe6894ac10da4)\n\n## Parameters: Un-follow somebody else's camera.\n\n"
        }
    },
    {
        "label": "FormIt.Commands.DoCommand",
        "kind": "Function",
        "detail": "Execute given command.",
        "insertText": "FormIt.Commands.DoCommand(command);",
        "documentation": {
            "value": "# [FormIt.Commands.DoCommand](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__commands.html#gaeaddcad88e44233a765a82d4572aeebe)\n\n## Execute given command.\n\n## Parameters\n* command\n"
        }
    },
    {
        "label": "FormIt.Commands.GetCommands",
        "kind": "Function",
        "detail": "Get the list of commands in FormIt.",
        "insertText": "FormIt.Commands.GetCommands();",
        "documentation": {
            "value": "# [FormIt.Commands.GetCommands](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__commands.html#ga8319ea98295b1f5b1cc545c7b0a40b87)\n\n## Get the list of commands in FormIt.\n\n"
        }
    },
    {
        "label": "FormIt.Commands.RegisterJSCommand",
        "kind": "Function",
        "detail": "Register the given command which will show up in the list of shortcuts.",
        "insertText": "FormIt.Commands.RegisterJSCommand(command);",
        "documentation": {
            "value": "# [FormIt.Commands.RegisterJSCommand](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__commands.html#ga818f5d665fd247709e6f8702188a5fbb)\n\n## Register the given command which will show up in the list of shortcuts.\n\n## Parameters\n* command\n"
        }
    },
    {
        "label": "FormIt.Configuration.ConfigureFromJSON",
        "kind": "Function",
        "detail": "Configure the UI from the given JSON Data Parameters: In: JSON string Out: True, if configuration was successful.",
        "insertText": "FormIt.Configuration.ConfigureFromJSON(configurationJSON);",
        "documentation": {
            "value": "# [FormIt.Configuration.ConfigureFromJSON](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga45f6a213a9e7e1f5824e85bfc7cdc69f)\n\n## Configure the UI from the given JSON Data Parameters: In: JSON string Out: True, if configuration was successful.\n\n## Parameters\n* configurationJSON\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetAllContextMenuTools",
        "kind": "Function",
        "detail": "Get the names and ids of all context menu tools Parameters: In: Out: vector of id - name pairs.",
        "insertText": "FormIt.Configuration.GetAllContextMenuTools();",
        "documentation": {
            "value": "# [FormIt.Configuration.GetAllContextMenuTools](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga8fd625a60f6f7ed70e43319fc426424a)\n\n## Get the names and ids of all context menu tools Parameters: In: Out: vector of id - name pairs.\n\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetAllImplicitTools",
        "kind": "Function",
        "detail": "Get all formit native implicit tools ids and names Parameters: In: Out: vector of id - name pairs.",
        "insertText": "FormIt.Configuration.GetAllImplicitTools();",
        "documentation": {
            "value": "# [FormIt.Configuration.GetAllImplicitTools](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#gae18fa09957cd61290376bbb0bb784a78)\n\n## Get all formit native implicit tools ids and names Parameters: In: Out: vector of id - name pairs.\n\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetAllPalettes",
        "kind": "Function",
        "detail": "Get the names and ids of all palettes Parameters: In: Out: vector of id - name pairs.",
        "insertText": "FormIt.Configuration.GetAllPalettes();",
        "documentation": {
            "value": "# [FormIt.Configuration.GetAllPalettes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga5f20e5775f245ea59da9a228d685fa78)\n\n## Get the names and ids of all palettes Parameters: In: Out: vector of id - name pairs.\n\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetAllProjectBarItems",
        "kind": "Function",
        "detail": "Get the names and ids of all project bar items Parameters: In: Out: vector of id - name pairs.",
        "insertText": "FormIt.Configuration.GetAllProjectBarItems();",
        "documentation": {
            "value": "# [FormIt.Configuration.GetAllProjectBarItems](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga39d0867e47e107bc530aed65b47a056b)\n\n## Get the names and ids of all project bar items Parameters: In: Out: vector of id - name pairs.\n\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetAllToolGroups",
        "kind": "Function",
        "detail": "Get the names and ids of all main tools Parameters: In: Out: vector of id - name pairs.",
        "insertText": "FormIt.Configuration.GetAllToolGroups();",
        "documentation": {
            "value": "# [FormIt.Configuration.GetAllToolGroups](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#gaecb8e3ff86f8f13b33bf8a0d3d12f33e)\n\n## Get the names and ids of all main tools Parameters: In: Out: vector of id - name pairs.\n\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetAllToolGroupTools",
        "kind": "Function",
        "detail": "Get the names and ids of all tools for a given tool group Parameters: In: Out: vector of id - name pairs.",
        "insertText": "FormIt.Configuration.GetAllToolGroupTools(toolGroupUUID);",
        "documentation": {
            "value": "# [FormIt.Configuration.GetAllToolGroupTools](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#gac01afd0ba1e63f42bc2c85cda1c5fc78)\n\n## Get the names and ids of all tools for a given tool group Parameters: In: Out: vector of id - name pairs.\n\n## Parameters\n* toolGroupUUID\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetContextMenuActionIdFromToolUUID",
        "kind": "Function",
        "detail": "Returns the tool UUID from a context menu action Parameters: In: tool UUID Out: action id.",
        "insertText": "FormIt.Configuration.GetContextMenuActionIdFromToolUUID(toolUUID);",
        "documentation": {
            "value": "# [FormIt.Configuration.GetContextMenuActionIdFromToolUUID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga9a47c3b75c2175de6b9cd448b950ce65)\n\n## Returns the tool UUID from a context menu action Parameters: In: tool UUID Out: action id.\n\n## Parameters\n* toolUUID\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetContextMenuToolUUIDFromActionId",
        "kind": "Function",
        "detail": "Returns the tool UUID from a context menu action Parameters: In: action id Out: tool UUID.",
        "insertText": "FormIt.Configuration.GetContextMenuToolUUIDFromActionId(actionId);",
        "documentation": {
            "value": "# [FormIt.Configuration.GetContextMenuToolUUIDFromActionId](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga2eaa4d744e72857d525fc510b48560fc)\n\n## Returns the tool UUID from a context menu action Parameters: In: action id Out: tool UUID.\n\n## Parameters\n* actionId\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetContextMenuToolUUIDs",
        "kind": "Function",
        "detail": "Returns a vector of UUIDs (as string) for the tools in the context menu currently configured Parameters: In: Out: vector of tool UUIDs.",
        "insertText": "FormIt.Configuration.GetContextMenuToolUUIDs();",
        "documentation": {
            "value": "# [FormIt.Configuration.GetContextMenuToolUUIDs](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga03b9a2058ec002aad31c2afc1008b216)\n\n## Returns a vector of UUIDs (as string) for the tools in the context menu currently configured Parameters: In: Out: vector of tool UUIDs.\n\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetToolGroupInfo",
        "kind": "Function",
        "detail": "Returns the info for a tool group, that the UI can use currently configured Parameters: In: UUID of tool group Out: vector of tool UUIDs, icon and other info.",
        "insertText": "FormIt.Configuration.GetToolGroupInfo(toolGroupUUID);",
        "documentation": {
            "value": "# [FormIt.Configuration.GetToolGroupInfo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga1cf8f29f885c0093093a5f475f87931f)\n\n## Returns the info for a tool group, that the UI can use currently configured Parameters: In: UUID of tool group Out: vector of tool UUIDs, icon and other info.\n\n## Parameters\n* toolGroupUUID\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetToolGroupUUIDs",
        "kind": "Function",
        "insertText": "FormIt.Configuration.GetToolGroupUUIDs();",
        "documentation": {
            "value": "# [FormIt.Configuration.GetToolGroupUUIDs](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga4a6a824f65da38238549e623098cf5c3)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Configuration.GetToolInfo",
        "kind": "Function",
        "detail": "Returns the info for a tool, that the UI can use Parameters: In: UUID of tool Out: tool name, tool icon, tool tip, formit tool type.",
        "insertText": "FormIt.Configuration.GetToolInfo(toolUUID);",
        "documentation": {
            "value": "# [FormIt.Configuration.GetToolInfo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga4758e52bbfc45abdeb38ef58e9dea311)\n\n## Returns the info for a tool, that the UI can use Parameters: In: UUID of tool Out: tool name, tool icon, tool tip, formit tool type.\n\n## Parameters\n* toolUUID\n"
        }
    },
    {
        "label": "FormIt.Configuration.IsPaletteConfigured",
        "kind": "Function",
        "detail": "Returns whether a palette should appear in the UI Parameters: In: UUID of palette Out: true/false.",
        "insertText": "FormIt.Configuration.IsPaletteConfigured(paletteUUID);",
        "documentation": {
            "value": "# [FormIt.Configuration.IsPaletteConfigured](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga87da3c882900f326142bbd43aef7e78a)\n\n## Returns whether a palette should appear in the UI Parameters: In: UUID of palette Out: true/false.\n\n## Parameters\n* paletteUUID\n"
        }
    },
    {
        "label": "FormIt.Configuration.IsProjectBarConfigured",
        "kind": "Function",
        "detail": "Returns whether a project bar item should appear in the UI Parameters: In: UUID of project bar item Out: true/false.",
        "insertText": "FormIt.Configuration.IsProjectBarConfigured(projectBarUUID);",
        "documentation": {
            "value": "# [FormIt.Configuration.IsProjectBarConfigured](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#ga9d4334632e2cbbef4212a3d624087c8c)\n\n## Returns whether a project bar item should appear in the UI Parameters: In: UUID of project bar item Out: true/false.\n\n## Parameters\n* projectBarUUID\n"
        }
    },
    {
        "label": "FormIt.Configuration.IsShortcutCommandConfigured",
        "kind": "Function",
        "detail": "Returns whether a shortcut command is configured Parameters: In: command name Out: true/false.",
        "insertText": "FormIt.Configuration.IsShortcutCommandConfigured(commandName);",
        "documentation": {
            "value": "# [FormIt.Configuration.IsShortcutCommandConfigured](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__configuration.html#gaffbd6f7431e25a0e264adbf68e758030)\n\n## Returns whether a shortcut command is configured Parameters: In: command name Out: true/false.\n\n## Parameters\n* commandName\n"
        }
    },
    {
        "label": "FormIt.Dynamo.DYNAnyBakeNodeSATFilesExist",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.DYNAnyBakeNodeSATFilesExist();",
        "documentation": {
            "value": "# [FormIt.Dynamo.DYNAnyBakeNodeSATFilesExist](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga6d5cb6ec109ab62104b5f05830b251ea)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.DYNGetSelectionNodes",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.DYNGetSelectionNodes();",
        "documentation": {
            "value": "# [FormIt.Dynamo.DYNGetSelectionNodes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#gaf7d1a7de51ed45bdea3bf112d4ba08a0)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.DYNRemoveBakeNodesSATFiles",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.DYNRemoveBakeNodesSATFiles();",
        "documentation": {
            "value": "# [FormIt.Dynamo.DYNRemoveBakeNodesSATFiles](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga1742872a7222783b4ccf8cdc5424762b)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.GetDynamoFile",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.GetDynamoFile();",
        "documentation": {
            "value": "# [FormIt.Dynamo.GetDynamoFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#gaa1894793ceab0ec1e692ac8cda8f39db)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.GetDynamoFileBakeNodes",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.GetDynamoFileBakeNodes();",
        "documentation": {
            "value": "# [FormIt.Dynamo.GetDynamoFileBakeNodes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#gaeaa3c69ec66326d1c4905859b97eefd4)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.GetDynamoGroupName",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.GetDynamoGroupName();",
        "documentation": {
            "value": "# [FormIt.Dynamo.GetDynamoGroupName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#gab605327878772e0f1dc31c713623e2c8)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.GetDynamoHistoryInCurrentContext",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.GetDynamoHistoryInCurrentContext();",
        "documentation": {
            "value": "# [FormIt.Dynamo.GetDynamoHistoryInCurrentContext](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#gac3644619508b7cef47e527b35f656248)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.GetDynamoHistoryInPath",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.GetDynamoHistoryInPath();",
        "documentation": {
            "value": "# [FormIt.Dynamo.GetDynamoHistoryInPath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga82b187444160df5e9a93fdf3ed3486a4)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.GetInputNode",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.GetInputNode();",
        "documentation": {
            "value": "# [FormIt.Dynamo.GetInputNode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#gae0c97739159dfaa819acd5fc26146811)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.GetInputNodes",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.GetInputNodes();",
        "documentation": {
            "value": "# [FormIt.Dynamo.GetInputNodes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga128549907cdb6d5d137b78e41b9cfcfa)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.GetSelectedDynamoHistory",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.GetSelectedDynamoHistory();",
        "documentation": {
            "value": "# [FormIt.Dynamo.GetSelectedDynamoHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga3025f0c4dc1f06eee90be06c47a28777)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.GetUuid",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.GetUuid();",
        "documentation": {
            "value": "# [FormIt.Dynamo.GetUuid](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga161007f8b92664458bc21e2cf169cf46)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.HasFormItBakeToFormItNode",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.HasFormItBakeToFormItNode();",
        "documentation": {
            "value": "# [FormIt.Dynamo.HasFormItBakeToFormItNode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga7e1ca2f7ecf59f3ed69bd7b0841640a8)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.HasFormItSelectionNodes",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.HasFormItSelectionNodes();",
        "documentation": {
            "value": "# [FormIt.Dynamo.HasFormItSelectionNodes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga601c1ac77453fa184d1fa275bcfb532f)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.IsDynamoHistory",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.IsDynamoHistory();",
        "documentation": {
            "value": "# [FormIt.Dynamo.IsDynamoHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga6d1d95c58f3a21ef8bde45954dcda5ab)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.SetDynamoFile",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.SetDynamoFile();",
        "documentation": {
            "value": "# [FormIt.Dynamo.SetDynamoFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga9cbc240937752da67f2769a2a43f9c6f)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.UpdateRenderer",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.UpdateRenderer();",
        "documentation": {
            "value": "# [FormIt.Dynamo.UpdateRenderer](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#ga79f54703669d0f758ad575c6fc4ac066)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Dynamo.WriteDYNFile",
        "kind": "Function",
        "insertText": "FormIt.Dynamo.WriteDYNFile();",
        "documentation": {
            "value": "# [FormIt.Dynamo.WriteDYNFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__dynamo.html#gae086eaa1f2120585cbb00f8fb3c6b361)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Files.GetSupportedFilesList",
        "kind": "Function",
        "insertText": "FormIt.Files.GetSupportedFilesList();",
        "documentation": {
            "value": "# [FormIt.Files.GetSupportedFilesList](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__files.html#ga941fc06a564ffc892b147af97afcfab3)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Files.IsFileSupported",
        "kind": "Function",
        "detail": "Check if a file extension is supported Parameters: In: extension File extension to check if is supported In: action File action (eg: Load or Save file) In: type File's content type (eg: 3D Model or Image) In: Dialog box which shows the supported file types(deafult local) Out: bool.",
        "insertText": "FormIt.Files.IsFileSupported(extension, action, type, dialogType);",
        "documentation": {
            "value": "# [FormIt.Files.IsFileSupported](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__files.html#ga17e9e7ae41a7143f35d0bb32c463be73)\n\n## Check if a file extension is supported Parameters: In: extension File extension to check if is supported In: action File action (eg: Load or Save file) In: type File's content type (eg: 3D Model or Image) In: Dialog box which shows the supported file types(deafult local) Out: bool.\n\n## Parameters\n* extension\n* action\n* type\n* dialogType\n"
        }
    },
    {
        "label": "FormIt.FileSystem.FileExists",
        "kind": "Function",
        "detail": "TODO Make FileSystem API available on Emscripten.",
        "insertText": "FormIt.FileSystem.FileExists(path);",
        "documentation": {
            "value": "# [FormIt.FileSystem.FileExists](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__filesystem.html#ga3a679d3ea693d7a929abd635d888078b)\n\n## TODO Make FileSystem API available on Emscripten.\n\n## Parameters\n* path\n"
        }
    },
    {
        "label": "FormIt.FileSystem.Remove",
        "kind": "Function",
        "detail": "Remove() function.",
        "insertText": "FormIt.FileSystem.Remove(path);",
        "documentation": {
            "value": "# [FormIt.FileSystem.Remove](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__filesystem.html#gaf646a4f2723c5d6eed1f5ec433e04b15)\n\n## Remove() function.\n\n## Parameters\n* path\n"
        }
    },
    {
        "label": "FormIt.Forge.UI.ErrorCodeToUIMessage",
        "kind": "Function",
        "detail": "Forge ErrorCode to UI Message.",
        "insertText": "FormIt.Forge.UI.ErrorCodeToUIMessage(code);",
        "documentation": {
            "value": "# [FormIt.Forge.UI.ErrorCodeToUIMessage](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__forge__ui.html#gac5773efdede04c8afef8723bf85d5199)\n\n## Forge ErrorCode to UI Message.\n\n## Parameters\n* code\n"
        }
    },
    {
        "label": "FormIt.GroupEdit.EndEditInContext",
        "kind": "Function",
        "detail": "End editing in context.",
        "insertText": "FormIt.GroupEdit.EndEditInContext();",
        "documentation": {
            "value": "# [FormIt.GroupEdit.EndEditInContext](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__groupedit.html#ga907cf5045b80021dc7abf368f8174693)\n\n## End editing in context.\n\n"
        }
    },
    {
        "label": "FormIt.GroupEdit.ExitToParentContext",
        "kind": "Function",
        "detail": "Exit to the parent context.",
        "insertText": "FormIt.GroupEdit.ExitToParentContext();",
        "documentation": {
            "value": "# [FormIt.GroupEdit.ExitToParentContext](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__groupedit.html#gaa4915de6e9d85bcd2efade42ad0b4934)\n\n## Exit to the parent context.\n\n"
        }
    },
    {
        "label": "FormIt.GroupEdit.GetEditingHistoryID",
        "kind": "Function",
        "insertText": "FormIt.GroupEdit.GetEditingHistoryID();",
        "documentation": {
            "value": "# [FormIt.GroupEdit.GetEditingHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__groupedit.html#ga5489ab0ad58bb49527b90de26e9a1cc1)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.GroupEdit.GetInContextEditingPath",
        "kind": "Function",
        "detail": "Get the editing context path.",
        "insertText": "FormIt.GroupEdit.GetInContextEditingPath();",
        "documentation": {
            "value": "# [FormIt.GroupEdit.GetInContextEditingPath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__groupedit.html#ga0398acaf74e8acb99df57a6da5a9dbc1)\n\n## Get the editing context path.\n\n"
        }
    },
    {
        "label": "FormIt.GroupEdit.GetShowEditedGroupOnly",
        "kind": "Function",
        "detail": "Returns the status of the \"Show Edited Group Only\" option.",
        "insertText": "FormIt.GroupEdit.GetShowEditedGroupOnly();",
        "documentation": {
            "value": "# [FormIt.GroupEdit.GetShowEditedGroupOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__groupedit.html#ga28467a5af511cfe8dff1193ccdbf30b0)\n\n## Returns the status of the \"Show Edited Group Only\" option.\n\n"
        }
    },
    {
        "label": "FormIt.GroupEdit.IsEditingInContext",
        "kind": "Function",
        "detail": "Returns true if edit in context is happening.",
        "insertText": "FormIt.GroupEdit.IsEditingInContext();",
        "documentation": {
            "value": "# [FormIt.GroupEdit.IsEditingInContext](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__groupedit.html#ga352b75e6e466bba2df675dec21a89a88)\n\n## Returns true if edit in context is happening.\n\n"
        }
    },
    {
        "label": "FormIt.GroupEdit.SetInContextEditingPath",
        "kind": "Function",
        "insertText": "FormIt.GroupEdit.SetInContextEditingPath();",
        "documentation": {
            "value": "# [FormIt.GroupEdit.SetInContextEditingPath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__groupedit.html#ga1a228d7bb5e3aff4b3d0538ab93e7a0e)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.GroupEdit.SetShowEditedGroupOnly",
        "kind": "Function",
        "detail": "Sets the status of the \"Show Edited Group Only\" option.",
        "insertText": "FormIt.GroupEdit.SetShowEditedGroupOnly(val, show);",
        "documentation": {
            "value": "# [FormIt.GroupEdit.SetShowEditedGroupOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__groupedit.html#ga057be6edc3c724c725e070027f640427)\n\n## Sets the status of the \"Show Edited Group Only\" option.\n\n## Parameters\n* val\n* show\n"
        }
    },
    {
        "label": "FormIt.HUDManager.GetNumWidgets",
        "kind": "Function",
        "detail": "GetNumWidgets() function.",
        "insertText": "FormIt.HUDManager.GetNumWidgets();",
        "documentation": {
            "value": "# [FormIt.HUDManager.GetNumWidgets](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__hudmanager.html#ga48bfd30dc1da7fc575de06530afb19df)\n\n## GetNumWidgets() function.\n\n"
        }
    },
    {
        "label": "FormIt.HUDManager.ResetHUD",
        "kind": "Function",
        "detail": "ResetHUD() function.",
        "insertText": "FormIt.HUDManager.ResetHUD();",
        "documentation": {
            "value": "# [FormIt.HUDManager.ResetHUD](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__hudmanager.html#ga48501c2c330104e778d9850892474714)\n\n## ResetHUD() function.\n\n"
        }
    },
    {
        "label": "FormIt.HUDManager.WidgetTextInput",
        "kind": "Function",
        "detail": "WidgetTextInput() function.",
        "insertText": "FormIt.HUDManager.WidgetTextInput(widgetID, text);",
        "documentation": {
            "value": "# [FormIt.HUDManager.WidgetTextInput](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__hudmanager.html#gaf078f913b73de208a0447e3baf7d5728)\n\n## WidgetTextInput() function.\n\n## Parameters\n* widgetID\n* text\n"
        }
    },
    {
        "label": "FormIt.ImageManager.GetAllImages",
        "kind": "Function",
        "detail": "Gets all images in given history.",
        "insertText": "FormIt.ImageManager.GetAllImages(nHistoryID, nSort);",
        "documentation": {
            "value": "# [FormIt.ImageManager.GetAllImages](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__imagemanager.html#ga12392a0bf68c3ebb5bda7e301c27d8be)\n\n## Gets all images in given history.\n\n## Parameters\n* nHistoryID\n* nSort\n"
        }
    },
    {
        "label": "FormIt.ImageManager.GetData",
        "kind": "Function",
        "detail": "Gets ImageData for a single image.",
        "insertText": "FormIt.ImageManager.GetData(nHistoryID, nImageID, aIncludeSatelliteData);",
        "documentation": {
            "value": "# [FormIt.ImageManager.GetData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__imagemanager.html#gab0fbefe47125dad74856b97af4f6a0cf)\n\n## Gets ImageData for a single image.\n\n## Parameters\n* nHistoryID\n* nImageID\n* aIncludeSatelliteData\n"
        }
    },
    {
        "label": "FormIt.ImageManager.ImportImage",
        "kind": "Function",
        "detail": "Gets all images in given history.",
        "insertText": "FormIt.ImageManager.ImportImage(fileName,pixelWidth,pixelHeight,worldWidth,worldHeight,isSatelliteImage,addToSelections, nHistoryID, fileName, pixelWidth, pixelHeight, worldWidth, worldHeight, isSatelliteImage, addToSelections);",
        "documentation": {
            "value": "# [FormIt.ImageManager.ImportImage](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__imagemanager.html#ga09c585b88fd595222800e9c7db82e5a5)\n\n## Gets all images in given history.\n\n## Parameters\n* fileName,pixelWidth,pixelHeight,worldWidth,worldHeight,isSatelliteImage,addToSelections\n* nHistoryID\n* fileName\n* pixelWidth\n* pixelHeight\n* worldWidth\n* worldHeight\n* isSatelliteImage\n* addToSelections\n"
        }
    },
    {
        "label": "FormIt.ImageManager.ReloadImageLayerWithImage",
        "kind": "Function",
        "insertText": "FormIt.ImageManager.ReloadImageLayerWithImage();",
        "documentation": {
            "value": "# [FormIt.ImageManager.ReloadImageLayerWithImage](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__imagemanager.html#ga1a88b26a10c288055905e4500a9044a3)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.ImageManager.ReloadImageLayerWithPlaceholder",
        "kind": "Function",
        "detail": "Reloads a layer with a placeholder image.",
        "insertText": "FormIt.ImageManager.ReloadImageLayerWithPlaceholder(nHistoryID, nLayerID);",
        "documentation": {
            "value": "# [FormIt.ImageManager.ReloadImageLayerWithPlaceholder](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__imagemanager.html#ga5f07ab1e58f35e2f67ccdab311ad7048)\n\n## Reloads a layer with a placeholder image.\n\n## Parameters\n* nHistoryID\n* nLayerID\n"
        }
    },
    {
        "label": "FormIt.ImageManager.ReloadTerrain",
        "kind": "Function",
        "detail": "Reloads terrain based on elevation data and an image.",
        "insertText": "FormIt.ImageManager.ReloadTerrain(nHistoryID, nImageID, imageFile, nRows, nCols, elevations);",
        "documentation": {
            "value": "# [FormIt.ImageManager.ReloadTerrain](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__imagemanager.html#ga25d3b582f2e3b86e792d4eb593f86dc4)\n\n## Reloads terrain based on elevation data and an image.\n\n## Parameters\n* nHistoryID\n* nImageID\n* imageFile\n* nRows\n* nCols\n* elevations\n"
        }
    },
    {
        "label": "FormIt.ImageManager.SetImageAlpha",
        "kind": "Function",
        "detail": "Set the Image alpha.",
        "insertText": "FormIt.ImageManager.SetImageAlpha(nHistoryID,imageID,fAlpha,bFinalChange, nHistoryID, imageID, fAlpha, bFinalChange);",
        "documentation": {
            "value": "# [FormIt.ImageManager.SetImageAlpha](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__imagemanager.html#ga5ac33268cffd00425fca2c4ab5c687eb)\n\n## Set the Image alpha.\n\n## Parameters\n* nHistoryID,imageID,fAlpha,bFinalChange\n* nHistoryID\n* imageID\n* fAlpha\n* bFinalChange\n"
        }
    },
    {
        "label": "FormIt.ImageManager.SetImageName",
        "kind": "Function",
        "detail": "Set the Image name.",
        "insertText": "FormIt.ImageManager.SetImageName(nHistoryID,imageID,name, nHistoryID, imageID, name);",
        "documentation": {
            "value": "# [FormIt.ImageManager.SetImageName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__imagemanager.html#gacbb48128a1b8dd2b67607ba1aa4d3c6b)\n\n## Set the Image name.\n\n## Parameters\n* nHistoryID,imageID,name\n* nHistoryID\n* imageID\n* name\n"
        }
    },
    {
        "label": "FormIt.ImageManager.SetImagePosition",
        "kind": "Function",
        "detail": "Set the Image Position.",
        "insertText": "FormIt.ImageManager.SetImagePosition(nHistoryID,imageID,nPosition, nHistoryID, imageID, nPosition);",
        "documentation": {
            "value": "# [FormIt.ImageManager.SetImagePosition](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__imagemanager.html#ga55b695623dde9068092ce1ff656db950)\n\n## Set the Image Position.\n\n## Parameters\n* nHistoryID,imageID,nPosition\n* nHistoryID\n* imageID\n* nPosition\n"
        }
    },
    {
        "label": "FormIt.Layers.AddLayer",
        "kind": "Function",
        "detail": "AddLayer creates a new layer in the given history.",
        "insertText": "FormIt.Layers.AddLayer(historyID, layerName, visible);",
        "documentation": {
            "value": "# [FormIt.Layers.AddLayer](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga14ac078eeac7e68988b848862727acfc)\n\n## AddLayer creates a new layer in the given history.\n\n## Parameters\n* historyID\n* layerName\n* visible\n"
        }
    },
    {
        "label": "FormIt.Layers.AssignLayerToObjects",
        "kind": "Function",
        "insertText": "FormIt.Layers.AssignLayerToObjects();",
        "documentation": {
            "value": "# [FormIt.Layers.AssignLayerToObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#gadaf8e65054f9454145b48711850b2103)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Layers.ChangeLayerOrder",
        "kind": "Function",
        "detail": "ChangeLayerOrder gives a layer a new position in the list.",
        "insertText": "FormIt.Layers.ChangeLayerOrder(layerID, newPosition);",
        "documentation": {
            "value": "# [FormIt.Layers.ChangeLayerOrder](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga2532c94c93565795055d56bb7480add0)\n\n## ChangeLayerOrder gives a layer a new position in the list.\n\n## Parameters\n* layerID\n* newPosition\n"
        }
    },
    {
        "label": "FormIt.Layers.DeleteLayers",
        "kind": "Function",
        "detail": "DeleteLayers deletes a list of layers.",
        "insertText": "FormIt.Layers.DeleteLayers(aLayerIDs);",
        "documentation": {
            "value": "# [FormIt.Layers.DeleteLayers](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#gae767326a287e6829be1950b107f171d3)\n\n## DeleteLayers deletes a list of layers.\n\n## Parameters\n* aLayerIDs\n"
        }
    },
    {
        "label": "FormIt.Layers.GetAllLayerData",
        "kind": "Function",
        "detail": "GetAllLayerData gets the data for all layers.",
        "insertText": "FormIt.Layers.GetAllLayerData();",
        "documentation": {
            "value": "# [FormIt.Layers.GetAllLayerData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#gabbe5121a7a09441a53ab1a26061ecf46)\n\n## GetAllLayerData gets the data for all layers.\n\n"
        }
    },
    {
        "label": "FormIt.Layers.GetAllLayers",
        "kind": "Function",
        "insertText": "FormIt.Layers.GetAllLayers();",
        "documentation": {
            "value": "# [FormIt.Layers.GetAllLayers](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#gafcb00791642c158f924e643e1b107d14)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Layers.GetAllObjectsOnLayers",
        "kind": "Function",
        "detail": "GetAllObjectsOnLayers gets all objects that are on the given layers.",
        "insertText": "FormIt.Layers.GetAllObjectsOnLayers(layerIDs, allHistories);",
        "documentation": {
            "value": "# [FormIt.Layers.GetAllObjectsOnLayers](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#gaff2b52a341cd8d4c428979ea01afb16a)\n\n## GetAllObjectsOnLayers gets all objects that are on the given layers.\n\n## Parameters\n* layerIDs\n* allHistories\n"
        }
    },
    {
        "label": "FormIt.Layers.GetLayerData",
        "kind": "Function",
        "detail": "GetLayerData gets the data for a single layer.",
        "insertText": "FormIt.Layers.GetLayerData(layerID);",
        "documentation": {
            "value": "# [FormIt.Layers.GetLayerData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga4cc449616997b99151645c2df9be5cf5)\n\n## GetLayerData gets the data for a single layer.\n\n## Parameters\n* layerID\n"
        }
    },
    {
        "label": "FormIt.Layers.GetLayerID",
        "kind": "Function",
        "detail": "GetLayerID returns the formit layer id from a layer name or WSM.INVALID_ID if a layer with that name does not exist.",
        "insertText": "FormIt.Layers.GetLayerID(layerName);",
        "documentation": {
            "value": "# [FormIt.Layers.GetLayerID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#gac4cfbb5735adf6b3708cb4bcbdb40bd5)\n\n## GetLayerID returns the formit layer id from a layer name or WSM.INVALID_ID if a layer with that name does not exist.\n\n## Parameters\n* layerName\n"
        }
    },
    {
        "label": "FormIt.Layers.GetLayerList",
        "kind": "Function",
        "detail": "GetLayerList gets a list of all layers as LayerData.",
        "insertText": "FormIt.Layers.GetLayerList();",
        "documentation": {
            "value": "# [FormIt.Layers.GetLayerList](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga7e144d1df4ac0721e5a71004610fad5b)\n\n## GetLayerList gets a list of all layers as LayerData.\n\n"
        }
    },
    {
        "label": "FormIt.Layers.GetObjectLayerID",
        "kind": "Function",
        "detail": "GetObjectLayerID returns the layer id for the object.",
        "insertText": "FormIt.Layers.GetObjectLayerID(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [FormIt.Layers.GetObjectLayerID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga556b0adc2fcfb453f24366e171c4aae1)\n\n## GetObjectLayerID returns the layer id for the object.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "FormIt.Layers.GetObjectsLayerList",
        "kind": "Function",
        "detail": "GetObjectsLayerList returns the set of layers the given Objects are on.",
        "insertText": "FormIt.Layers.GetObjectsLayerList(bIncludeNoLayer, groupInstacePathArray);",
        "documentation": {
            "value": "# [FormIt.Layers.GetObjectsLayerList](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga90bac5f5187e75473747d7a7104d7e1d)\n\n## GetObjectsLayerList returns the set of layers the given Objects are on.\n\n## Parameters\n* bIncludeNoLayer\n* groupInstacePathArray\n"
        }
    },
    {
        "label": "FormIt.Layers.IsValid",
        "kind": "Function",
        "detail": "IsValid returns whether a layer id is valid.",
        "insertText": "FormIt.Layers.IsValid(layerID);",
        "documentation": {
            "value": "# [FormIt.Layers.IsValid](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#gaa431686e7c2ecfedeefcef71083ab489)\n\n## IsValid returns whether a layer id is valid.\n\n## Parameters\n* layerID\n"
        }
    },
    {
        "label": "FormIt.Layers.IsValidLayerName",
        "kind": "Function",
        "detail": "IsValidLayerName checks whether the name is valid for a layer.",
        "insertText": "FormIt.Layers.IsValidLayerName(layerID, newLayerName);",
        "documentation": {
            "value": "# [FormIt.Layers.IsValidLayerName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#gaa5b4787b608f75ef52858a4c77305cfa)\n\n## IsValidLayerName checks whether the name is valid for a layer.\n\n## Parameters\n* layerID\n* newLayerName\n"
        }
    },
    {
        "label": "FormIt.Layers.IsValidObjectForLayerAssignment",
        "kind": "Function",
        "detail": "IsValidObjectForLayerAssignment returns whether the given object can be assigned a layer object must be top level (non owned) or a group instance.",
        "insertText": "FormIt.Layers.IsValidObjectForLayerAssignment(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [FormIt.Layers.IsValidObjectForLayerAssignment](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#gad24e932e1c1357ab1c753a692deca671)\n\n## IsValidObjectForLayerAssignment returns whether the given object can be assigned a layer object must be top level (non owned) or a group instance.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "FormIt.Layers.LayerExists",
        "kind": "Function",
        "detail": "LayerExists returns true if a layer with the given name exists.",
        "insertText": "FormIt.Layers.LayerExists(layerName);",
        "documentation": {
            "value": "# [FormIt.Layers.LayerExists](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga2acd0addc636bf93bfdacb9c18741e49)\n\n## LayerExists returns true if a layer with the given name exists.\n\n## Parameters\n* layerName\n"
        }
    },
    {
        "label": "FormIt.Layers.RemoveLayersFromObjects",
        "kind": "Function",
        "insertText": "FormIt.Layers.RemoveLayersFromObjects();",
        "documentation": {
            "value": "# [FormIt.Layers.RemoveLayersFromObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga7e91e029ce8164704ce2d1e37c1e6a90)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Layers.SetLayerName",
        "kind": "Function",
        "detail": "SetLayerName set a new name for the given layer.",
        "insertText": "FormIt.Layers.SetLayerName(layerID, newLayerName);",
        "documentation": {
            "value": "# [FormIt.Layers.SetLayerName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga1c31426b27644eed282338857c2754a9)\n\n## SetLayerName set a new name for the given layer.\n\n## Parameters\n* layerID\n* newLayerName\n"
        }
    },
    {
        "label": "FormIt.Layers.SetLayerPickable",
        "kind": "Function",
        "detail": "Set the pickable status of a layer.",
        "insertText": "FormIt.Layers.SetLayerPickable(layerID, pickable);",
        "documentation": {
            "value": "# [FormIt.Layers.SetLayerPickable](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga498b2b2c292f3f303197c041e96d417f)\n\n## Set the pickable status of a layer.\n\n## Parameters\n* layerID\n* pickable\n"
        }
    },
    {
        "label": "FormIt.Layers.SetLayersVisibility",
        "kind": "Function",
        "detail": "SetLayersVisibility sets the visibility of a vector of layers.",
        "insertText": "FormIt.Layers.SetLayersVisibility(aLayersVisibility);",
        "documentation": {
            "value": "# [FormIt.Layers.SetLayersVisibility](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga93a5e9ca9c67c49a2f96cbc833d8f6cc)\n\n## SetLayersVisibility sets the visibility of a vector of layers.\n\n## Parameters\n* aLayersVisibility\n"
        }
    },
    {
        "label": "FormIt.Layers.SetLayerVisibility",
        "kind": "Function",
        "detail": "SetLayerVisibility sets the visibility of layer with a given name and visibility toggle.",
        "insertText": "FormIt.Layers.SetLayerVisibility(layerName, visibility);",
        "documentation": {
            "value": "# [FormIt.Layers.SetLayerVisibility](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga2ee6dad36b3add41e2c79c0816358d51)\n\n## SetLayerVisibility sets the visibility of layer with a given name and visibility toggle.\n\n## Parameters\n* layerName\n* visibility\n"
        }
    },
    {
        "label": "FormIt.Layers.SetLoadInRevit",
        "kind": "Function",
        "detail": "Set the load in Revit status of a layer.",
        "insertText": "FormIt.Layers.SetLoadInRevit(layerID, load);",
        "documentation": {
            "value": "# [FormIt.Layers.SetLoadInRevit](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__layers.html#ga787011107de56766459a4b4c9ad607cf)\n\n## Set the load in Revit status of a layer.\n\n## Parameters\n* layerID\n* load\n"
        }
    },
    {
        "label": "FormIt.Levels.AddLevels",
        "kind": "Function",
        "insertText": "FormIt.Levels.AddLevels();",
        "documentation": {
            "value": "# [FormIt.Levels.AddLevels](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga5fccccf904e90417cd49a37b9d7f4380)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Levels.AutoRenameLevels",
        "kind": "Function",
        "detail": "Renames all levels with a default name according to the elevation order.",
        "insertText": "FormIt.Levels.AutoRenameLevels(historyID, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.AutoRenameLevels](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga779aca6635d06159f990da327141fe65)\n\n## Renames all levels with a default name according to the elevation order.\n\n## Parameters\n* historyID\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.ChangeLevelElevation",
        "kind": "Function",
        "detail": "Change the given level's elevation.",
        "insertText": "FormIt.Levels.ChangeLevelElevation(historyID, levelID, newElevation, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.ChangeLevelElevation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gacc781728e5dcea37027786693d2397e3)\n\n## Change the given level's elevation.\n\n## Parameters\n* historyID\n* levelID\n* newElevation\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.ChangeLevelName",
        "kind": "Function",
        "detail": "Change the given level's name.",
        "insertText": "FormIt.Levels.ChangeLevelName(levelID, levelName);",
        "documentation": {
            "value": "# [FormIt.Levels.ChangeLevelName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gaa263d16657e22f4f45d1d69abb0134aa)\n\n## Change the given level's name.\n\n## Parameters\n* levelID\n* levelName\n"
        }
    },
    {
        "label": "FormIt.Levels.CreateDefaultLevels",
        "kind": "Function",
        "detail": "Create default levels in the given History.",
        "insertText": "FormIt.Levels.CreateDefaultLevels(historyID, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.CreateDefaultLevels](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga79a5d33cad9159f1e04cde8cd733bb31)\n\n## Create default levels in the given History.\n\n## Parameters\n* historyID\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.DeleteLevels",
        "kind": "Function",
        "detail": "Delete the given levels in the given History.",
        "insertText": "FormIt.Levels.DeleteLevels(historyID, aLevelIDs, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.DeleteLevels](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gaeb6e1bfb6a553a1ccd13d1e58ca9439b)\n\n## Delete the given levels in the given History.\n\n## Parameters\n* historyID\n* aLevelIDs\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.GetAreaForObjects",
        "kind": "Function",
        "detail": "GetAreaForObjects.",
        "insertText": "FormIt.Levels.GetAreaForObjects(nHistoryID, aLevelId, aObjectIds);",
        "documentation": {
            "value": "# [FormIt.Levels.GetAreaForObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga77108de656ee6fbe923a4867dad2d75d)\n\n## GetAreaForObjects.\n\n## Parameters\n* nHistoryID\n* aLevelId\n* aObjectIds\n"
        }
    },
    {
        "label": "FormIt.Levels.GetDefaultLevelHeight",
        "kind": "Function",
        "detail": "Returns the default level height.",
        "insertText": "FormIt.Levels.GetDefaultLevelHeight();",
        "documentation": {
            "value": "# [FormIt.Levels.GetDefaultLevelHeight](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga22b3f2fda2ab75e1e88c6e06b1aa8b3e)\n\n## Returns the default level height.\n\n"
        }
    },
    {
        "label": "FormIt.Levels.GetLevelData",
        "kind": "Function",
        "detail": "GetLevelData.",
        "insertText": "FormIt.Levels.GetLevelData(historyID, levelID, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.GetLevelData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga37dd512e73cfb4eb2e0482a40f63e5d1)\n\n## GetLevelData.\n\n## Parameters\n* historyID\n* levelID\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.GetLevelIDsFromSelectedObjects",
        "kind": "Function",
        "detail": "Returns the union of levels of each object and the Result (Success).",
        "insertText": "FormIt.Levels.GetLevelIDsFromSelectedObjects(historyID, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.GetLevelIDsFromSelectedObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga875e04de7f730d592914b1986031ff82)\n\n## Returns the union of levels of each object and the Result (Success).\n\n## Parameters\n* historyID\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.GetLevels",
        "kind": "Function",
        "detail": "Returns a vector of all levels within a history.",
        "insertText": "FormIt.Levels.GetLevels(historyID, sortByElevation, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.GetLevels](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gaae73a9f9ecdf718dc3547a5c3eda49f3)\n\n## Returns a vector of all levels within a history.\n\n## Parameters\n* historyID\n* sortByElevation\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.GetLevelsData",
        "kind": "Function",
        "detail": "Returns a vector of LevelData for all levels within a history.",
        "insertText": "FormIt.Levels.GetLevelsData(historyID, sortByElevation, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.GetLevelsData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gad933da5acac8c7152ce68de9d549dbac)\n\n## Returns a vector of LevelData for all levels within a history.\n\n## Parameters\n* historyID\n* sortByElevation\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.GetLevelsVisible",
        "kind": "Function",
        "detail": "Returns if levels are visible.",
        "insertText": "FormIt.Levels.GetLevelsVisible();",
        "documentation": {
            "value": "# [FormIt.Levels.GetLevelsVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga9ca3629889c8781dd4933e186aa34a6c)\n\n## Returns if levels are visible.\n\n"
        }
    },
    {
        "label": "FormIt.Levels.GetMaxLevelElevation",
        "kind": "Function",
        "detail": "Returns the elevation of the highest level in the given history.",
        "insertText": "FormIt.Levels.GetMaxLevelElevation(historyID, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.GetMaxLevelElevation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gacb5a00b5e2555786aaf2fe5bd3ee90ee)\n\n## Returns the elevation of the highest level in the given history.\n\n## Parameters\n* historyID\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.GetMinLevelElevation",
        "kind": "Function",
        "detail": "Returns the elevation of the lowest level in the given history.",
        "insertText": "FormIt.Levels.GetMinLevelElevation(historyID, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.GetMinLevelElevation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gad945c87289203c19cb2d61df9a891de8)\n\n## Returns the elevation of the lowest level in the given history.\n\n## Parameters\n* historyID\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.GetNumLevels",
        "kind": "Function",
        "detail": "Returns the number of levels in the given history.",
        "insertText": "FormIt.Levels.GetNumLevels(historyID, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Levels.GetNumLevels](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga367c4945c20ebe51be0dc6e59b7a53e6)\n\n## Returns the number of levels in the given history.\n\n## Parameters\n* historyID\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Levels.HasLevelsInProject",
        "kind": "Function",
        "detail": "Checks if there are any objects in the main history that have levels applied.",
        "insertText": "FormIt.Levels.HasLevelsInProject(checkVisibleOnly);",
        "documentation": {
            "value": "# [FormIt.Levels.HasLevelsInProject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga3de9bb7c4d03b1026620306e2e7fc297)\n\n## Checks if there are any objects in the main history that have levels applied.\n\n## Parameters\n* checkVisibleOnly\n"
        }
    },
    {
        "label": "FormIt.Levels.IsExistingLevel",
        "kind": "Function",
        "detail": "Returns true if the given Level name exists.",
        "insertText": "FormIt.Levels.IsExistingLevel(nHistoryID, levelName);",
        "documentation": {
            "value": "# [FormIt.Levels.IsExistingLevel](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga2a8d507fccbbc01633b92a4330084fb9)\n\n## Returns true if the given Level name exists.\n\n## Parameters\n* nHistoryID\n* levelName\n"
        }
    },
    {
        "label": "FormIt.Levels.IsExistingLevelByElevation",
        "kind": "Function",
        "insertText": "FormIt.Levels.IsExistingLevelByElevation();",
        "documentation": {
            "value": "# [FormIt.Levels.IsExistingLevelByElevation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gad43dafa5c1287111dcb9d41e1274afcc)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Levels.IsValidLevelDeltaElevation",
        "kind": "Function",
        "detail": "Checks if the string containing the delta elevation is valid.",
        "insertText": "FormIt.Levels.IsValidLevelDeltaElevation(nHistoryID, deltaElevationString, numLevels);",
        "documentation": {
            "value": "# [FormIt.Levels.IsValidLevelDeltaElevation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gab9aae02de89b2e1628ea19e4ab9ae68f)\n\n## Checks if the string containing the delta elevation is valid.\n\n## Parameters\n* nHistoryID\n* deltaElevationString\n* numLevels\n"
        }
    },
    {
        "label": "FormIt.Levels.IsValidLevelElevation",
        "kind": "Function",
        "detail": "Checks if the string containing the elevation is valid for a level.",
        "insertText": "FormIt.Levels.IsValidLevelElevation(nHistoryID, levelId, elevationString);",
        "documentation": {
            "value": "# [FormIt.Levels.IsValidLevelElevation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga3e1391d3dc1f9f9d3c688fb9de4063c0)\n\n## Checks if the string containing the elevation is valid for a level.\n\n## Parameters\n* nHistoryID\n* levelId\n* elevationString\n"
        }
    },
    {
        "label": "FormIt.Levels.IsValidLevelName",
        "kind": "Function",
        "detail": "Returns true is the given level name is valid.",
        "insertText": "FormIt.Levels.IsValidLevelName(levelID, levelName);",
        "documentation": {
            "value": "# [FormIt.Levels.IsValidLevelName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gad5544f10fd3b0e70d20ee0ee9c7d4704)\n\n## Returns true is the given level name is valid.\n\n## Parameters\n* levelID\n* levelName\n"
        }
    },
    {
        "label": "FormIt.Levels.IsValidNumberOfLevelsToAdd",
        "kind": "Function",
        "detail": "Checks if the string containing the number of levels is valid.",
        "insertText": "FormIt.Levels.IsValidNumberOfLevelsToAdd(nHistoryID, numLevelsString, deltaElevation);",
        "documentation": {
            "value": "# [FormIt.Levels.IsValidNumberOfLevelsToAdd](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gaebd97e105734da057e48ec9163471058)\n\n## Checks if the string containing the number of levels is valid.\n\n## Parameters\n* nHistoryID\n* numLevelsString\n* deltaElevation\n"
        }
    },
    {
        "label": "FormIt.Levels.SetLevelsToSelectedObjects",
        "kind": "Function",
        "detail": "Set the given levels to be the levels for all currently selected objects.",
        "insertText": "FormIt.Levels.SetLevelsToSelectedObjects(nHistoryID, aLevelList);",
        "documentation": {
            "value": "# [FormIt.Levels.SetLevelsToSelectedObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gaf7bd618763f87a34280e1e6a7a107afd)\n\n## Set the given levels to be the levels for all currently selected objects.\n\n## Parameters\n* nHistoryID\n* aLevelList\n"
        }
    },
    {
        "label": "FormIt.Levels.SetLevelsVisible",
        "kind": "Function",
        "detail": "Sets levels visibility.",
        "insertText": "FormIt.Levels.SetLevelsVisible(aVisible);",
        "documentation": {
            "value": "# [FormIt.Levels.SetLevelsVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#ga1b43eb34645ba7480462f690046763a7)\n\n## Sets levels visibility.\n\n## Parameters\n* aVisible\n"
        }
    },
    {
        "label": "FormIt.Levels.SetReportAreaByLevelsOnSelection",
        "kind": "Function",
        "detail": "SetReportAreaByLevelsOnSelection.",
        "insertText": "FormIt.Levels.SetReportAreaByLevelsOnSelection(bON);",
        "documentation": {
            "value": "# [FormIt.Levels.SetReportAreaByLevelsOnSelection](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__levels.html#gaf7c3c3f9c79ad896c9751509a52a50b9)\n\n## SetReportAreaByLevelsOnSelection.\n\n## Parameters\n* bON\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.CanModify",
        "kind": "Function",
        "detail": "Returns if a given material is modifiable (in some cases a material is marked as ReadOnly).",
        "insertText": "FormIt.MaterialProvider.CanModify(libraryType, materialId);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.CanModify](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#gadc3a3664ab086bb6418683263a3f638c)\n\n## Returns if a given material is modifiable (in some cases a material is marked as ReadOnly).\n\n## Parameters\n* libraryType\n* materialId\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.CreateMaterial",
        "kind": "Function",
        "detail": "Creates a new material from the given data.",
        "insertText": "FormIt.MaterialProvider.CreateMaterial(libraryType, materialData);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.CreateMaterial](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#ga3be2ec3b97bcd7208acd5e837d29b88c)\n\n## Creates a new material from the given data.\n\n## Parameters\n* libraryType\n* materialData\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.DeleteMaterials",
        "kind": "Function",
        "detail": "Deletes a list of given materials.",
        "insertText": "FormIt.MaterialProvider.DeleteMaterials(libraryType, materialIds);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.DeleteMaterials](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#gac302a7894ad13176fa61fdfb6fe24aa5)\n\n## Deletes a list of given materials.\n\n## Parameters\n* libraryType\n* materialIds\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.GetMaterialData",
        "kind": "Function",
        "detail": "Get the material data for the given material id.",
        "insertText": "FormIt.MaterialProvider.GetMaterialData(libraryType, materialId);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.GetMaterialData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#ga5b8c8d60208c1c4ab6e85596201b81fe)\n\n## Get the material data for the given material id.\n\n## Parameters\n* libraryType\n* materialId\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.GetMaterialName",
        "kind": "Function",
        "detail": "Get the material name for the given material id.",
        "insertText": "FormIt.MaterialProvider.GetMaterialName(libraryType, materialId);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.GetMaterialName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#ga642dba0a0967699de188f936f171fdee)\n\n## Get the material name for the given material id.\n\n## Parameters\n* libraryType\n* materialId\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.GetMaterialPreviewImage",
        "kind": "Function",
        "detail": "Get the preview image for the material.",
        "insertText": "FormIt.MaterialProvider.GetMaterialPreviewImage(libraryType, materialId);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.GetMaterialPreviewImage](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#ga718ba3b7fba1c133ed41f8683de083da)\n\n## Get the preview image for the material.\n\n## Parameters\n* libraryType\n* materialId\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.GetMaterials",
        "kind": "Function",
        "detail": "GetMaterials returns all the available materials.",
        "insertText": "FormIt.MaterialProvider.GetMaterials(libraryType);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.GetMaterials](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#ga3caddc2707140383081a5acf1980b496)\n\n## GetMaterials returns all the available materials.\n\n## Parameters\n* libraryType\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.GetNewMaterialName",
        "kind": "Function",
        "detail": "Returns a material name that is guaranteed not to exist.",
        "insertText": "FormIt.MaterialProvider.GetNewMaterialName(libraryType, baseName);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.GetNewMaterialName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#ga46f57db5b9792f60d3395712f54832c8)\n\n## Returns a material name that is guaranteed not to exist.\n\n## Parameters\n* libraryType\n* baseName\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.IsValidMaterial",
        "kind": "Function",
        "detail": "Check whether the material with the given id exists.",
        "insertText": "FormIt.MaterialProvider.IsValidMaterial(libraryType, materialId);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.IsValidMaterial](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#ga430654362a1f08e9e1b408fe3252a8d4)\n\n## Check whether the material with the given id exists.\n\n## Parameters\n* libraryType\n* materialId\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.IsValidMaterialName",
        "kind": "Function",
        "insertText": "FormIt.MaterialProvider.IsValidMaterialName();",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.IsValidMaterialName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#ga2131d7c5d54c966c5d5006486091748c)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.MaterialData",
        "kind": "Function",
        "insertText": "FormIt.MaterialProvider.MaterialData();",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.MaterialData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#gabd80abeb01dcdbb6f85c5caa535c96c8)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.MaterialProvider.SetMaterialData",
        "kind": "Function",
        "detail": "Sets the material data.",
        "insertText": "FormIt.MaterialProvider.SetMaterialData(libraryType, materialId, materialData);",
        "documentation": {
            "value": "# [FormIt.MaterialProvider.SetMaterialData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__materialprovider.html#ga0aa39db433eefebb63b3a0dd17135859)\n\n## Sets the material data.\n\n## Parameters\n* libraryType\n* materialId\n* materialData\n"
        }
    },
    {
        "label": "FormIt.Messaging.GetMessages",
        "kind": "Function",
        "insertText": "FormIt.Messaging.GetMessages();",
        "documentation": {
            "value": "# [FormIt.Messaging.GetMessages](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__messaging.html#gac1986b170763c934d66a1aa8061997ba)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Model.GetCurveAccuracyOrCountCurrent",
        "kind": "Function",
        "detail": "Get the curve accuracy.",
        "insertText": "FormIt.Model.GetCurveAccuracyOrCountCurrent();",
        "documentation": {
            "value": "# [FormIt.Model.GetCurveAccuracyOrCountCurrent](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga3bc773a87130b31ea3ddf65f14a1273d)\n\n## Get the curve accuracy.\n\n"
        }
    },
    {
        "label": "FormIt.Model.GetGroupHistoryName",
        "kind": "Function",
        "detail": "Get the name for the given history.",
        "insertText": "FormIt.Model.GetGroupHistoryName(nHistoryId, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Model.GetGroupHistoryName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga14261a85caf651af34d36e2550474911)\n\n## Get the name for the given history.\n\n## Parameters\n* nHistoryId\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Model.GetHistoryID",
        "kind": "Function",
        "detail": "Request the id of the history being edited - app supplied.",
        "insertText": "FormIt.Model.GetHistoryID();",
        "documentation": {
            "value": "# [FormIt.Model.GetHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga429407d750e202e0e178d5507471aab9)\n\n## Request the id of the history being edited - app supplied.\n\n"
        }
    },
    {
        "label": "FormIt.Model.GetMemorySize",
        "kind": "Function",
        "detail": "Get the memory size of the History of the main Model.",
        "insertText": "FormIt.Model.GetMemorySize(bool, bCollapsedHistoryWithLiveObjsOnly);",
        "documentation": {
            "value": "# [FormIt.Model.GetMemorySize](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga442eea913fe8058f94437531306c1a64)\n\n## Get the memory size of the History of the main Model.\n\n## Parameters\n* bool\n* bCollapsedHistoryWithLiveObjsOnly\n"
        }
    },
    {
        "label": "FormIt.Model.GetObjectName",
        "kind": "Function",
        "insertText": "FormIt.Model.GetObjectName();",
        "documentation": {
            "value": "# [FormIt.Model.GetObjectName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga7ca2ab5b798dd582a3567345cc6e23f4)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Model.GetProjectSiteArea",
        "kind": "Function",
        "detail": "Get the project site area of the model.",
        "insertText": "FormIt.Model.GetProjectSiteArea();",
        "documentation": {
            "value": "# [FormIt.Model.GetProjectSiteArea](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga2079c91822b5a4df6af987229c9552c1)\n\n## Get the project site area of the model.\n\n"
        }
    },
    {
        "label": "FormIt.Model.GetProjectTargetArea",
        "kind": "Function",
        "detail": "GetProjectTargetArea gets the site project target area of the model.",
        "insertText": "FormIt.Model.GetProjectTargetArea();",
        "documentation": {
            "value": "# [FormIt.Model.GetProjectTargetArea](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga1d0c1eb0b00f5190847be56a1e437c1e)\n\n## GetProjectTargetArea gets the site project target area of the model.\n\n"
        }
    },
    {
        "label": "FormIt.Model.GetPropertiesForHistory",
        "kind": "Function",
        "detail": "Get the properties for the given history.",
        "insertText": "FormIt.Model.GetPropertiesForHistory(nHistoryId, editingPath, nHistoryID);",
        "documentation": {
            "value": "# [FormIt.Model.GetPropertiesForHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga8434fde7e942d3a87aad56a3ab401c6d)\n\n## Get the properties for the given history.\n\n## Parameters\n* nHistoryId\n* editingPath\n* nHistoryID\n"
        }
    },
    {
        "label": "FormIt.Model.GetPropertiesForSelected",
        "kind": "Function",
        "detail": "Returns the properties for all objects currently selected Parameters: In: Out: FormIt.SelectedProperties.",
        "insertText": "FormIt.Model.GetPropertiesForSelected();",
        "documentation": {
            "value": "# [FormIt.Model.GetPropertiesForSelected](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga409d60b43e1821628cd5b421212e1d1b)\n\n## Returns the properties for all objects currently selected Parameters: In: Out: FormIt.SelectedProperties.\n\n"
        }
    },
    {
        "label": "FormIt.Model.GetSurfaceAccuracyOrCountCurrent",
        "kind": "Function",
        "detail": "Get the surface accuracy.",
        "insertText": "FormIt.Model.GetSurfaceAccuracyOrCountCurrent();",
        "documentation": {
            "value": "# [FormIt.Model.GetSurfaceAccuracyOrCountCurrent](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#gadbc5744a98e27aea8f48f0aeb560c8ad)\n\n## Get the surface accuracy.\n\n"
        }
    },
    {
        "label": "FormIt.Model.GetTotalGrossArea",
        "kind": "Function",
        "detail": "GetTotalGrossArea gets the total area of all levels in the model.",
        "insertText": "FormIt.Model.GetTotalGrossArea();",
        "documentation": {
            "value": "# [FormIt.Model.GetTotalGrossArea](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga03e4f8bbcb88956f5868ec0f2728a563)\n\n## GetTotalGrossArea gets the total area of all levels in the model.\n\n"
        }
    },
    {
        "label": "FormIt.Model.GetUnitType",
        "kind": "Function",
        "detail": "!!!!!!!!!!!!!!! Deprecated: Use GetUnitTypeCurrent !!!!!!!!!!!!!!! Get the UnitType of the current Model.",
        "insertText": "FormIt.Model.GetUnitType();",
        "documentation": {
            "value": "# [FormIt.Model.GetUnitType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga32e46a572a4d1dc18acd5bf4f8fc4ed9)\n\n## !!!!!!!!!!!!!!! Deprecated: Use GetUnitTypeCurrent !!!!!!!!!!!!!!! Get the UnitType of the current Model.\n\n"
        }
    },
    {
        "label": "FormIt.Model.GetUnitTypeCurrent",
        "kind": "Function",
        "detail": "Get the UnitType of the current Model.",
        "insertText": "FormIt.Model.GetUnitTypeCurrent();",
        "documentation": {
            "value": "# [FormIt.Model.GetUnitTypeCurrent](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga5e72995c378babe5d8da3a8810566a59)\n\n## Get the UnitType of the current Model.\n\n"
        }
    },
    {
        "label": "FormIt.Model.ImperialLengthToCurrentUnitLength",
        "kind": "Function",
        "detail": "Takes imperial value in feet and translates to the current unit system.",
        "insertText": "FormIt.Model.ImperialLengthToCurrentUnitLength(length);",
        "documentation": {
            "value": "# [FormIt.Model.ImperialLengthToCurrentUnitLength](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga74655131f6f68780b513332899641024)\n\n## Takes imperial value in feet and translates to the current unit system.\n\n## Parameters\n* length\n"
        }
    },
    {
        "label": "FormIt.Model.IsImperialUnitType",
        "kind": "Function",
        "detail": "Return true if the current unit type in the model is imperial.",
        "insertText": "FormIt.Model.IsImperialUnitType(FormIt.UnitType);",
        "documentation": {
            "value": "# [FormIt.Model.IsImperialUnitType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga3211519b565e8e7155f5557dd996e9a4)\n\n## Return true if the current unit type in the model is imperial.\n\n## Parameters\n* FormIt.UnitType\n"
        }
    },
    {
        "label": "FormIt.Model.IsModified",
        "kind": "Function",
        "detail": "IsModified returns true if the Model has been modified.",
        "insertText": "FormIt.Model.IsModified();",
        "documentation": {
            "value": "# [FormIt.Model.IsModified](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga62163e1ef3c59efa64ec0c98dc51f286)\n\n## IsModified returns true if the Model has been modified.\n\n"
        }
    },
    {
        "label": "FormIt.Model.ObjectReportsAreaByLevel",
        "kind": "Function",
        "insertText": "FormIt.Model.ObjectReportsAreaByLevel();",
        "documentation": {
            "value": "# [FormIt.Model.ObjectReportsAreaByLevel](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#gadd804bbc088cc550c7b69114749a5bfe)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Model.ResetModified",
        "kind": "Function",
        "detail": "ResetModified sets the Model to unmodified.",
        "insertText": "FormIt.Model.ResetModified();",
        "documentation": {
            "value": "# [FormIt.Model.ResetModified](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga616a85231c8df0f314e51c23b07bc1e6)\n\n## ResetModified sets the Model to unmodified.\n\n"
        }
    },
    {
        "label": "FormIt.Model.SetCurveAccuracyOrCountCurrent",
        "kind": "Function",
        "detail": "Set the curve accuracy.",
        "insertText": "FormIt.Model.SetCurveAccuracyOrCountCurrent(accuracyORcount, accuracyORcount);",
        "documentation": {
            "value": "# [FormIt.Model.SetCurveAccuracyOrCountCurrent](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga06b221c8587c69b52296a8099132f2c5)\n\n## Set the curve accuracy.\n\n## Parameters\n* accuracyORcount\n* accuracyORcount\n"
        }
    },
    {
        "label": "FormIt.Model.SetGroupHistoryName",
        "kind": "Function",
        "detail": "Set the name for the given history.",
        "insertText": "FormIt.Model.SetGroupHistoryName(nHistoryID, sHistoryName);",
        "documentation": {
            "value": "# [FormIt.Model.SetGroupHistoryName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga370cc7eecf95a6366911f6aecf878909)\n\n## Set the name for the given history.\n\n## Parameters\n* nHistoryID\n* sHistoryName\n"
        }
    },
    {
        "label": "FormIt.Model.SetObjectName",
        "kind": "Function",
        "insertText": "FormIt.Model.SetObjectName();",
        "documentation": {
            "value": "# [FormIt.Model.SetObjectName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga30adab770c2fa08e383361ef54a1047e)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Model.SetSurfaceAccuracyOrCountCurrent",
        "kind": "Function",
        "detail": "Set the surface accuracy.",
        "insertText": "FormIt.Model.SetSurfaceAccuracyOrCountCurrent(accuracy, accuracy);",
        "documentation": {
            "value": "# [FormIt.Model.SetSurfaceAccuracyOrCountCurrent](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#gaa27708677862b6413522859c94162e4a)\n\n## Set the surface accuracy.\n\n## Parameters\n* accuracy\n* accuracy\n"
        }
    },
    {
        "label": "FormIt.Model.SetTotalAreaOfSite",
        "kind": "Function",
        "detail": "SetTotalAreaOfSite sets the total site area of the model.",
        "insertText": "FormIt.Model.SetTotalAreaOfSite(area, area);",
        "documentation": {
            "value": "# [FormIt.Model.SetTotalAreaOfSite](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#gaee3bc4c67821345c652afb02f2ccb0cc)\n\n## SetTotalAreaOfSite sets the total site area of the model.\n\n## Parameters\n* area\n* area\n"
        }
    },
    {
        "label": "FormIt.Model.SetUnitType",
        "kind": "Function",
        "detail": "!!!!!!!!!!!!!!! Deprecated: Use GetUnitTypeCurrent !!!!!!!!!!!!!!! Set the UnitType of the current Model.",
        "insertText": "FormIt.Model.SetUnitType(FormIt.UnitType);",
        "documentation": {
            "value": "# [FormIt.Model.SetUnitType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga8f7b0dbb693e2c1c8810c6961e53065d)\n\n## !!!!!!!!!!!!!!! Deprecated: Use GetUnitTypeCurrent !!!!!!!!!!!!!!! Set the UnitType of the current Model.\n\n## Parameters\n* FormIt.UnitType\n"
        }
    },
    {
        "label": "FormIt.Model.SetUnitTypeCurrent",
        "kind": "Function",
        "detail": "Set the UnitType of the current Model.",
        "insertText": "FormIt.Model.SetUnitTypeCurrent(FormIt.UnitType);",
        "documentation": {
            "value": "# [FormIt.Model.SetUnitTypeCurrent](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__model.html#ga22d94c2b801993419c1f0b1eb4da7d5e)\n\n## Set the UnitType of the current Model.\n\n## Parameters\n* FormIt.UnitType\n"
        }
    },
    {
        "label": "FormIt.Scenes.ActivateScene",
        "kind": "Function",
        "detail": "ActivateScene activates the Scene with the given name.",
        "insertText": "FormIt.Scenes.ActivateScene(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.ActivateScene](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga3af2e0f1df5ddfed5689a4d4c5e9a19c)\n\n## ActivateScene activates the Scene with the given name.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.AddNewScene",
        "kind": "Function",
        "detail": "AddNewScene adds a new scene with an automatically generated scene name optionally after a given scene name.",
        "insertText": "FormIt.Scenes.AddNewScene(afterSceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.AddNewScene](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gab464cb7021c215a09d385990b7a3a251)\n\n## AddNewScene adds a new scene with an automatically generated scene name optionally after a given scene name.\n\n## Parameters\n* afterSceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.AddNewSceneToAnimation",
        "kind": "Function",
        "detail": "AddNewSceneToAnimation adds a new scene with an automatically generated scene name to a given animation.",
        "insertText": "FormIt.Scenes.AddNewSceneToAnimation(animationName);",
        "documentation": {
            "value": "# [FormIt.Scenes.AddNewSceneToAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gaaf3ca2d7906765730bbb6bf95fe64366)\n\n## AddNewSceneToAnimation adds a new scene with an automatically generated scene name to a given animation.\n\n## Parameters\n* animationName\n"
        }
    },
    {
        "label": "FormIt.Scenes.AddScene",
        "kind": "Function",
        "detail": "AddScene adds a new scene given a Scene JSON object.",
        "insertText": "FormIt.Scenes.AddScene(scene, afterSceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.AddScene](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga56a7cdf7b4eac318a909f5865276c51d)\n\n## AddScene adds a new scene given a Scene JSON object.\n\n## Parameters\n* scene\n* afterSceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.AddSceneAnimation",
        "kind": "Function",
        "detail": "Add a new scene animation.",
        "insertText": "FormIt.Scenes.AddSceneAnimation();",
        "documentation": {
            "value": "# [FormIt.Scenes.AddSceneAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga2b2b41f4de47378682904653f9d1efd9)\n\n## Add a new scene animation.\n\n"
        }
    },
    {
        "label": "FormIt.Scenes.AddScenesToAnimation",
        "kind": "Function",
        "detail": "Adds existing scenes to an animation.",
        "insertText": "FormIt.Scenes.AddScenesToAnimation(animationName, sceneNames, sceneBeforeOrAfterName, insertAfter);",
        "documentation": {
            "value": "# [FormIt.Scenes.AddScenesToAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga145f5b07677110142a45f84e5f4bc7ce)\n\n## Adds existing scenes to an animation.\n\n## Parameters\n* animationName\n* sceneNames\n* sceneBeforeOrAfterName\n* insertAfter\n"
        }
    },
    {
        "label": "FormIt.Scenes.DuplicateScene",
        "kind": "Function",
        "detail": "DuplicateScene duplicates the scene with the given name.",
        "insertText": "FormIt.Scenes.DuplicateScene(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.DuplicateScene](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gaa8ccf977c4fed178b6c74d3f7694e884)\n\n## DuplicateScene duplicates the scene with the given name.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetAnimationCollapsed",
        "kind": "Function",
        "detail": "Get the collpased status of an animation UI item.",
        "insertText": "FormIt.Scenes.GetAnimationCollapsed(animationName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetAnimationCollapsed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga3494018e4531f688fe56c3b2a8672e3c)\n\n## Get the collpased status of an animation UI item.\n\n## Parameters\n* animationName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetAnimationForScene",
        "kind": "Function",
        "detail": "Returns the parent animation for a scene.",
        "insertText": "FormIt.Scenes.GetAnimationForScene(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetAnimationForScene](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga0199595fd7fd34c24f7b847b58e11567)\n\n## Returns the parent animation for a scene.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetAnimationLoop",
        "kind": "Function",
        "detail": "Get the loop option of an animation.",
        "insertText": "FormIt.Scenes.GetAnimationLoop(animationName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetAnimationLoop](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga4b0d00a89a2899c2cc81a66c594eebab)\n\n## Get the loop option of an animation.\n\n## Parameters\n* animationName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetCameraSpeed",
        "kind": "Function",
        "detail": "GetCameraSpeed returns the speed (mph) at which the camera moves during the transition to the next scene.",
        "insertText": "FormIt.Scenes.GetCameraSpeed(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetCameraSpeed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga7d4521f624f6a5cfc35d6f8fe655f57a)\n\n## GetCameraSpeed returns the speed (mph) at which the camera moves during the transition to the next scene.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetEditCameras",
        "kind": "Function",
        "detail": "GetEditCameras enters the camera editing mode.",
        "insertText": "FormIt.Scenes.GetEditCameras();",
        "documentation": {
            "value": "# [FormIt.Scenes.GetEditCameras](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gac0bb8da631c7c691b41496a4b7760f55)\n\n## GetEditCameras enters the camera editing mode.\n\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetIncludeInAnimation",
        "kind": "Function",
        "detail": "GetIncludeInAnimation returns whether the given scene is part of the animation.",
        "insertText": "FormIt.Scenes.GetIncludeInAnimation(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetIncludeInAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga90d5f821ed00d77cab0a62d0da6279cd)\n\n## GetIncludeInAnimation returns whether the given scene is part of the animation.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetNumberOfScenes",
        "kind": "Function",
        "detail": "GetNumberOfScenes returns the number of Scenes.",
        "insertText": "FormIt.Scenes.GetNumberOfScenes();",
        "documentation": {
            "value": "# [FormIt.Scenes.GetNumberOfScenes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga9c273bca5cfc3226a3192b9273c07b60)\n\n## GetNumberOfScenes returns the number of Scenes.\n\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetNumberOfScenesWithAnimation",
        "kind": "Function",
        "insertText": "FormIt.Scenes.GetNumberOfScenesWithAnimation();",
        "documentation": {
            "value": "# [FormIt.Scenes.GetNumberOfScenesWithAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gac6f967f9adc5e2a8e32c959c07413933)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetPauseTime",
        "kind": "Function",
        "detail": "GetPauseTime returns the time that the given Scene is paused during presentation mode.",
        "insertText": "FormIt.Scenes.GetPauseTime(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetPauseTime](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga4f816105610c8b9f8b53d7a7ae253ce2)\n\n## GetPauseTime returns the time that the given Scene is paused during presentation mode.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetPropertiesToCapture",
        "kind": "Function",
        "detail": "GetPropertiesToCapture returns the property flags used for determining what is captured.",
        "insertText": "FormIt.Scenes.GetPropertiesToCapture(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetPropertiesToCapture](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga3ab9d6c8362353c1780c0d6cc002d9eb)\n\n## GetPropertiesToCapture returns the property flags used for determining what is captured.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetScene",
        "kind": "Function",
        "detail": "GetScene gets the given Scene as JSON given a Scene name.",
        "insertText": "FormIt.Scenes.GetScene(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetScene](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga2810bcda0b2edff905f3e2339e8e4932)\n\n## GetScene gets the given Scene as JSON given a Scene name.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetSceneAnimation",
        "kind": "Function",
        "detail": "Get the animation for the given name.",
        "insertText": "FormIt.Scenes.GetSceneAnimation(animationName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetSceneAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga4f4961b8d9f0a9e87d82c22f95327f9e)\n\n## Get the animation for the given name.\n\n## Parameters\n* animationName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetSceneAnimations",
        "kind": "Function",
        "detail": "Get all scene animations.",
        "insertText": "FormIt.Scenes.GetSceneAnimations();",
        "documentation": {
            "value": "# [FormIt.Scenes.GetSceneAnimations](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga429cf44d505b30c9e4fe16c5afa70a9c)\n\n## Get all scene animations.\n\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetSceneNames",
        "kind": "Function",
        "detail": "GetSceneNames gets all the Scene names.",
        "insertText": "FormIt.Scenes.GetSceneNames();",
        "documentation": {
            "value": "# [FormIt.Scenes.GetSceneNames](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gabd030900bbdba7d0657a0847a9df0360)\n\n## GetSceneNames gets all the Scene names.\n\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetSceneNamesFromAnimation",
        "kind": "Function",
        "detail": "Get the scene names for the given animation.",
        "insertText": "FormIt.Scenes.GetSceneNamesFromAnimation(animationName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetSceneNamesFromAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga6e60641cb07536f20733b9b9f5143152)\n\n## Get the scene names for the given animation.\n\n## Parameters\n* animationName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetScenes",
        "kind": "Function",
        "detail": "GetScenes gets all the Scenes as JSON objects.",
        "insertText": "FormIt.Scenes.GetScenes();",
        "documentation": {
            "value": "# [FormIt.Scenes.GetScenes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga6017addd4dbd6b21f742c68fbbb0a4ea)\n\n## GetScenes gets all the Scenes as JSON objects.\n\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetTransitionTime",
        "kind": "Function",
        "detail": "GetTransitionTime returns the time that the given Scene takes to transition during presentation mode.",
        "insertText": "FormIt.Scenes.GetTransitionTime(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetTransitionTime](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga96d38047eeb352ae87270430548faaaf)\n\n## GetTransitionTime returns the time that the given Scene takes to transition during presentation mode.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetTransitionTimeUsed",
        "kind": "Function",
        "detail": "GetTransitionTimeUsed returns the transition time for the scene that is actually used.",
        "insertText": "FormIt.Scenes.GetTransitionTimeUsed(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetTransitionTimeUsed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga0102ffc2258767d223952e0bc6b8065c)\n\n## GetTransitionTimeUsed returns the transition time for the scene that is actually used.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.GetUseCameraSpeed",
        "kind": "Function",
        "detail": "GetUseCameraSpeed returns whether the given scene is using the transition time or camera speed during animation.",
        "insertText": "FormIt.Scenes.GetUseCameraSpeed(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.GetUseCameraSpeed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gaafdd9f595be6e8da950b7908958b49cd)\n\n## GetUseCameraSpeed returns whether the given scene is using the transition time or camera speed during animation.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.IsPresenting",
        "kind": "Function",
        "detail": "IsPresenting returns true if in presentation mode.",
        "insertText": "FormIt.Scenes.IsPresenting();",
        "documentation": {
            "value": "# [FormIt.Scenes.IsPresenting](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gad08966dcfe4173695f61339db46c58c4)\n\n## IsPresenting returns true if in presentation mode.\n\n"
        }
    },
    {
        "label": "FormIt.Scenes.IsValidAnimationName",
        "kind": "Function",
        "detail": "IsValidAnimationName checks whether the name is valid for an animation Used to check if the oldName can be renamed to newName.",
        "insertText": "FormIt.Scenes.IsValidAnimationName(oldName, newName);",
        "documentation": {
            "value": "# [FormIt.Scenes.IsValidAnimationName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga24e23c98bdf03082bdc36307f602ad18)\n\n## IsValidAnimationName checks whether the name is valid for an animation Used to check if the oldName can be renamed to newName.\n\n## Parameters\n* oldName\n* newName\n"
        }
    },
    {
        "label": "FormIt.Scenes.IsValidSceneCameraSpeed",
        "kind": "Function",
        "detail": "IsValidSceneCameraSpeed checks whether string contains a valid pause time.",
        "insertText": "FormIt.Scenes.IsValidSceneCameraSpeed(transitionTimeString, speedString);",
        "documentation": {
            "value": "# [FormIt.Scenes.IsValidSceneCameraSpeed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga9c9c9579200417f507d99dd4ac191f72)\n\n## IsValidSceneCameraSpeed checks whether string contains a valid pause time.\n\n## Parameters\n* transitionTimeString\n* speedString\n"
        }
    },
    {
        "label": "FormIt.Scenes.IsValidSceneName",
        "kind": "Function",
        "detail": "IsValidSceneName checks whether the name is valid for a scene.",
        "insertText": "FormIt.Scenes.IsValidSceneName(oldSceneName, newSceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.IsValidSceneName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gacb85260dfad85e1d07d2b4e54ddd7d7c)\n\n## IsValidSceneName checks whether the name is valid for a scene.\n\n## Parameters\n* oldSceneName\n* newSceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.IsValidScenePauseTime",
        "kind": "Function",
        "detail": "IsValidScenePauseTime checks whether string contains a valid pause time.",
        "insertText": "FormIt.Scenes.IsValidScenePauseTime(pauseTime, pauseTimeString);",
        "documentation": {
            "value": "# [FormIt.Scenes.IsValidScenePauseTime](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga4ac7cce5477ca542e49b0ca8dd40ec7f)\n\n## IsValidScenePauseTime checks whether string contains a valid pause time.\n\n## Parameters\n* pauseTime\n* pauseTimeString\n"
        }
    },
    {
        "label": "FormIt.Scenes.IsValidSceneTransitionTime",
        "kind": "Function",
        "detail": "IsValidSceneTransitionTime checks whether string contains a valid pause time.",
        "insertText": "FormIt.Scenes.IsValidSceneTransitionTime(transitionTimeString);",
        "documentation": {
            "value": "# [FormIt.Scenes.IsValidSceneTransitionTime](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga8405c398d3ad12138613e74cffe8aa6e)\n\n## IsValidSceneTransitionTime checks whether string contains a valid pause time.\n\n## Parameters\n* transitionTimeString\n"
        }
    },
    {
        "label": "FormIt.Scenes.MoveSceneDown",
        "kind": "Function",
        "detail": "MoveSceneDown moves the given Scene down in the Scene list.",
        "insertText": "FormIt.Scenes.MoveSceneDown(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.MoveSceneDown](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gacc2dc72cd527579eac71222d06dbf396)\n\n## MoveSceneDown moves the given Scene down in the Scene list.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.MoveSceneUp",
        "kind": "Function",
        "detail": "MoveSceneUp moves the given Scene up in the Scene list.",
        "insertText": "FormIt.Scenes.MoveSceneUp(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.MoveSceneUp](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gae38611e6ce7a4b070be0610443b26dad)\n\n## MoveSceneUp moves the given Scene up in the Scene list.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.RearrangeAnimations",
        "kind": "Function",
        "detail": "Rearrange the animations to be put before or after the given other animation.",
        "insertText": "FormIt.Scenes.RearrangeAnimations(animationNames, animationBeforeOrAfterName, insertAfter);",
        "documentation": {
            "value": "# [FormIt.Scenes.RearrangeAnimations](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gaed4b0a204462e4312b015624612886b8)\n\n## Rearrange the animations to be put before or after the given other animation.\n\n## Parameters\n* animationNames\n* animationBeforeOrAfterName\n* insertAfter\n"
        }
    },
    {
        "label": "FormIt.Scenes.RearrangeScenes",
        "kind": "Function",
        "detail": "RearrangeScenes moves the given Scene at oldPos to newPos in the Scene list.",
        "insertText": "FormIt.Scenes.RearrangeScenes(oldPos, newPos);",
        "documentation": {
            "value": "# [FormIt.Scenes.RearrangeScenes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga0bc229b703ef01d6712b8c5596dc260c)\n\n## RearrangeScenes moves the given Scene at oldPos to newPos in the Scene list.\n\n## Parameters\n* oldPos\n* newPos\n"
        }
    },
    {
        "label": "FormIt.Scenes.RemoveAnimation",
        "kind": "Function",
        "detail": "Removes a scene animation.",
        "insertText": "FormIt.Scenes.RemoveAnimation(animationName);",
        "documentation": {
            "value": "# [FormIt.Scenes.RemoveAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gac08acc1e742c55616082c034f8d3b1f8)\n\n## Removes a scene animation.\n\n## Parameters\n* animationName\n"
        }
    },
    {
        "label": "FormIt.Scenes.RemoveScene",
        "kind": "Function",
        "detail": "RemoveScene removes the scene with the given name.",
        "insertText": "FormIt.Scenes.RemoveScene(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.RemoveScene](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gaba74d1aa53b146efefee0e8368352be1)\n\n## RemoveScene removes the scene with the given name.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.SceneNameExists",
        "kind": "Function",
        "insertText": "FormIt.Scenes.SceneNameExists();",
        "documentation": {
            "value": "# [FormIt.Scenes.SceneNameExists](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga1d01cc7db5ba9cd8aac2feac41bea7b8)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Scenes.ScenesAreEqual",
        "kind": "Function",
        "detail": "ScenesAreEqual returns true if Parameters: In: sceneName The name of an existing Scene.",
        "insertText": "FormIt.Scenes.ScenesAreEqual(sceneName, scene);",
        "documentation": {
            "value": "# [FormIt.Scenes.ScenesAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga3c957975b40b3566bd905b403306c9cd)\n\n## ScenesAreEqual returns true if Parameters: In: sceneName The name of an existing Scene.\n\n## Parameters\n* sceneName\n* scene\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetAnimationCollapsed",
        "kind": "Function",
        "detail": "Set the collpased status of an animation UI item.",
        "insertText": "FormIt.Scenes.SetAnimationCollapsed(animationName, collapsed);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetAnimationCollapsed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gaf437d7c472eae6ef08898e25f9a4cd5f)\n\n## Set the collpased status of an animation UI item.\n\n## Parameters\n* animationName\n* collapsed\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetAnimationLoop",
        "kind": "Function",
        "detail": "Set the loop option of an animation.",
        "insertText": "FormIt.Scenes.SetAnimationLoop(animationName, loop);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetAnimationLoop](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga07ae5520bbef56fb7c72ea1f4fb4c79d)\n\n## Set the loop option of an animation.\n\n## Parameters\n* animationName\n* loop\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetAnimationName",
        "kind": "Function",
        "detail": "SetSceneName renames the given Scene.",
        "insertText": "FormIt.Scenes.SetAnimationName(oldName, newName);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetAnimationName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga3ef633536290226d7ef4852cbdb8971c)\n\n## SetSceneName renames the given Scene.\n\n## Parameters\n* oldName\n* newName\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetCameraSpeed",
        "kind": "Function",
        "detail": "SetCameraSpeed sets the speed (mph) at which the camera moves during the transition to the next scene.",
        "insertText": "FormIt.Scenes.SetCameraSpeed(sceneName, cameraSpeed);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetCameraSpeed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga384d3148ff2ec42bb4c2a288f5349c4a)\n\n## SetCameraSpeed sets the speed (mph) at which the camera moves during the transition to the next scene.\n\n## Parameters\n* sceneName\n* cameraSpeed\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetEditCameras",
        "kind": "Function",
        "detail": "SetEditCameras enters the camera editing mode.",
        "insertText": "FormIt.Scenes.SetEditCameras(bEditCameras, animationName, sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetEditCameras](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga4ab5e6d8aa5bce6b1c4074a59c3fbf32)\n\n## SetEditCameras enters the camera editing mode.\n\n## Parameters\n* bEditCameras\n* animationName\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetIncludeInAnimation",
        "kind": "Function",
        "detail": "SetIncludeInAnimation sets whether the given scene is part of the animation.",
        "insertText": "FormIt.Scenes.SetIncludeInAnimation(sceneName, bIncludeInAnimation);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetIncludeInAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga885d9d1b08bd72b46266e181b624c248)\n\n## SetIncludeInAnimation sets whether the given scene is part of the animation.\n\n## Parameters\n* sceneName\n* bIncludeInAnimation\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetPauseTime",
        "kind": "Function",
        "detail": "SetPauseTime sets the time that the given Scene is paused during presentation mode.",
        "insertText": "FormIt.Scenes.SetPauseTime(sceneName, pauseTime);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetPauseTime](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga51b96e44a28c6f11bfaca590ead3b1c1)\n\n## SetPauseTime sets the time that the given Scene is paused during presentation mode.\n\n## Parameters\n* sceneName\n* pauseTime\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetPresentationMode",
        "kind": "Function",
        "detail": "SetPresentationMode starts/stops presentation mode.",
        "insertText": "FormIt.Scenes.SetPresentationMode(start, sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetPresentationMode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga338157cef9f12d6312f6b0eb1e094ccd)\n\n## SetPresentationMode starts/stops presentation mode.\n\n## Parameters\n* start\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetPropertiesToCapture",
        "kind": "Function",
        "detail": "SetPropertiesToCapture sets the Scene property flags used for determining what is captured.",
        "insertText": "FormIt.Scenes.SetPropertiesToCapture(sceneName, properties);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetPropertiesToCapture](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga966602f7f2df3c192a634ec54d366d7a)\n\n## SetPropertiesToCapture sets the Scene property flags used for determining what is captured.\n\n## Parameters\n* sceneName\n* properties\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetSceneName",
        "kind": "Function",
        "detail": "SetSceneName renames the given Scene.",
        "insertText": "FormIt.Scenes.SetSceneName(oldSceneName, newSceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetSceneName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gaecd7d2ea97bd4ec8e0608f88ecb84309)\n\n## SetSceneName renames the given Scene.\n\n## Parameters\n* oldSceneName\n* newSceneName\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetScenes",
        "kind": "Function",
        "detail": "SetScenes sets all the Scenes.",
        "insertText": "FormIt.Scenes.SetScenes(scenes);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetScenes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga05febe6a883ad39720cc0cdfaeab8fd8)\n\n## SetScenes sets all the Scenes.\n\n## Parameters\n* scenes\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetTransitionTime",
        "kind": "Function",
        "detail": "SetTransitionTime sets the time that the given Scene takes to transition during presentation mode.",
        "insertText": "FormIt.Scenes.SetTransitionTime(sceneName, transitionTime);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetTransitionTime](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#gad815fd8b5b6aa94735e9492e72193fb3)\n\n## SetTransitionTime sets the time that the given Scene takes to transition during presentation mode.\n\n## Parameters\n* sceneName\n* transitionTime\n"
        }
    },
    {
        "label": "FormIt.Scenes.SetUseCameraSpeed",
        "kind": "Function",
        "detail": "SetUseCameraSpeed sets whether the given scene is part of the animation.",
        "insertText": "FormIt.Scenes.SetUseCameraSpeed(sceneName, bUseCameraSpeed);",
        "documentation": {
            "value": "# [FormIt.Scenes.SetUseCameraSpeed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga68140f3317be35babdc2678b64d36494)\n\n## SetUseCameraSpeed sets whether the given scene is part of the animation.\n\n## Parameters\n* sceneName\n* bUseCameraSpeed\n"
        }
    },
    {
        "label": "FormIt.Scenes.StartStopAnimation",
        "kind": "Function",
        "detail": "Start/stop a continuous loop scene animation.",
        "insertText": "FormIt.Scenes.StartStopAnimation(start, animationName, fromScene);",
        "documentation": {
            "value": "# [FormIt.Scenes.StartStopAnimation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga6473f45595835dc4a0b4f2ea9f29b105)\n\n## Start/stop a continuous loop scene animation.\n\n## Parameters\n* start\n* animationName\n* fromScene\n"
        }
    },
    {
        "label": "FormIt.Scenes.UpdateScene",
        "kind": "Function",
        "detail": "UpdateScene captures the Scene's properties that are enabled with the given name.",
        "insertText": "FormIt.Scenes.UpdateScene(sceneName);",
        "documentation": {
            "value": "# [FormIt.Scenes.UpdateScene](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__scenes.html#ga09be5913f4d4464a8168dfc7262bc6c4)\n\n## UpdateScene captures the Scene's properties that are enabled with the given name.\n\n## Parameters\n* sceneName\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.Clear",
        "kind": "Function",
        "insertText": "FormIt.SectionPlanes.Clear();",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.Clear](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga675f6a1bd43c445690d313765350420a)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.EnablePocheColor",
        "kind": "Function",
        "detail": "Enable the Poche color given a bool.",
        "insertText": "FormIt.SectionPlanes.EnablePocheColor(enable);",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.EnablePocheColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga2f6643f03056ee3aad8ad842d9ef0914)\n\n## Enable the Poche color given a bool.\n\n## Parameters\n* enable\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.GetInstances",
        "kind": "Function",
        "detail": "Get the WSM group instances representing section planes.",
        "insertText": "FormIt.SectionPlanes.GetInstances();",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.GetInstances](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#gaf17024f882b87776bd0827b9569397e5)\n\n## Get the WSM group instances representing section planes.\n\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.GetLastSectionRefHistory",
        "kind": "Function",
        "detail": "Get the History ID that represents a section plane.",
        "insertText": "FormIt.SectionPlanes.GetLastSectionRefHistory();",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.GetLastSectionRefHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga0346912b62ecca4798a9e4898c6d22f9)\n\n## Get the History ID that represents a section plane.\n\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.GetOutlineColor",
        "kind": "Function",
        "detail": "Get the section plane outline color.",
        "insertText": "FormIt.SectionPlanes.GetOutlineColor();",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.GetOutlineColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga3060a32d9043a96ab0a66de5feba20e5)\n\n## Get the section plane outline color.\n\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.GetOutlineSize",
        "kind": "Function",
        "detail": "Get the section plane outline size.",
        "insertText": "FormIt.SectionPlanes.GetOutlineSize();",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.GetOutlineSize](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#gaac408b7e626ff19fa8364d144348e1ec)\n\n## Get the section plane outline size.\n\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.GetPlanes",
        "kind": "Function",
        "detail": "Get the current Section Planes.",
        "insertText": "FormIt.SectionPlanes.GetPlanes();",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.GetPlanes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga4b1d4253a5538035e2051cfb568a26b1)\n\n## Get the current Section Planes.\n\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.GetPocheColor",
        "kind": "Function",
        "detail": "Get the section plane Poche color.",
        "insertText": "FormIt.SectionPlanes.GetPocheColor();",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.GetPocheColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#gab2d2768bf8630f85c9e140c14df5ec47)\n\n## Get the section plane Poche color.\n\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.IsPocheColorEnabled",
        "kind": "Function",
        "detail": "IsPocheColorEnabled returns the Poche color state (on/off).",
        "insertText": "FormIt.SectionPlanes.IsPocheColorEnabled();",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.IsPocheColorEnabled](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#gaa86d6356758c36930b4b02213a8d9c51)\n\n## IsPocheColorEnabled returns the Poche color state (on/off).\n\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.SectionPlaneHistoryChanged",
        "kind": "Function",
        "detail": "SectionPlaneHistoryChanged returns true if the section plane History has changed.",
        "insertText": "FormIt.SectionPlanes.SectionPlaneHistoryChanged();",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.SectionPlaneHistoryChanged](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga7aa2958e1be35ff5f5b593a761faf4d6)\n\n## SectionPlaneHistoryChanged returns true if the section plane History has changed.\n\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.SetLastSectionRefHistory",
        "kind": "Function",
        "detail": "Enable the Poche color given a bool.",
        "insertText": "FormIt.SectionPlanes.SetLastSectionRefHistory(historyId);",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.SetLastSectionRefHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga6098f5b77fa5841bd485fd48c31d1466)\n\n## Enable the Poche color given a bool.\n\n## Parameters\n* historyId\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.SetOutlineColor",
        "kind": "Function",
        "detail": "Set the section plane outline color.",
        "insertText": "FormIt.SectionPlanes.SetOutlineColor(color);",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.SetOutlineColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga539276d93a4c81082f8bc9d6244fc457)\n\n## Set the section plane outline color.\n\n## Parameters\n* color\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.SetOutlineSize",
        "kind": "Function",
        "detail": "Set the section plane outline size.",
        "insertText": "FormIt.SectionPlanes.SetOutlineSize(s);",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.SetOutlineSize](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#gae52181c50b8feef9a3cd8ffcee2f2b85)\n\n## Set the section plane outline size.\n\n## Parameters\n* s\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.SetPlanes",
        "kind": "Function",
        "detail": "Set the current Section Planes.",
        "insertText": "FormIt.SectionPlanes.SetPlanes(planes);",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.SetPlanes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga21ae6cc7d38a7acd33bf61f21d30e590)\n\n## Set the current Section Planes.\n\n## Parameters\n* planes\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.SetPocheColor",
        "kind": "Function",
        "detail": "Set the section plane Poche color.",
        "insertText": "FormIt.SectionPlanes.SetPocheColor(color);",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.SetPocheColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#ga2bb826cf2775fa5f861694048a40f995)\n\n## Set the section plane Poche color.\n\n## Parameters\n* color\n"
        }
    },
    {
        "label": "FormIt.SectionPlanes.SetSectionIndicatorsVisibility",
        "kind": "Function",
        "detail": "Set the geometry representing section planes visible.",
        "insertText": "FormIt.SectionPlanes.SetSectionIndicatorsVisibility(visible);",
        "documentation": {
            "value": "# [FormIt.SectionPlanes.SetSectionIndicatorsVisibility](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sectionplanes.html#gab3a5429557d9d785dffe7910bba555bd)\n\n## Set the geometry representing section planes visible.\n\n## Parameters\n* visible\n"
        }
    },
    {
        "label": "FormIt.Selection.AddSelections",
        "kind": "Function",
        "insertText": "FormIt.Selection.AddSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.AddSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#gaddc4b068bbe274c571c57835829a148c)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Selection.ApplyMaterialToSelection",
        "kind": "Function",
        "detail": "Apply the material to selection through the JS API rather than module.ccall() for Web.",
        "insertText": "FormIt.Selection.ApplyMaterialToSelection(id, backside);",
        "documentation": {
            "value": "# [FormIt.Selection.ApplyMaterialToSelection](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga2dc5a684f8b63000a9cd06d76e7af111)\n\n## Apply the material to selection through the JS API rather than module.ccall() for Web.\n\n## Parameters\n* id\n* backside\n"
        }
    },
    {
        "label": "FormIt.Selection.ClearPreSelections",
        "kind": "Function",
        "detail": "Clear the pre-selected objects.",
        "insertText": "FormIt.Selection.ClearPreSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.ClearPreSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga94855c9d23e98f3a6aa7d91e85fc441a)\n\n## Clear the pre-selected objects.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.ClearSelections",
        "kind": "Function",
        "detail": "Clears all of the selections.",
        "insertText": "FormIt.Selection.ClearSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.ClearSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga21b300964792b552fa5f12b2344d4f9e)\n\n## Clears all of the selections.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.CommitPreselections",
        "kind": "Function",
        "detail": "CommitPreselections makes the pre-selections the current selections.",
        "insertText": "FormIt.Selection.CommitPreselections();",
        "documentation": {
            "value": "# [FormIt.Selection.CommitPreselections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga75bca2f355d55be392ccf31f83a6e064)\n\n## CommitPreselections makes the pre-selections the current selections.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.CompareSelections",
        "kind": "Function",
        "insertText": "FormIt.Selection.CompareSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.CompareSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga3c8801c3a03706d8328367f62f2947b8)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Selection.GetContextMenuObject",
        "kind": "Function",
        "detail": "Get the object selected from the context menu click.",
        "insertText": "FormIt.Selection.GetContextMenuObject();",
        "documentation": {
            "value": "# [FormIt.Selection.GetContextMenuObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga87cb4357ee4b6c69e788dda9027d7186)\n\n## Get the object selected from the context menu click.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.GetFirstPreSelectedObject",
        "kind": "Function",
        "detail": "Get the first pre-selection.",
        "insertText": "FormIt.Selection.GetFirstPreSelectedObject();",
        "documentation": {
            "value": "# [FormIt.Selection.GetFirstPreSelectedObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga4f7a4946e8fa91cf1c163b97f9914630)\n\n## Get the first pre-selection.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.GetFirstSelectedObject",
        "kind": "Function",
        "detail": "Get the first selection.",
        "insertText": "FormIt.Selection.GetFirstSelectedObject();",
        "documentation": {
            "value": "# [FormIt.Selection.GetFirstSelectedObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga8ea8f923d1888dc36d416669dff8d121)\n\n## Get the first selection.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.GetObjectTypeFilter",
        "kind": "Function",
        "insertText": "FormIt.Selection.GetObjectTypeFilter();",
        "documentation": {
            "value": "# [FormIt.Selection.GetObjectTypeFilter](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga0b6afaf7b3cfd8f4fc66afeb42a38a2c)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Selection.GetPreSelections",
        "kind": "Function",
        "detail": "Get the pre-selections.",
        "insertText": "FormIt.Selection.GetPreSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.GetPreSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga7ddafd5c95931f3cdda010fef08ca71e)\n\n## Get the pre-selections.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.GetSelections",
        "kind": "Function",
        "detail": "Get selections.",
        "insertText": "FormIt.Selection.GetSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.GetSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga0f555c99ccf3e13d54e52bc3f5a7c1cb)\n\n## Get selections.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.HasPreSelections",
        "kind": "Function",
        "detail": "Returns true if there are pre-selections.",
        "insertText": "FormIt.Selection.HasPreSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.HasPreSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga44fbc53d85e32ffb2c5ab819191cadeb)\n\n## Returns true if there are pre-selections.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.HasSelections",
        "kind": "Function",
        "detail": "HasSelections returns true is there are selections.",
        "insertText": "FormIt.Selection.HasSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.HasSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#gaed04e53b3eb4f9719c483b45944c7556)\n\n## HasSelections returns true is there are selections.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.IsSelected",
        "kind": "Function",
        "insertText": "FormIt.Selection.IsSelected();",
        "documentation": {
            "value": "# [FormIt.Selection.IsSelected](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga2cab9e0e68b4b265d423719f87a1091b)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Selection.SelectAll",
        "kind": "Function",
        "detail": "Select all objects in the model.",
        "insertText": "FormIt.Selection.SelectAll();",
        "documentation": {
            "value": "# [FormIt.Selection.SelectAll](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#gac9e76b60a6812b6b33ee874b97220662)\n\n## Select all objects in the model.\n\n"
        }
    },
    {
        "label": "FormIt.Selection.SetObjectTypeFilter",
        "kind": "Function",
        "detail": "Sets the current ObjectTypeFilter.",
        "insertText": "FormIt.Selection.SetObjectTypeFilter(objectTypeFilter);",
        "documentation": {
            "value": "# [FormIt.Selection.SetObjectTypeFilter](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga60d2bebee658f5f8bf0f94b1656ca9ca)\n\n## Sets the current ObjectTypeFilter.\n\n## Parameters\n* objectTypeFilter\n"
        }
    },
    {
        "label": "FormIt.Selection.SetPreSelections",
        "kind": "Function",
        "insertText": "FormIt.Selection.SetPreSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.SetPreSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga6fd9ea3156ba7b0d9b8800015e1f883f)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Selection.SetSelections",
        "kind": "Function",
        "insertText": "FormIt.Selection.SetSelections();",
        "documentation": {
            "value": "# [FormIt.Selection.SetSelections](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga9b26e7c309b9e96fdb0ee2c04262be1d)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Selection.ToggleObjects",
        "kind": "Function",
        "insertText": "FormIt.Selection.ToggleObjects();",
        "documentation": {
            "value": "# [FormIt.Selection.ToggleObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__selection.html#ga30a240f70603d8630478dcf50947ff20)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Shortcuts.GetJSON",
        "kind": "Function",
        "detail": "Get the shortcuts as a JSON string.",
        "insertText": "FormIt.Shortcuts.GetJSON();",
        "documentation": {
            "value": "# [FormIt.Shortcuts.GetJSON](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__shortcuts.html#ga4df45cb51c892e42cda17f0aa2e37be0)\n\n## Get the shortcuts as a JSON string.\n\n"
        }
    },
    {
        "label": "FormIt.Shortcuts.GetKeycodeString",
        "kind": "Function",
        "detail": "GetKeycodeString returns a human-readable keyboard shortcut string.",
        "insertText": "FormIt.Shortcuts.GetKeycodeString(key, modifier);",
        "documentation": {
            "value": "# [FormIt.Shortcuts.GetKeycodeString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__shortcuts.html#ga6fced66b3e3f95243881cb8358563ffb)\n\n## GetKeycodeString returns a human-readable keyboard shortcut string.\n\n## Parameters\n* key\n* modifier\n"
        }
    },
    {
        "label": "FormIt.Shortcuts.GetShortcutKeys",
        "kind": "Function",
        "detail": "Get the shortcuts.",
        "insertText": "FormIt.Shortcuts.GetShortcutKeys();",
        "documentation": {
            "value": "# [FormIt.Shortcuts.GetShortcutKeys](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__shortcuts.html#ga49843c2f6c985c48c363691a88a56a62)\n\n## Get the shortcuts.\n\n"
        }
    },
    {
        "label": "FormIt.Shortcuts.RestoreFromJSON",
        "kind": "Function",
        "detail": "Restore the shortcuts in the given JSON string.",
        "insertText": "FormIt.Shortcuts.RestoreFromJSON(jsonStr);",
        "documentation": {
            "value": "# [FormIt.Shortcuts.RestoreFromJSON](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__shortcuts.html#gaefd46412939aa50f10135bf7e2f62cb6)\n\n## Restore the shortcuts in the given JSON string.\n\n## Parameters\n* jsonStr\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.AssignMaterialToObjects",
        "kind": "Function",
        "insertText": "FormIt.SketchMaterials.AssignMaterialToObjects();",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.AssignMaterialToObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga2011cf6b1d590161799974db18f79752)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.ChangeMaterialOrder",
        "kind": "Function",
        "detail": "Give the material a new position in the list.",
        "insertText": "FormIt.SketchMaterials.ChangeMaterialOrder(materialId, newPos);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.ChangeMaterialOrder](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga3c2b3a23dc4954f3eed55b70575e393b)\n\n## Give the material a new position in the list.\n\n## Parameters\n* materialId\n* newPos\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.GetAllObjectsUsingMaterials",
        "kind": "Function",
        "detail": "Return all objects that are used by the given vector of materials.",
        "insertText": "FormIt.SketchMaterials.GetAllObjectsUsingMaterials(materialIds);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.GetAllObjectsUsingMaterials](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga19f102d6bc70f0f67524bbd527defb58)\n\n## Return all objects that are used by the given vector of materials.\n\n## Parameters\n* materialIds\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.GetDefaultMaterialData",
        "kind": "Function",
        "detail": "Return the material data of the default sketch material.",
        "insertText": "FormIt.SketchMaterials.GetDefaultMaterialData(bBack);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.GetDefaultMaterialData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga06bc56c3ba34622c19b8d783cf8b087f)\n\n## Return the material data of the default sketch material.\n\n## Parameters\n* bBack\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.GetMaterialDataAttribute",
        "kind": "Function",
        "detail": "Return the attribute of a material data.",
        "insertText": "FormIt.SketchMaterials.GetMaterialDataAttribute(materialData, attributeType);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.GetMaterialDataAttribute](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga6a5fe85c4ab6a921d61cc102b3759723)\n\n## Return the attribute of a material data.\n\n## Parameters\n* materialData\n* attributeType\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.GetMaterialDataMap",
        "kind": "Function",
        "detail": "Return the map of a material data.",
        "insertText": "FormIt.SketchMaterials.GetMaterialDataMap(materialData, mapType);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.GetMaterialDataMap](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga4c5c5b0b159003de6ab9315862b52af4)\n\n## Return the map of a material data.\n\n## Parameters\n* materialData\n* mapType\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.GetMaterialIDsFromObjects",
        "kind": "Function",
        "insertText": "FormIt.SketchMaterials.GetMaterialIDsFromObjects();",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.GetMaterialIDsFromObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga2e7abff33d098d1f45554ba51efae2db)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.GetSketchMaterialFromWSMMaterial",
        "kind": "Function",
        "detail": "Get the sketch material id from the WSM material.",
        "insertText": "FormIt.SketchMaterials.GetSketchMaterialFromWSMMaterial(historyId, wsmMaterialId);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.GetSketchMaterialFromWSMMaterial](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga72a686499692639028b82de83746a61d)\n\n## Get the sketch material id from the WSM material.\n\n## Parameters\n* historyId\n* wsmMaterialId\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.GetWSMMaterialForHistory",
        "kind": "Function",
        "insertText": "FormIt.SketchMaterials.GetWSMMaterialForHistory();",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.GetWSMMaterialForHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga05ca7c1363ae5c623cf69b7cdbef04fe)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.IsMaterialUsed",
        "kind": "Function",
        "detail": "Return true if a sketch material id is in use.",
        "insertText": "FormIt.SketchMaterials.IsMaterialUsed(materialId);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.IsMaterialUsed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga8fc6c61c5c90e229acdd6bd3dc508d38)\n\n## Return true if a sketch material id is in use.\n\n## Parameters\n* materialId\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.RearrangeMaterials",
        "kind": "Function",
        "detail": "Rearrange the materials to be put before or after the given other material.",
        "insertText": "FormIt.SketchMaterials.RearrangeMaterials(materialIds, materialBeforeOrAfterId, insertAfter);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.RearrangeMaterials](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga7bc67f8591d52209d091b64a219626bb)\n\n## Rearrange the materials to be put before or after the given other material.\n\n## Parameters\n* materialIds\n* materialBeforeOrAfterId\n* insertAfter\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.SetDefaultMaterialData",
        "kind": "Function",
        "insertText": "FormIt.SketchMaterials.SetDefaultMaterialData();",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.SetDefaultMaterialData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga12d8cab61d7f9a8206ef3f3ebe6c5b70)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.SetMaterialDataAttribute",
        "kind": "Function",
        "detail": "Set the attribute of a material data.",
        "insertText": "FormIt.SketchMaterials.SetMaterialDataAttribute(materialData, attributeType, value);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.SetMaterialDataAttribute](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#gab52aeeca7518631e6cf97390fc469bde)\n\n## Set the attribute of a material data.\n\n## Parameters\n* materialData\n* attributeType\n* value\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.SetMaterialDataMap",
        "kind": "Function",
        "detail": "Set the map of a material data.",
        "insertText": "FormIt.SketchMaterials.SetMaterialDataMap(materialData, mapType, map);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.SetMaterialDataMap](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#gadfe049050276fbe48d480f1cce65c801)\n\n## Set the map of a material data.\n\n## Parameters\n* materialData\n* mapType\n* map\n"
        }
    },
    {
        "label": "FormIt.SketchMaterials.UpdateMaterialFromParameters",
        "kind": "Function",
        "detail": "Update the firefly material with the basic parameters.",
        "insertText": "FormIt.SketchMaterials.UpdateMaterialFromParameters(materialId, parameters, materialID);",
        "documentation": {
            "value": "# [FormIt.SketchMaterials.UpdateMaterialFromParameters](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sketchmaterials.html#ga5804f9349bff575fd7ffc1784fabcdaa)\n\n## Update the firefly material with the basic parameters.\n\n## Parameters\n* materialId\n* parameters\n* materialID\n"
        }
    },
    {
        "label": "FormIt.Statistics.Log",
        "kind": "Function",
        "detail": "Log analytics.",
        "insertText": "FormIt.Statistics.Log(UITrackingType);",
        "documentation": {
            "value": "# [FormIt.Statistics.Log](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__statistics.html#ga0627b6c099a8d1be30afd18c859ce167)\n\n## Log analytics.\n\n## Parameters\n* UITrackingType\n"
        }
    },
    {
        "label": "FormIt.Statistics.OptOutTracking",
        "kind": "Function",
        "detail": "OptOutTracking() function.",
        "insertText": "FormIt.Statistics.OptOutTracking(isOptingOut);",
        "documentation": {
            "value": "# [FormIt.Statistics.OptOutTracking](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__statistics.html#gaf2e289e3c16481072e5b19f8bb725aa4)\n\n## OptOutTracking() function.\n\n## Parameters\n* isOptingOut\n"
        }
    },
    {
        "label": "FormIt.StringConversion.AreaValueToString",
        "kind": "Function",
        "detail": "AreaValueToString converts an area value to a string Parameters: In: val In: forceFeetOrMeter Out: { unitValue }.",
        "insertText": "FormIt.StringConversion.AreaValueToString(val, forceFeetOrMeter);",
        "documentation": {
            "value": "# [FormIt.StringConversion.AreaValueToString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__stringconversion.html#gaeb2d4f92289a49890b17fcc704db3f41)\n\n## AreaValueToString converts an area value to a string Parameters: In: val In: forceFeetOrMeter Out: { unitValue }.\n\n## Parameters\n* val\n* forceFeetOrMeter\n"
        }
    },
    {
        "label": "FormIt.StringConversion.LinearValueToString",
        "kind": "Function",
        "insertText": "FormIt.StringConversion.LinearValueToString();",
        "documentation": {
            "value": "# [FormIt.StringConversion.LinearValueToString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__stringconversion.html#ga2dac3aad9585927c9b3b1ee9920de4b6)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.StringConversion.StringToAreaValue",
        "kind": "Function",
        "detail": "StringToAreaValue converts a string to an area value Parameters: In: val In: forceFeetOrMeter Out: { success: result: }.",
        "insertText": "FormIt.StringConversion.StringToAreaValue(val, forceFeetOrMeter);",
        "documentation": {
            "value": "# [FormIt.StringConversion.StringToAreaValue](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__stringconversion.html#gae37595fc86ce8f1cf1e310709976e53e)\n\n## StringToAreaValue converts a string to an area value Parameters: In: val In: forceFeetOrMeter Out: { success: result: }.\n\n## Parameters\n* val\n* forceFeetOrMeter\n"
        }
    },
    {
        "label": "FormIt.StringConversion.StringToLinearValue",
        "kind": "Function",
        "detail": "StringToLinearValue converts a string to a double Parameters: In: val In: forceFeetOrMeter Out: { success: result: }.",
        "insertText": "FormIt.StringConversion.StringToLinearValue(val, forceFeetOrMeter);",
        "documentation": {
            "value": "# [FormIt.StringConversion.StringToLinearValue](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__stringconversion.html#ga5c4c69434c27928139bdfa2f41b44dfa)\n\n## StringToLinearValue converts a string to a double Parameters: In: val In: forceFeetOrMeter Out: { success: result: }.\n\n## Parameters\n* val\n* forceFeetOrMeter\n"
        }
    },
    {
        "label": "FormIt.StringConversion.StringToVolumeValue",
        "kind": "Function",
        "detail": "StringToVolumeValue converts a string to a volume value Parameters: In: val In: forceFeetOrMeter Out: { success: result: }.",
        "insertText": "FormIt.StringConversion.StringToVolumeValue(val, forceFeetOrMeter);",
        "documentation": {
            "value": "# [FormIt.StringConversion.StringToVolumeValue](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__stringconversion.html#ga701433c875b0bd58888a0f7541552542)\n\n## StringToVolumeValue converts a string to a volume value Parameters: In: val In: forceFeetOrMeter Out: { success: result: }.\n\n## Parameters\n* val\n* forceFeetOrMeter\n"
        }
    },
    {
        "label": "FormIt.StringConversion.VolumeValueToString",
        "kind": "Function",
        "detail": "VolumeValueToString converts a volume value to a string Parameters: In: val In: forceFeetOrMeter Out: { unitValue }.",
        "insertText": "FormIt.StringConversion.VolumeValueToString(val, forceFeetOrMeter);",
        "documentation": {
            "value": "# [FormIt.StringConversion.VolumeValueToString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__stringconversion.html#ga2a296ee2da6baca444133e938db8dae7)\n\n## VolumeValueToString converts a volume value to a string Parameters: In: val In: forceFeetOrMeter Out: { unitValue }.\n\n## Parameters\n* val\n* forceFeetOrMeter\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.AddSatelliteImage",
        "kind": "Function",
        "insertText": "FormIt.SunAndLocation.AddSatelliteImage();",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.AddSatelliteImage](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#ga5513c901349e76257501e63c81e786b8)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.GetDaylightSavingTime",
        "kind": "Function",
        "detail": "GetDaylightSavingTime true if DST is active.",
        "insertText": "FormIt.SunAndLocation.GetDaylightSavingTime();",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.GetDaylightSavingTime](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#ga54a470782534521b0163ff49c3f113d6)\n\n## GetDaylightSavingTime true if DST is active.\n\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.GetLightDirectionFromLocationData",
        "kind": "Function",
        "detail": "GetLightDirectionFromLocationData Parameters: In:SunLocationData Out: {{\"objectName\", \"Vector3d\", \"x\":, \"y\":, \"z\": };.",
        "insertText": "FormIt.SunAndLocation.GetLightDirectionFromLocationData(sunLocationData);",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.GetLightDirectionFromLocationData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#gac64733377457059edc125104cf2d3e1a)\n\n## GetLightDirectionFromLocationData Parameters: In:SunLocationData Out: {{\"objectName\", \"Vector3d\", \"x\":, \"y\":, \"z\": };.\n\n## Parameters\n* sunLocationData\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.GetLocationDateTime",
        "kind": "Function",
        "detail": "GetLocationDateTime Parameters: In: Out: {{\"objectName\", \"SunLocationData\", \"latitude\":, \"longitude\":, \"Time\":, \"UTCTimeZone\":, \"DSTOffset\":, \"Day\":, \"Month\":, \"Year\":, \"DSTEnabled\":};.",
        "insertText": "FormIt.SunAndLocation.GetLocationDateTime();",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.GetLocationDateTime](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#ga759064c06cd8df76d13db78ead2138ee)\n\n## GetLocationDateTime Parameters: In: Out: {{\"objectName\", \"SunLocationData\", \"latitude\":, \"longitude\":, \"Time\":, \"UTCTimeZone\":, \"DSTOffset\":, \"Day\":, \"Month\":, \"Year\":, \"DSTEnabled\":};.\n\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.GetProjectAddress",
        "kind": "Function",
        "detail": "GetProjectAddress returns the location address.",
        "insertText": "FormIt.SunAndLocation.GetProjectAddress();",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.GetProjectAddress](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#ga394027be35be114ebb7da0fc712d51d4)\n\n## GetProjectAddress returns the location address.\n\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.GetSunRiseAndSet",
        "kind": "Function",
        "detail": "GetSunRiseAndSet Parameters: In: Out: {\"objectName\"\" \"SunRiseData\",\n       sunRises\":, sunRise\":,\n       sunSet\":};.",
        "insertText": "FormIt.SunAndLocation.GetSunRiseAndSet();",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.GetSunRiseAndSet](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#ga36df182df65191900ee168a7941b0892)\n\n## GetSunRiseAndSet Parameters: In: Out: {\"objectName\"\" \"SunRiseData\",\n       sunRises\":, sunRise\":,\n       sunSet\":};.\n\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.SetDate",
        "kind": "Function",
        "detail": "SetDate sets the date.",
        "insertText": "FormIt.SunAndLocation.SetDate(nDay, nMonth, nYear, bUpdateRender, bForceUpdateShadows);",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.SetDate](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#ga6088f2ac7c7e2bbcb60b66f50030fb86)\n\n## SetDate sets the date.\n\n## Parameters\n* nDay\n* nMonth\n* nYear\n* bUpdateRender\n* bForceUpdateShadows\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.SetDaylightSavingTime",
        "kind": "Function",
        "detail": "SetDaylightSavingTime sets DST on/off.",
        "insertText": "FormIt.SunAndLocation.SetDaylightSavingTime(bEnable, bUpdateRender);",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.SetDaylightSavingTime](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#ga6a3692c3b9434f55236ba2be643a4a6d)\n\n## SetDaylightSavingTime sets DST on/off.\n\n## Parameters\n* bEnable\n* bUpdateRender\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.SetLocation",
        "kind": "Function",
        "detail": "SetLocation sets the location.",
        "insertText": "FormIt.SunAndLocation.SetLocation(longitude, latitude);",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.SetLocation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#gaa92d4b94e144d45d056b92ab4d5b6b3e)\n\n## SetLocation sets the location.\n\n## Parameters\n* longitude\n* latitude\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.SetProjectAddress",
        "kind": "Function",
        "detail": "SetProjectAddress sets the location address.",
        "insertText": "FormIt.SunAndLocation.SetProjectAddress(address);",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.SetProjectAddress](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#gacc4a92f7a0fd44e6820e808430e27535)\n\n## SetProjectAddress sets the location address.\n\n## Parameters\n* address\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.SetTimeOfDay",
        "kind": "Function",
        "detail": "SetTimeOfDay sets the time of day.",
        "insertText": "FormIt.SunAndLocation.SetTimeOfDay(dTimeOfDay, bUpdateRender, bForceUpdateShadows);",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.SetTimeOfDay](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#ga99fc4c5b2389582e14bdc739d0f6e1bf)\n\n## SetTimeOfDay sets the time of day.\n\n## Parameters\n* dTimeOfDay\n* bUpdateRender\n* bForceUpdateShadows\n"
        }
    },
    {
        "label": "FormIt.SunAndLocation.UpdateShadows",
        "kind": "Function",
        "detail": "UpdateShadows updates the shadows.",
        "insertText": "FormIt.SunAndLocation.UpdateShadows();",
        "documentation": {
            "value": "# [FormIt.SunAndLocation.UpdateShadows](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__sunandlocation.html#gabc55a8ea72b95f9045a243349cee0a3d)\n\n## UpdateShadows updates the shadows.\n\n"
        }
    },
    {
        "label": "FormIt.Tools.BlendFacesOrEdges",
        "kind": "Function",
        "detail": "BlendFacesOrEdges() function.",
        "insertText": "FormIt.Tools.BlendFacesOrEdges(val);",
        "documentation": {
            "value": "# [FormIt.Tools.BlendFacesOrEdges](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#gab8b48d7dd3f3edf2c04878cb4a63af99)\n\n## BlendFacesOrEdges() function.\n\n## Parameters\n* val\n"
        }
    },
    {
        "label": "FormIt.Tools.ClearAllInferences",
        "kind": "Function",
        "detail": "ClearAllInferences() function.",
        "insertText": "FormIt.Tools.ClearAllInferences();",
        "documentation": {
            "value": "# [FormIt.Tools.ClearAllInferences](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#ga27cfb8bd7c836dbdbf131b2b8241a3ec)\n\n## ClearAllInferences() function.\n\n"
        }
    },
    {
        "label": "FormIt.Tools.ClearTools",
        "kind": "Function",
        "detail": "ClearTools() function.",
        "insertText": "FormIt.Tools.ClearTools();",
        "documentation": {
            "value": "# [FormIt.Tools.ClearTools](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#gaa9f444a22081afc34db7fa2dbe8b4db6)\n\n## ClearTools() function.\n\n"
        }
    },
    {
        "label": "FormIt.Tools.FlattenGroups",
        "kind": "Function",
        "detail": "FlattenGroups() function.",
        "insertText": "FormIt.Tools.FlattenGroups();",
        "documentation": {
            "value": "# [FormIt.Tools.FlattenGroups](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#ga3422652bb7dd95ae9f7ef19764a69429)\n\n## FlattenGroups() function.\n\n"
        }
    },
    {
        "label": "FormIt.Tools.GetActiveToolSubType",
        "kind": "Function",
        "detail": "GetActiveToolSubType() function.",
        "insertText": "FormIt.Tools.GetActiveToolSubType();",
        "documentation": {
            "value": "# [FormIt.Tools.GetActiveToolSubType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#ga784f15a0c4db6cea725ae39765bf7f9a)\n\n## GetActiveToolSubType() function.\n\n"
        }
    },
    {
        "label": "FormIt.Tools.GetActiveToolType",
        "kind": "Function",
        "detail": "GetActiveToolType() function.",
        "insertText": "FormIt.Tools.GetActiveToolType();",
        "documentation": {
            "value": "# [FormIt.Tools.GetActiveToolType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#gaef1b9aad8b5ba6e2e1b59046aacd00ea)\n\n## GetActiveToolType() function.\n\n"
        }
    },
    {
        "label": "FormIt.Tools.IsInContinuousAction",
        "kind": "Function",
        "detail": "IsInContinuousAction() function.",
        "insertText": "FormIt.Tools.IsInContinuousAction();",
        "documentation": {
            "value": "# [FormIt.Tools.IsInContinuousAction](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#gadca00c633ecb7c0516a4ccaaa8572754)\n\n## IsInContinuousAction() function.\n\n"
        }
    },
    {
        "label": "FormIt.Tools.OffsetBody",
        "kind": "Function",
        "detail": "OffsetBody() function.",
        "insertText": "FormIt.Tools.OffsetBody(val);",
        "documentation": {
            "value": "# [FormIt.Tools.OffsetBody](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#ga1759591677a59f42edecbc5badec1602)\n\n## OffsetBody() function.\n\n## Parameters\n* val\n"
        }
    },
    {
        "label": "FormIt.Tools.Paintbrush",
        "kind": "Function",
        "detail": "Added this so we can call the paintbrush tool through the JS API rather than module.ccall() in Web.",
        "insertText": "FormIt.Tools.Paintbrush(materialID, backside);",
        "documentation": {
            "value": "# [FormIt.Tools.Paintbrush](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#ga1359d9835c9d67ac1ed038be8cdb605f)\n\n## Added this so we can call the paintbrush tool through the JS API rather than module.ccall() in Web.\n\n## Parameters\n* materialID\n* backside\n"
        }
    },
    {
        "label": "FormIt.Tools.ShellBodyOrFaces",
        "kind": "Function",
        "detail": "ShellBodyOrFaces() function.",
        "insertText": "FormIt.Tools.ShellBodyOrFaces(val);",
        "documentation": {
            "value": "# [FormIt.Tools.ShellBodyOrFaces](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#ga0bad68e4730c92deb67302fd92c162be)\n\n## ShellBodyOrFaces() function.\n\n## Parameters\n* val\n"
        }
    },
    {
        "label": "FormIt.Tools.StartTool",
        "kind": "Function",
        "detail": "StartTool() function.",
        "insertText": "FormIt.Tools.StartTool(toolType);",
        "documentation": {
            "value": "# [FormIt.Tools.StartTool](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__tools.html#gaeb60b3b0ed4eb594ce740e1bb00b197c)\n\n## StartTool() function.\n\n## Parameters\n* toolType\n"
        }
    },
    {
        "label": "FormIt.UI.AddorReplaceTranslation",
        "kind": "Function",
        "detail": "Add or replace an English string to Translate lookup with its corresponding translation.",
        "insertText": "FormIt.UI.AddorReplaceTranslation(Component, EnglishString, TranslatedString);",
        "documentation": {
            "value": "# [FormIt.UI.AddorReplaceTranslation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__ui.html#ga7882797034f42394334b53ba0d8e65d8)\n\n## Add or replace an English string to Translate lookup with its corresponding translation.\n\n## Parameters\n* Component\n* EnglishString\n* TranslatedString\n"
        }
    },
    {
        "label": "FormIt.UI.CloseNotification",
        "kind": "Function",
        "detail": "CloseNotification closes notification message being displayed related to the notificationHandle passed as input parameter.",
        "insertText": "FormIt.UI.CloseNotification(notificationHandle);",
        "documentation": {
            "value": "# [FormIt.UI.CloseNotification](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__ui.html#ga52de008ad5ad73869289264e26df62f4)\n\n## CloseNotification closes notification message being displayed related to the notificationHandle passed as input parameter.\n\n## Parameters\n* notificationHandle\n"
        }
    },
    {
        "label": "FormIt.UI.CreatePanel",
        "kind": "Function",
        "detail": "CreatePanel creates a dockable panel with the given name and displays the given URL.",
        "insertText": "FormIt.UI.CreatePanel(title, url);",
        "documentation": {
            "value": "# [FormIt.UI.CreatePanel](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__ui.html#ga929758faf4a34f6e3e8babaacef41b64)\n\n## CreatePanel creates a dockable panel with the given name and displays the given URL.\n\n## Parameters\n* title\n* url\n"
        }
    },
    {
        "label": "FormIt.UI.CreateToolbar",
        "kind": "Function",
        "detail": "CreateToolbar creates a toolbar with the structure given by the passed in JSON.",
        "insertText": "FormIt.UI.CreateToolbar(tbJSON, URL);",
        "documentation": {
            "value": "# [FormIt.UI.CreateToolbar](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__ui.html#gab3ecbb27129a753c8c92ba8e59111b5b)\n\n## CreateToolbar creates a toolbar with the structure given by the passed in JSON.\n\n## Parameters\n* tbJSON\n* URL\n"
        }
    },
    {
        "label": "FormIt.UI.Getbcp47NameCode",
        "kind": "Function",
        "detail": "Get FormIt Locale name code Parameters: In: Out: QT Locale name string code.",
        "insertText": "FormIt.UI.Getbcp47NameCode();",
        "documentation": {
            "value": "# [FormIt.UI.Getbcp47NameCode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__ui.html#ga368be1ef517db8455f4bedc2739ee652)\n\n## Get FormIt Locale name code Parameters: In: Out: QT Locale name string code.\n\n"
        }
    },
    {
        "label": "FormIt.UI.LoadLangPack",
        "kind": "Function",
        "insertText": "FormIt.UI.LoadLangPack();",
        "documentation": {
            "value": "# [FormIt.UI.LoadLangPack](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__ui.html#gaf27366e1c32811b91b46d8c423124c85)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UI.ShowNotification",
        "kind": "Function",
        "detail": "ShowNotification displays a notification message to the user.",
        "insertText": "FormIt.UI.ShowNotification(message, notificationType, nTimeout);",
        "documentation": {
            "value": "# [FormIt.UI.ShowNotification](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__ui.html#gaeafacf25e3a95f3fb3200d777b31a549)\n\n## ShowNotification displays a notification message to the user.\n\n## Parameters\n* message\n* notificationType\n* nTimeout\n"
        }
    },
    {
        "label": "FormIt.UI.TranslationLookup",
        "kind": "Function",
        "detail": "Translate lookup a English string Looks up an English string through all of the components from the current loaded language string files.",
        "insertText": "FormIt.UI.TranslationLookup(value);",
        "documentation": {
            "value": "# [FormIt.UI.TranslationLookup](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__ui.html#ga22544e00a5c662bc0166852ae808f3a9)\n\n## Translate lookup a English string Looks up an English string through all of the components from the current loaded language string files.\n\n## Parameters\n* value\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.BeginState",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.BeginState();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.BeginState](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga2679809ddae5dfb55ad5987f68abbc05)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.CanGlobalRedo",
        "kind": "Function",
        "detail": "Can redo one step in any history.",
        "insertText": "FormIt.UndoManagement.CanGlobalRedo();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.CanGlobalRedo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga498c568cad4a32beb6f6c88dc35b4dc8)\n\n## Can redo one step in any history.\n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.CanGlobalUndo",
        "kind": "Function",
        "detail": "Can undo one step in any history.",
        "insertText": "FormIt.UndoManagement.CanGlobalUndo();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.CanGlobalUndo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga26b319054f5f3bffe2b73a90f97308cb)\n\n## Can undo one step in any history.\n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.CanRedo",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.CanRedo();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.CanRedo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#gab6a1d8ab974b4a1cf4e6e5a0515ef52f)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.CanUndo",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.CanUndo();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.CanUndo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga8c8574f77ecbff357f70159635d0dead)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.EndState",
        "kind": "Function",
        "detail": "Ends a state change operation.",
        "insertText": "FormIt.UndoManagement.EndState(name, userName);",
        "documentation": {
            "value": "# [FormIt.UndoManagement.EndState](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga191d36e95382f8e632bf1106a11f7e20)\n\n## Ends a state change operation.\n\n## Parameters\n* name\n* userName\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.GetCurrentState",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.GetCurrentState();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.GetCurrentState](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga55effc21d3c69a7f4819ebf0f879b0ac)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.GetHistoryIDs",
        "kind": "Function",
        "detail": "Get the IDs of all Historys being managed.",
        "insertText": "FormIt.UndoManagement.GetHistoryIDs();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.GetHistoryIDs](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga0f523bf8e46172f923906c5a4cada899)\n\n## Get the IDs of all Historys being managed.\n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.GetHistoryStates",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.GetHistoryStates();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.GetHistoryStates](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga543129d36ad72959b91920da4cb00fe5)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.GetStateData",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.GetStateData();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.GetStateData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga5fecc1dd9130e80eefcfa21209bc40af)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.GetStateHistories",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.GetStateHistories();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.GetStateHistories](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga0813791f5b78aa2e4b4a3fa50e81c353)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.GlobalRedo",
        "kind": "Function",
        "detail": "Redo to the oldest current state in any history.",
        "insertText": "FormIt.UndoManagement.GlobalRedo();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.GlobalRedo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga1348259ed1811d68de42175624b1e358)\n\n## Redo to the oldest current state in any history.\n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.GlobalUndo",
        "kind": "Function",
        "detail": "Undo the most recent current state in any history and optionally delete redo information when undoing.",
        "insertText": "FormIt.UndoManagement.GlobalUndo(bAndDeleteRedo);",
        "documentation": {
            "value": "# [FormIt.UndoManagement.GlobalUndo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#gaf7be80550cefc621f10b3f0896cf08d2)\n\n## Undo the most recent current state in any history and optionally delete redo information when undoing.\n\n## Parameters\n* bAndDeleteRedo\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.MergeCurrentStates",
        "kind": "Function",
        "detail": "Merge the current state of multiple existing histories into a single state.",
        "insertText": "FormIt.UndoManagement.MergeCurrentStates(histories);",
        "documentation": {
            "value": "# [FormIt.UndoManagement.MergeCurrentStates](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga2e23b074186ec419bd8baa58baca3ee0)\n\n## Merge the current state of multiple existing histories into a single state.\n\n## Parameters\n* histories\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.MergeStateRange",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.MergeStateRange();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.MergeStateRange](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga0ecc6543fbf8269062466bffebd49239)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.MergeStates",
        "kind": "Function",
        "detail": "Merge multiple existing states into a single state.",
        "insertText": "FormIt.UndoManagement.MergeStates(states);",
        "documentation": {
            "value": "# [FormIt.UndoManagement.MergeStates](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga82f83632dd187bc2c0d9dbf2fc85ab04)\n\n## Merge multiple existing states into a single state.\n\n## Parameters\n* states\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.NoteState",
        "kind": "Function",
        "detail": "Note a state that affects the given histories.",
        "insertText": "FormIt.UndoManagement.NoteState(name, aHistories);",
        "documentation": {
            "value": "# [FormIt.UndoManagement.NoteState](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#gac4cfc6607e8f5654a1ed9eb1d21320a4)\n\n## Note a state that affects the given histories.\n\n## Parameters\n* name\n* aHistories\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.Redo",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.Redo();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.Redo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga389f2e1f7891d76a046f4e7a3a662030)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.RejectState",
        "kind": "Function",
        "detail": "Reject the current undo state operation.",
        "insertText": "FormIt.UndoManagement.RejectState();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.RejectState](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga2bedca49c5ac1bb9ace6702110acde0c)\n\n## Reject the current undo state operation.\n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.RollTo",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.RollTo();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.RollTo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#gadb254977338de62d4785f03398a00072)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.SetLastStateName",
        "kind": "Function",
        "detail": "Set the name for the most recent state.",
        "insertText": "FormIt.UndoManagement.SetLastStateName(stateName);",
        "documentation": {
            "value": "# [FormIt.UndoManagement.SetLastStateName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga7491829ed77e88877147411395d127b2)\n\n## Set the name for the most recent state.\n\n## Parameters\n* stateName\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.SetStateName",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.SetStateName();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.SetStateName](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga14e77549546c058b072ae56a8f0a2374)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.UndoManagement.Undo",
        "kind": "Function",
        "insertText": "FormIt.UndoManagement.Undo();",
        "documentation": {
            "value": "# [FormIt.UndoManagement.Undo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__undomanagement.html#ga1199fd82c1a70dc7cfe8112a6364c5d8)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Utils.DecodeBase64Bytes",
        "kind": "Function",
        "insertText": "FormIt.Utils.DecodeBase64Bytes();",
        "documentation": {
            "value": "# [FormIt.Utils.DecodeBase64Bytes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__utils.html#ga4a5b4425bd15c07c86762dd0c496597f)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.Utils.EncodeBase64Bytes",
        "kind": "Function",
        "detail": "Encode a vector of bytes to base64 format Parameters: In: bytes to encode Out: encoded string.",
        "insertText": "FormIt.Utils.EncodeBase64Bytes(encodeBytes);",
        "documentation": {
            "value": "# [FormIt.Utils.EncodeBase64Bytes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__utils.html#ga86af37f2522e5f1b22f29e706f3be01d)\n\n## Encode a vector of bytes to base64 format Parameters: In: bytes to encode Out: encoded string.\n\n## Parameters\n* encodeBytes\n"
        }
    },
    {
        "label": "FormIt.Utils.GuidFromString",
        "kind": "Function",
        "detail": "GuidFromString() function.",
        "insertText": "FormIt.Utils.GuidFromString(hexStr);",
        "documentation": {
            "value": "# [FormIt.Utils.GuidFromString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__utils.html#ga23cadf5e145f6149de96e49480c27120)\n\n## GuidFromString() function.\n\n## Parameters\n* hexStr\n"
        }
    },
    {
        "label": "FormIt.Utils.NewGuid",
        "kind": "Function",
        "detail": "NewGuid() function.",
        "insertText": "FormIt.Utils.NewGuid();",
        "documentation": {
            "value": "# [FormIt.Utils.NewGuid](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__utils.html#gab0bde8e345429f741b996769604ea4be)\n\n## NewGuid() function.\n\n"
        }
    },
    {
        "label": "FormIt.View.FitToModel",
        "kind": "Function",
        "detail": "FitToModel() function.",
        "insertText": "FormIt.View.FitToModel(aIncludeImage, withTransition);",
        "documentation": {
            "value": "# [FormIt.View.FitToModel](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__view.html#ga0837bddedfa66ccf08438ac0b7aede64)\n\n## FitToModel() function.\n\n## Parameters\n* aIncludeImage\n* withTransition\n"
        }
    },
    {
        "label": "FormIt.View.FitToSelection",
        "kind": "Function",
        "detail": "FitToSelection() function.",
        "insertText": "FormIt.View.FitToSelection(withTransition);",
        "documentation": {
            "value": "# [FormIt.View.FitToSelection](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__view.html#gae640df1b2a87b2bf89a055373596b021)\n\n## FitToSelection() function.\n\n## Parameters\n* withTransition\n"
        }
    },
    {
        "label": "FormIt.View.GetViewDirection",
        "kind": "Function",
        "detail": "Gets the current view type Parameters: In: Out: FormIt.CameraDirectionType.",
        "insertText": "FormIt.View.GetViewDirection();",
        "documentation": {
            "value": "# [FormIt.View.GetViewDirection](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__view.html#ga4a58059efcad228cb3f39e8dd694e1a6)\n\n## Gets the current view type Parameters: In: Out: FormIt.CameraDirectionType.\n\n"
        }
    },
    {
        "label": "FormIt.View.HomeView3d",
        "kind": "Function",
        "detail": "HomeView3d() function.",
        "insertText": "FormIt.View.HomeView3d(withTransition);",
        "documentation": {
            "value": "# [FormIt.View.HomeView3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__view.html#ga5a2fa10424815ffe3317ab7a2ddc6249)\n\n## HomeView3d() function.\n\n## Parameters\n* withTransition\n"
        }
    },
    {
        "label": "FormIt.View.SetViewDirection",
        "kind": "Function",
        "detail": "Sets the current view type Parameters: In: FormIt.CameraDirectionType Out:",
        "insertText": "FormIt.View.SetViewDirection(type);",
        "documentation": {
            "value": "# [FormIt.View.SetViewDirection](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__view.html#ga999fbd5e554f9a9c8e9e4ef11d4f6861)\n\n## Sets the current view type Parameters: In: FormIt.CameraDirectionType Out:\n\n## Parameters\n* type\n"
        }
    },
    {
        "label": "FormIt.View.TopView",
        "kind": "Function",
        "detail": "TopView() function.",
        "insertText": "FormIt.View.TopView();",
        "documentation": {
            "value": "# [FormIt.View.TopView](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__view.html#gae09cf187dcf0415b8ba1afb989db2bfb)\n\n## TopView() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetAdvancedMaterialShaderType",
        "kind": "Function",
        "detail": "Get the current material shader type.",
        "insertText": "FormIt.VisualStyles.GetAdvancedMaterialShaderType();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetAdvancedMaterialShaderType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gab0db9bd47c56c6f6b60d6453a549bc76)\n\n## Get the current material shader type.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetAlwaysDrawInstanceBoxes",
        "kind": "Function",
        "detail": "GetAlwaysDrawInstanceBoxes determines whether bounding boxes are visible Parameters: In: None Out: { bool } representing the state of bounding box visibility.",
        "insertText": "FormIt.VisualStyles.GetAlwaysDrawInstanceBoxes();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetAlwaysDrawInstanceBoxes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gac208413a9d716955f3ce1defe8c5f2be)\n\n## GetAlwaysDrawInstanceBoxes determines whether bounding boxes are visible Parameters: In: None Out: { bool } representing the state of bounding box visibility.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetAmbientColorIntensity",
        "kind": "Function",
        "detail": "Get ambient color intensity.",
        "insertText": "FormIt.VisualStyles.GetAmbientColorIntensity();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetAmbientColorIntensity](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gaa2f87154d92d0d6119cfd8ecf2c27881)\n\n## Get ambient color intensity.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetAmbientTextureIntensity",
        "kind": "Function",
        "detail": "Get ambient texture intensity.",
        "insertText": "FormIt.VisualStyles.GetAmbientTextureIntensity();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetAmbientTextureIntensity](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga86da31dd1f5fc23482b91683a2ab9cf6)\n\n## Get ambient texture intensity.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetBackgroundColor",
        "kind": "Function",
        "detail": "GetBackgroundColor() function.",
        "insertText": "FormIt.VisualStyles.GetBackgroundColor();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetBackgroundColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga48184d910228733937835aa1cfd3d9b1)\n\n## GetBackgroundColor() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetEdgeColor",
        "kind": "Function",
        "detail": "GetEdgeColor() function.",
        "insertText": "FormIt.VisualStyles.GetEdgeColor();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetEdgeColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gaeef2b103c97e90a70511711f35d7c72a)\n\n## GetEdgeColor() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetEdgeWeight",
        "kind": "Function",
        "detail": "GetEdgeWeight() function.",
        "insertText": "FormIt.VisualStyles.GetEdgeWeight();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetEdgeWeight](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga84a4284d648b729c968c176cfb331f2b)\n\n## GetEdgeWeight() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetGroundPlaneColor",
        "kind": "Function",
        "detail": "GetGroundPlaneColor() function.",
        "insertText": "FormIt.VisualStyles.GetGroundPlaneColor();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetGroundPlaneColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga573bb11e258a26e75dc8db6bde56d9dd)\n\n## GetGroundPlaneColor() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetGroundPlaneTransparency",
        "kind": "Function",
        "detail": "GetGroundPlaneTransparency() function.",
        "insertText": "FormIt.VisualStyles.GetGroundPlaneTransparency();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetGroundPlaneTransparency](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gaa07675adf6fff49ebb24f2eb71fd0bbc)\n\n## GetGroundPlaneTransparency() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetHighlightPreselect",
        "kind": "Function",
        "detail": "Return the preselect highlight display status Parameters: In: Out: bHighlight.",
        "insertText": "FormIt.VisualStyles.GetHighlightPreselect();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetHighlightPreselect](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gae86e9fe456914ab55647897e5036260e)\n\n## Return the preselect highlight display status Parameters: In: Out: bHighlight.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetNorthArrowDisplay",
        "kind": "Function",
        "detail": "Returns true if the North arrow is set.",
        "insertText": "FormIt.VisualStyles.GetNorthArrowDisplay();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetNorthArrowDisplay](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga659f9f0757fcd9ad96aea5b2dbfab542)\n\n## Returns true if the North arrow is set.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetShadowIntensity",
        "kind": "Function",
        "detail": "Get the shadow intensity.",
        "insertText": "FormIt.VisualStyles.GetShadowIntensity();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetShadowIntensity](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gae509a6e3841bdccf95b6a69c8e8ac41f)\n\n## Get the shadow intensity.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetShadowsVisible",
        "kind": "Function",
        "insertText": "FormIt.VisualStyles.GetShadowsVisible();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetShadowsVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gaa35df1127b0d9d5e3688f1d81910e7b7)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetShowAxes",
        "kind": "Function",
        "detail": "Returns true if the axes are being shown, false otherwise.",
        "insertText": "FormIt.VisualStyles.GetShowAxes();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetShowAxes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gacd5222c1159433b6079c1f38c14623f7)\n\n## Returns true if the axes are being shown, false otherwise.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetSilhouetteWeight",
        "kind": "Function",
        "detail": "GetSilhouetteWeight() function.",
        "insertText": "FormIt.VisualStyles.GetSilhouetteWeight();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetSilhouetteWeight](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga6b4c6dee884f5849cd17bd768aa24027)\n\n## GetSilhouetteWeight() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetSkyLowerColor",
        "kind": "Function",
        "detail": "GetSkyLowerColor() function.",
        "insertText": "FormIt.VisualStyles.GetSkyLowerColor();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetSkyLowerColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gac61f4954387146eb6ee6f436fc5f1b27)\n\n## GetSkyLowerColor() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetSkyUpperColor",
        "kind": "Function",
        "detail": "GetSkyUpperColor() function.",
        "insertText": "FormIt.VisualStyles.GetSkyUpperColor();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetSkyUpperColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga9fb85c7d0fe5e63aabf3925f27f66822)\n\n## GetSkyUpperColor() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetSunEditorEnabled",
        "kind": "Function",
        "detail": "GetSunEditorEnabled() function.",
        "insertText": "FormIt.VisualStyles.GetSunEditorEnabled();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetSunEditorEnabled](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gac0cd8fc396c1ced5cbdabdec340dca71)\n\n## GetSunEditorEnabled() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetSunShading",
        "kind": "Function",
        "detail": "GetSunShading() function.",
        "insertText": "FormIt.VisualStyles.GetSunShading();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetSunShading](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga03c2ac368eab20ba8db3bc9f37f24a85)\n\n## GetSunShading() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.GetWorkPlaneColor",
        "kind": "Function",
        "detail": "GetWorkPlaneColor() function.",
        "insertText": "FormIt.VisualStyles.GetWorkPlaneColor();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.GetWorkPlaneColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga28671bccd9ebdf2d00f9e8a4380d5f63)\n\n## GetWorkPlaneColor() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.IsFogRendered",
        "kind": "Function",
        "detail": "IsFogRendered() function.",
        "insertText": "FormIt.VisualStyles.IsFogRendered();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.IsFogRendered](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga5502e1eec951fe3d3fa1b25876fb2799)\n\n## IsFogRendered() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.IsGridVisible",
        "kind": "Function",
        "detail": "Return the grid display status Parameters: In: Out: bVisible.",
        "insertText": "FormIt.VisualStyles.IsGridVisible();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.IsGridVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga6cfb5495380716c5884609312813baa1)\n\n## Return the grid display status Parameters: In: Out: bVisible.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.IsGroundPlaneVisible",
        "kind": "Function",
        "detail": "IsGroundPlaneVisible indicates whether or not the ground plane will be drawn Parameters: In: None Out: { bool }.",
        "insertText": "FormIt.VisualStyles.IsGroundPlaneVisible();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.IsGroundPlaneVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga72bbf871f257fb12ae48ea35f9709346)\n\n## IsGroundPlaneVisible indicates whether or not the ground plane will be drawn Parameters: In: None Out: { bool }.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.IsNorthArrowVisible",
        "kind": "Function",
        "detail": "returns true if the North arrow is set to display, false otherwise",
        "insertText": "FormIt.VisualStyles.IsNorthArrowVisible();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.IsNorthArrowVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga914b43fbed05c5e43afbb01505324567)\n\n## returns true if the North arrow is set to display, false otherwise\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.IsRenderSettingActive",
        "kind": "Function",
        "detail": "IsRenderSettingActive returns bool if the particular render mode is set Parameters: In: solid render flag enum Out: bool.",
        "insertText": "FormIt.VisualStyles.IsRenderSettingActive(flag);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.IsRenderSettingActive](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gafcede246889f3317fdd8181915369176)\n\n## IsRenderSettingActive returns bool if the particular render mode is set Parameters: In: solid render flag enum Out: bool.\n\n## Parameters\n* flag\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.IsSkyRendered",
        "kind": "Function",
        "detail": "IsSkyRendered() function.",
        "insertText": "FormIt.VisualStyles.IsSkyRendered();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.IsSkyRendered](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gac2a925b225a7523720a4d7bb9bd1511d)\n\n## IsSkyRendered() function.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.IsWorkPlaneVisible",
        "kind": "Function",
        "detail": "IsWorkPlaneVisible indicates whether or not the work plane will be drawn Parameters: In: None Out: { bool }.",
        "insertText": "FormIt.VisualStyles.IsWorkPlaneVisible();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.IsWorkPlaneVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga54b2efca79af6f226585957e015dfcb9)\n\n## IsWorkPlaneVisible indicates whether or not the work plane will be drawn Parameters: In: None Out: { bool }.\n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetAdvancedMaterialShaderType",
        "kind": "Function",
        "detail": "Sets the shader type to use for materials.",
        "insertText": "FormIt.VisualStyles.SetAdvancedMaterialShaderType(FY.EffectCache.EffectType., type);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetAdvancedMaterialShaderType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga84e768d0a495980777256e6335f2c5f0)\n\n## Sets the shader type to use for materials.\n\n## Parameters\n* FY.EffectCache.EffectType.\n* type\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetAlwaysDrawInstanceBoxes",
        "kind": "Function",
        "detail": "SetGroupBoundingBoxVisibility adjusts whether bounding boxes are visible Parameters: In: val (bool) Out: JSON_UNDEFINED.",
        "insertText": "FormIt.VisualStyles.SetAlwaysDrawInstanceBoxes(val);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetAlwaysDrawInstanceBoxes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gafdc53091a0482914fae923f59ff7aa33)\n\n## SetGroupBoundingBoxVisibility adjusts whether bounding boxes are visible Parameters: In: val (bool) Out: JSON_UNDEFINED.\n\n## Parameters\n* val\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetAmbientColorIntensity",
        "kind": "Function",
        "detail": "Sets the \"ambient color intensity,\" or how \"bright\" unlit, colored faces will appear.",
        "insertText": "FormIt.VisualStyles.SetAmbientColorIntensity(float, i);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetAmbientColorIntensity](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga3e5c9136bd3c5786b503f7be5aa1f76d)\n\n## Sets the \"ambient color intensity,\" or how \"bright\" unlit, colored faces will appear.\n\n## Parameters\n* float\n* i\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetAmbientMaterialIntensity",
        "kind": "Function",
        "detail": "SetAmbientMaterialIntensity() function.",
        "insertText": "FormIt.VisualStyles.SetAmbientMaterialIntensity(i);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetAmbientMaterialIntensity](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gac7b4cb08de9c773dd369e14d54a1ad59)\n\n## SetAmbientMaterialIntensity() function.\n\n## Parameters\n* i\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetAmbientTextureIntensity",
        "kind": "Function",
        "detail": "Sets the \"ambient texture color intensity,\" or how \"bright\" unlit, textured faces will appear.",
        "insertText": "FormIt.VisualStyles.SetAmbientTextureIntensity(float, i);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetAmbientTextureIntensity](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga31be6ab109482647097a98f0d0519e10)\n\n## Sets the \"ambient texture color intensity,\" or how \"bright\" unlit, textured faces will appear.\n\n## Parameters\n* float\n* i\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetBackgroundColor",
        "kind": "Function",
        "detail": "SetBackgroundColor() function.",
        "insertText": "FormIt.VisualStyles.SetBackgroundColor(color);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetBackgroundColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gaacdbdcb64b289e9b80bbac5d580ca7b9)\n\n## SetBackgroundColor() function.\n\n## Parameters\n* color\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetEdgeColor",
        "kind": "Function",
        "detail": "SetEdgeColor() function.",
        "insertText": "FormIt.VisualStyles.SetEdgeColor(color);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetEdgeColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gadf1e779144fc9546bb49d7c0fb4d814d)\n\n## SetEdgeColor() function.\n\n## Parameters\n* color\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetEdgeWeight",
        "kind": "Function",
        "detail": "SetEdgeWeight() function.",
        "insertText": "FormIt.VisualStyles.SetEdgeWeight(weight);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetEdgeWeight](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga8697932217f64a6f728fb3782c3e8a2f)\n\n## SetEdgeWeight() function.\n\n## Parameters\n* weight\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetFogRendered",
        "kind": "Function",
        "detail": "SetFogRendered() function.",
        "insertText": "FormIt.VisualStyles.SetFogRendered(b);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetFogRendered](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga09d7e3b5c48d88ffc55e62f42899e0c6)\n\n## SetFogRendered() function.\n\n## Parameters\n* b\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetGridVisible",
        "kind": "Function",
        "detail": "Set the grid display status Parameters: In: bVisible Out: JSON_UNDEFINED.",
        "insertText": "FormIt.VisualStyles.SetGridVisible(bVisible);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetGridVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gaa5847eadb59722429f2746a85ce870ed)\n\n## Set the grid display status Parameters: In: bVisible Out: JSON_UNDEFINED.\n\n## Parameters\n* bVisible\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetGroundPlaneColor",
        "kind": "Function",
        "detail": "SetGroundPlaneColor() function.",
        "insertText": "FormIt.VisualStyles.SetGroundPlaneColor(color);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetGroundPlaneColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga66498e96e641d8929c80ab4cb74c6919)\n\n## SetGroundPlaneColor() function.\n\n## Parameters\n* color\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetGroundPlaneTransparency",
        "kind": "Function",
        "insertText": "FormIt.VisualStyles.SetGroundPlaneTransparency();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetGroundPlaneTransparency](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gab2b17e40c0e206801bf1d00b89adc772)\n\n## \n\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetGroundPlaneVisible",
        "kind": "Function",
        "detail": "SetGroundPlaneVisible sets whether or not the ground plane will be drawn Parameters: In: val (bool) true == ground plane will be drawn Out: JSON_UNDEFINED.",
        "insertText": "FormIt.VisualStyles.SetGroundPlaneVisible(val);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetGroundPlaneVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga8565c4f38f3bba141654d765c979bd68)\n\n## SetGroundPlaneVisible sets whether or not the ground plane will be drawn Parameters: In: val (bool) true == ground plane will be drawn Out: JSON_UNDEFINED.\n\n## Parameters\n* val\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetHighlightPreselect",
        "kind": "Function",
        "detail": "Set the preselect highlight display status Parameters: In: bHighlight Out: JSON_UNDEFINED.",
        "insertText": "FormIt.VisualStyles.SetHighlightPreselect(bHighlight);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetHighlightPreselect](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga02085d24ddf892bfe5b19cc48ad5cfa5)\n\n## Set the preselect highlight display status Parameters: In: bHighlight Out: JSON_UNDEFINED.\n\n## Parameters\n* bHighlight\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetNorthArrowDisplay",
        "kind": "Function",
        "detail": "Sets if the North arrow should display - true to display, false to not display.",
        "insertText": "FormIt.VisualStyles.SetNorthArrowDisplay(bOn);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetNorthArrowDisplay](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga2b56cc44346f8459f6029fc041d1764c)\n\n## Sets if the North arrow should display - true to display, false to not display.\n\n## Parameters\n* bOn\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetRenderSettingFlags",
        "kind": "Function",
        "detail": "SetRenderSettingFlags takes a SolidRendererFlags and bool to enable the flag Parameters: In: flag, b solid render flag enum (FormIt.SolidRendererFlags), bool (on/off) Out: JSON_UNDEFINED.",
        "insertText": "FormIt.VisualStyles.SetRenderSettingFlags(flag, b);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetRenderSettingFlags](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gad43eef00a1d17b60b414fd0200fd6cf4)\n\n## SetRenderSettingFlags takes a SolidRendererFlags and bool to enable the flag Parameters: In: flag, b solid render flag enum (FormIt.SolidRendererFlags), bool (on/off) Out: JSON_UNDEFINED.\n\n## Parameters\n* flag\n* b\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetShadowIntensity",
        "kind": "Function",
        "detail": "Sets the \"shadow intensity,\" or how \"dark\" shadows appear.",
        "insertText": "FormIt.VisualStyles.SetShadowIntensity(float, i);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetShadowIntensity](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga6aa15a5ac34fdc81fce6f53bb94b9985)\n\n## Sets the \"shadow intensity,\" or how \"dark\" shadows appear.\n\n## Parameters\n* float\n* i\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetShadowsVisible",
        "kind": "Function",
        "detail": "GetRenderShadowVisibility adjusts the setting to show shadows Parameters: In: val (bool) Out: JSON_UNDEFINED.",
        "insertText": "FormIt.VisualStyles.SetShadowsVisible(val);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetShadowsVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gafdc46f8c97273bae61ba92e1478a5e11)\n\n## GetRenderShadowVisibility adjusts the setting to show shadows Parameters: In: val (bool) Out: JSON_UNDEFINED.\n\n## Parameters\n* val\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetShowAxes",
        "kind": "Function",
        "detail": "Sets if the axes should be drawn.",
        "insertText": "FormIt.VisualStyles.SetShowAxes(bShow);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetShowAxes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga71c030e3875fd1cfe80e15e1ea04ef1a)\n\n## Sets if the axes should be drawn.\n\n## Parameters\n* bShow\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetShowEdges",
        "kind": "Function",
        "detail": "Sets if edges should be drawn.",
        "insertText": "FormIt.VisualStyles.SetShowEdges(bShow);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetShowEdges](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga82d18126ce9c77ce45d8e379152fdd58)\n\n## Sets if edges should be drawn.\n\n## Parameters\n* bShow\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetShowSilhouettes",
        "kind": "Function",
        "detail": "Sets if silhouettes should be drawn.",
        "insertText": "FormIt.VisualStyles.SetShowSilhouettes(bShow);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetShowSilhouettes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga7e70daea72ab8913c3546909c89e7563)\n\n## Sets if silhouettes should be drawn.\n\n## Parameters\n* bShow\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetSilhouetteWeight",
        "kind": "Function",
        "detail": "SetSilhouetteWeight() function.",
        "insertText": "FormIt.VisualStyles.SetSilhouetteWeight(weight);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetSilhouetteWeight](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga471ba047f1d3c766ebf6fcd6d171741e)\n\n## SetSilhouetteWeight() function.\n\n## Parameters\n* weight\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetSkyLowerColor",
        "kind": "Function",
        "detail": "SetSkyLowerColor() function.",
        "insertText": "FormIt.VisualStyles.SetSkyLowerColor(color);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetSkyLowerColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga8bfba3e8a7077be7f58f2c4d63f4d309)\n\n## SetSkyLowerColor() function.\n\n## Parameters\n* color\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetSkyRendered",
        "kind": "Function",
        "detail": "SetSkyRendered() function.",
        "insertText": "FormIt.VisualStyles.SetSkyRendered(b);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetSkyRendered](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga7d27f5ddd2d79df05b86d63312a3fb77)\n\n## SetSkyRendered() function.\n\n## Parameters\n* b\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetSkyUpperColor",
        "kind": "Function",
        "detail": "SetSkyUpperColor() function.",
        "insertText": "FormIt.VisualStyles.SetSkyUpperColor(color);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetSkyUpperColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga6f001a42cd3a510d4f141af7b44c39a6)\n\n## SetSkyUpperColor() function.\n\n## Parameters\n* color\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetSunEditorEnabled",
        "kind": "Function",
        "detail": "SetSunEditorEnabled() function.",
        "insertText": "FormIt.VisualStyles.SetSunEditorEnabled(bEnabled);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetSunEditorEnabled](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga6859e92b21fd8ec2b1cc9e161afecd7a)\n\n## SetSunEditorEnabled() function.\n\n## Parameters\n* bEnabled\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetSunShading",
        "kind": "Function",
        "detail": "SetSunShading() function.",
        "insertText": "FormIt.VisualStyles.SetSunShading(i);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetSunShading](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gaa8449b94c18ab09c4216e7e59b6a712b)\n\n## SetSunShading() function.\n\n## Parameters\n* i\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetWorkPlaneColor",
        "kind": "Function",
        "detail": "SetWorkPlaneColor() function.",
        "insertText": "FormIt.VisualStyles.SetWorkPlaneColor(color);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetWorkPlaneColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga686047b355f0d67dad6827d9f71b29a6)\n\n## SetWorkPlaneColor() function.\n\n## Parameters\n* color\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.SetWorkPlaneVisible",
        "kind": "Function",
        "detail": "SetWorkPlaneVisible sets whether or not the work plane will be drawn Parameters: In: val (bool) true == work plane will be drawn Out: JSON_UNDEFINED.",
        "insertText": "FormIt.VisualStyles.SetWorkPlaneVisible(val);",
        "documentation": {
            "value": "# [FormIt.VisualStyles.SetWorkPlaneVisible](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#ga2004331752b12d0c827442e8175aff7b)\n\n## SetWorkPlaneVisible sets whether or not the work plane will be drawn Parameters: In: val (bool) true == work plane will be drawn Out: JSON_UNDEFINED.\n\n## Parameters\n* val\n"
        }
    },
    {
        "label": "FormIt.VisualStyles.ToggleNorthArrowDisplay",
        "kind": "Function",
        "detail": "toggles the North arrow display",
        "insertText": "FormIt.VisualStyles.ToggleNorthArrowDisplay();",
        "documentation": {
            "value": "# [FormIt.VisualStyles.ToggleNorthArrowDisplay](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__formit__visualstyles.html#gaee5cf11770b9359287cb9e7a397b28be)\n\n## toggles the North arrow display\n\n"
        }
    },
    {
        "label": "WSM.APIAddFaceComponentToBody",
        "kind": "Function",
        "detail": "APIAddFaceComponentToBody adds a Face and all connected Faces to a Body.",
        "insertText": "WSM.APIAddFaceComponentToBody(nHistoryID, nFaceID, nBodyID);",
        "documentation": {
            "value": "# [WSM.APIAddFaceComponentToBody](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga1b4cf9bf795b7406f703919f6bcdb271)\n\n## APIAddFaceComponentToBody adds a Face and all connected Faces to a Body.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* nBodyID\n"
        }
    },
    {
        "label": "WSM.APIAddInstancesToGroup",
        "kind": "Function",
        "detail": "Creates new instances in the specified group and returns their IDs.",
        "insertText": "WSM.APIAddInstancesToGroup(nHistoryID, nGroupID, aTransforms);",
        "documentation": {
            "value": "# [WSM.APIAddInstancesToGroup](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gae46c5150531ef0aa1aee40221f5181e0)\n\n## Creates new instances in the specified group and returns their IDs.\n\n## Parameters\n* nHistoryID\n* nGroupID\n* aTransforms\n"
        }
    },
    {
        "label": "WSM.APIAddObjectsLayers",
        "kind": "Function",
        "insertText": "WSM.APIAddObjectsLayers();",
        "documentation": {
            "value": "# [WSM.APIAddObjectsLayers](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga767d26efeff24d55167506f797aaaccc)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIAddRemoveObjectsLayers",
        "kind": "Function",
        "insertText": "WSM.APIAddRemoveObjectsLayers();",
        "documentation": {
            "value": "# [WSM.APIAddRemoveObjectsLayers](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga2a01a76a01f34276eb4de162c7a85ba3)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIAddSolidDefGuids",
        "kind": "Function",
        "detail": "APIAddSolidDefGuids: Adds solid-def guids in StringAttributes to the given Objects.",
        "insertText": "WSM.APIAddSolidDefGuids(nHistoryID, aObjectIDs);",
        "documentation": {
            "value": "# [WSM.APIAddSolidDefGuids](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0d699110cc724564ea9643fa95b502a7)\n\n## APIAddSolidDefGuids: Adds solid-def guids in StringAttributes to the given Objects.\n\n## Parameters\n* nHistoryID\n* aObjectIDs\n"
        }
    },
    {
        "label": "WSM.APIBlend",
        "kind": "Function",
        "insertText": "WSM.APIBlend();",
        "documentation": {
            "value": "# [WSM.APIBlend](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga402729294aa0925df192561ed782095c)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APICanRedoHistoryReadOnly",
        "kind": "Function",
        "detail": "APICanRedoHistoryReadOnly true if redo is possible.",
        "insertText": "WSM.APICanRedoHistoryReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APICanRedoHistoryReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac7d0893ba3fbd42844c410370f017200)\n\n## APICanRedoHistoryReadOnly true if redo is possible.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APICanRedoHistoryToDeltaReadOnly",
        "kind": "Function",
        "detail": "APICanRedoHistoryToDeltaReadOnly true if redo is possible.",
        "insertText": "WSM.APICanRedoHistoryToDeltaReadOnly(nHistoryID, nDeltaID);",
        "documentation": {
            "value": "# [WSM.APICanRedoHistoryToDeltaReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga7295d83c817ac2227de72a512b24f3cd)\n\n## APICanRedoHistoryToDeltaReadOnly true if redo is possible.\n\n## Parameters\n* nHistoryID\n* nDeltaID\n"
        }
    },
    {
        "label": "WSM.APICanUndoHistoryReadOnly",
        "kind": "Function",
        "detail": "APICanUndoHistoryReadOnly true if undo is possible.",
        "insertText": "WSM.APICanUndoHistoryReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APICanUndoHistoryReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga9007f5f37223169cff01f18b064c1394)\n\n## APICanUndoHistoryReadOnly true if undo is possible.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APICanUndoHistoryToDeltaReadOnly",
        "kind": "Function",
        "detail": "APICanUndoHistoryToDeltaReadOnly true if undo is possible.",
        "insertText": "WSM.APICanUndoHistoryToDeltaReadOnly(nHistoryID, nDeltaID);",
        "documentation": {
            "value": "# [WSM.APICanUndoHistoryToDeltaReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gae1c9370a7cbcd7abe7ce8d03e8ac5f38)\n\n## APICanUndoHistoryToDeltaReadOnly true if undo is possible.\n\n## Parameters\n* nHistoryID\n* nDeltaID\n"
        }
    },
    {
        "label": "WSM.APIChangeHistoryID",
        "kind": "Function",
        "detail": "APIChangeHistoryID() function.",
        "insertText": "WSM.APIChangeHistoryID(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIChangeHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga644bb074df0acdb6cf18abc7542b2b8e)\n\n## APIChangeHistoryID() function.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APICheckHistoryValidityReadOnly",
        "kind": "Function",
        "detail": "Finds all errors in the History (including on every live Object in the History).",
        "insertText": "WSM.APICheckHistoryValidityReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APICheckHistoryValidityReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga63e69e596793a41d3e41fb31f8b0247c)\n\n## Finds all errors in the History (including on every live Object in the History).\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APICheckMassesCollideReadOnly",
        "kind": "Function",
        "detail": "Returns true if bodies that enclose volume (possibly in instances) touch or overlap.",
        "insertText": "WSM.APICheckMassesCollideReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APICheckMassesCollideReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gae90aa0cc41be15d9cbc816b0ce052259)\n\n## Returns true if bodies that enclose volume (possibly in instances) touch or overlap.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APICheckValidityReadOnly",
        "kind": "Function",
        "detail": "Finds all errors on the Object.",
        "insertText": "WSM.APICheckValidityReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APICheckValidityReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga505e6032dffb43beee2cf20bc9101c4f)\n\n## Finds all errors on the Object.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APICleanModel",
        "kind": "Function",
        "detail": "Changes the model fixing errors and getting rid of undesired features.",
        "insertText": "WSM.APICleanModel(nHistoryID, dEdgeTol);",
        "documentation": {
            "value": "# [WSM.APICleanModel](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gabfe805d43c3bcf7190d4bbc7bc1be961)\n\n## Changes the model fixing errors and getting rid of undesired features.\n\n## Parameters\n* nHistoryID\n* dEdgeTol\n"
        }
    },
    {
        "label": "WSM.APIClearResults",
        "kind": "Function",
        "detail": "Clear the list of Results managed by ScriptInstance.",
        "insertText": "WSM.APIClearResults();",
        "documentation": {
            "value": "# [WSM.APIClearResults](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8123bb94ffe47cef0c12f8efe5816135)\n\n## Clear the list of Results managed by ScriptInstance.\n\n"
        }
    },
    {
        "label": "WSM.APIComputeAreaReadOnly",
        "kind": "Function",
        "detail": "Computes the surface area of the Object.",
        "insertText": "WSM.APIComputeAreaReadOnly(nHistoryID, nObjectID, transf);",
        "documentation": {
            "value": "# [WSM.APIComputeAreaReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga69ff1772c43af1c7e955ab68e382787c)\n\n## Computes the surface area of the Object.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* transf\n"
        }
    },
    {
        "label": "WSM.APIComputeVolumeReadOnly",
        "kind": "Function",
        "detail": "Computes the volume of the Object.",
        "insertText": "WSM.APIComputeVolumeReadOnly(nHistoryID, nObjectID, transf);",
        "documentation": {
            "value": "# [WSM.APIComputeVolumeReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga53fdb963502ebc2b1bb955a894ed5587)\n\n## Computes the volume of the Object.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* transf\n"
        }
    },
    {
        "label": "WSM.APIConnectPoint3ds",
        "kind": "Function",
        "detail": "APIConnectPoint3ds Parameters: In: nHistoryID, point3d1, point3d2 Out: JSON_UNDEFINED.",
        "insertText": "WSM.APIConnectPoint3ds(nHistoryID, point3d1, point3d2);",
        "documentation": {
            "value": "# [WSM.APIConnectPoint3ds](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga717745ad75292aabb433223e70d475da)\n\n## APIConnectPoint3ds Parameters: In: nHistoryID, point3d1, point3d2 Out: JSON_UNDEFINED.\n\n## Parameters\n* nHistoryID\n* point3d1\n* point3d2\n"
        }
    },
    {
        "label": "WSM.APIConnectVertexAndPoint3d",
        "kind": "Function",
        "detail": "APIConnectVertexAndPoint3d Parameters: In: nHistoryID, nVertexID, point3d Out: JSON_UNDEFINED.",
        "insertText": "WSM.APIConnectVertexAndPoint3d(nHistoryID, nVertexID, point3d);",
        "documentation": {
            "value": "# [WSM.APIConnectVertexAndPoint3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaab7f0026d8a495964c650dff3a103f97)\n\n## APIConnectVertexAndPoint3d Parameters: In: nHistoryID, nVertexID, point3d Out: JSON_UNDEFINED.\n\n## Parameters\n* nHistoryID\n* nVertexID\n* point3d\n"
        }
    },
    {
        "label": "WSM.APIConnectVertices",
        "kind": "Function",
        "detail": "APIConnectVertices Parameters: In: nHistoryID, nVertexID1, nVertexID2 Out: JSON_UNDEFINED.",
        "insertText": "WSM.APIConnectVertices(nHistoryID, nVertexID1, nVertexID2);",
        "documentation": {
            "value": "# [WSM.APIConnectVertices](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac030677d403dd32c82af1d98da5e8ca3)\n\n## APIConnectVertices Parameters: In: nHistoryID, nVertexID1, nVertexID2 Out: JSON_UNDEFINED.\n\n## Parameters\n* nHistoryID\n* nVertexID1\n* nVertexID2\n"
        }
    },
    {
        "label": "WSM.APIConvertMeshesToObjects",
        "kind": "Function",
        "insertText": "WSM.APIConvertMeshesToObjects();",
        "documentation": {
            "value": "# [WSM.APIConvertMeshesToObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga888962446ac388bcac9ff9db83e3f5c8)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIConvertObjectsToMeshes",
        "kind": "Function",
        "insertText": "WSM.APIConvertObjectsToMeshes();",
        "documentation": {
            "value": "# [WSM.APIConvertObjectsToMeshes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac35bfbe1b07e2353808ac890a18c761f)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APICopyObject",
        "kind": "Function",
        "detail": "APICopyObject copies nObjectID in nHistoryID to nToHistoryID.",
        "insertText": "WSM.APICopyObject(nHistoryID, nToHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APICopyObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaaed1f2769589dfa84c30a178549bad5b)\n\n## APICopyObject copies nObjectID in nHistoryID to nToHistoryID.\n\n## Parameters\n* nHistoryID\n* nToHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APICopyOrSketchAndTransformObjects",
        "kind": "Function",
        "insertText": "WSM.APICopyOrSketchAndTransformObjects();",
        "documentation": {
            "value": "# [WSM.APICopyOrSketchAndTransformObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga4c5e2862aa801fcec2dba0fac755f213)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APICover",
        "kind": "Function",
        "insertText": "WSM.APICover();",
        "documentation": {
            "value": "# [WSM.APICover](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga19abc0df59303fbc902d467c69ad6e8a)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APICreateBlock",
        "kind": "Function",
        "detail": "Create a block with the given corners.",
        "insertText": "WSM.APICreateBlock(nHistoryID, point3d1, point3d2);",
        "documentation": {
            "value": "# [WSM.APICreateBlock](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0edc49fc874491fe18d4df7bcc9bbe99)\n\n## Create a block with the given corners.\n\n## Parameters\n* nHistoryID\n* point3d1\n* point3d2\n"
        }
    },
    {
        "label": "WSM.APICreateCircleOrArc",
        "kind": "Function",
        "detail": "Create a circle or arc defined by C(t) = posCenter + radius * (xAxis * cos(t) + yAxis * sin(t)) where t goes from dStartParam to dEndParam Parameter accuracyORcount means: MAX distance between base circle and segment as portion of R, if < .75 number of divisions (double rounded to int) over 90 degree arc, if >= .75 Parameters: In: nHistoryID , radius, posCenter, xAxis, yAxis, dStartParam, dEndParam, accuracyORcount, trans, nMinimumNumberOfFacets Out: nObjectID.",
        "insertText": "WSM.APICreateCircleOrArc(nHistoryID, radius, posCenter, xAxis, yAxis, dStartParam, dEndParam, accuracyORcount, bReadOnly, trans, nMinimumNumberOfFacets);",
        "documentation": {
            "value": "# [WSM.APICreateCircleOrArc](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga888922d5161e98830d30838115d921b8)\n\n## Create a circle or arc defined by C(t) = posCenter + radius * (xAxis * cos(t) + yAxis * sin(t)) where t goes from dStartParam to dEndParam Parameter accuracyORcount means: MAX distance between base circle and segment as portion of R, if < .75 number of divisions (double rounded to int) over 90 degree arc, if >= .75 Parameters: In: nHistoryID , radius, posCenter, xAxis, yAxis, dStartParam, dEndParam, accuracyORcount, trans, nMinimumNumberOfFacets Out: nObjectID.\n\n## Parameters\n* nHistoryID\n* radius\n* posCenter\n* xAxis\n* yAxis\n* dStartParam\n* dEndParam\n* accuracyORcount\n* bReadOnly\n* trans\n* nMinimumNumberOfFacets\n"
        }
    },
    {
        "label": "WSM.APICreateCircleOrArcFromPoints",
        "kind": "Function",
        "detail": "Create a circle or arc defined by points Parameter accuracyORcount means: MAX distance between base circle and segment as portion of R, if < .75 number of divisions (double rounded to int) over 90 degree arc, if >= .75 Parameters: In: nHistoryID, arcStartPos, arcEndPos, thirdPoint, accuracyORcount, bReadOnly, trans, nMinimumNumberOfFacets, bCircle Out: The created vector of points.",
        "insertText": "WSM.APICreateCircleOrArcFromPoints(nHistoryID, arcStartPos, arcEndPos, thirdPoint, accuracyORcount, bReadOnly, trans, nMinimumNumberOfFacets, bCircle);",
        "documentation": {
            "value": "# [WSM.APICreateCircleOrArcFromPoints](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8a101d1cdb8af41eb2e6674edd1ab982)\n\n## Create a circle or arc defined by points Parameter accuracyORcount means: MAX distance between base circle and segment as portion of R, if < .75 number of divisions (double rounded to int) over 90 degree arc, if >= .75 Parameters: In: nHistoryID, arcStartPos, arcEndPos, thirdPoint, accuracyORcount, bReadOnly, trans, nMinimumNumberOfFacets, bCircle Out: The created vector of points.\n\n## Parameters\n* nHistoryID\n* arcStartPos\n* arcEndPos\n* thirdPoint\n* accuracyORcount\n* bReadOnly\n* trans\n* nMinimumNumberOfFacets\n* bCircle\n"
        }
    },
    {
        "label": "WSM.APICreateClampedHermiteSplineDataReadOnly",
        "kind": "Function",
        "insertText": "WSM.APICreateClampedHermiteSplineDataReadOnly();",
        "documentation": {
            "value": "# [WSM.APICreateClampedHermiteSplineDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaab24cb715be9115f88de5f9c32a38fde)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APICreateCone",
        "kind": "Function",
        "detail": "Create a cone (above Z=0) with given parameters.",
        "insertText": "WSM.APICreateCone(nHistoryID, nRadius, nHeight, centerPt, nAccuracyORcount);",
        "documentation": {
            "value": "# [WSM.APICreateCone](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga6edd7440669c74559feda71d96239d0e)\n\n## Create a cone (above Z=0) with given parameters.\n\n## Parameters\n* nHistoryID\n* nRadius\n* nHeight\n* centerPt\n* nAccuracyORcount\n"
        }
    },
    {
        "label": "WSM.APICreateCylinder",
        "kind": "Function",
        "detail": "Create a cylinder on the given History.",
        "insertText": "WSM.APICreateCylinder(nHistoryID, aPosCenter, aRadius, aHeight, aAccuracyORcount, aAxis);",
        "documentation": {
            "value": "# [WSM.APICreateCylinder](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaac01d81c1fcf1723aa93aee4abac68bb)\n\n## Create a cylinder on the given History.\n\n## Parameters\n* nHistoryID\n* aPosCenter\n* aRadius\n* aHeight\n* aAccuracyORcount\n* aAxis\n"
        }
    },
    {
        "label": "WSM.APICreateEdgesFromData",
        "kind": "Function",
        "detail": "Load a set of edges from vectors of various data in a single delta.",
        "insertText": "WSM.APICreateEdgesFromData(nHistoryID, aLayers, aEdges, aCurves, bCreateMesh, accuracyORcount);",
        "documentation": {
            "value": "# [WSM.APICreateEdgesFromData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8f35f95cf830951e7d853c69e1d4896b)\n\n## Load a set of edges from vectors of various data in a single delta.\n\n## Parameters\n* nHistoryID\n* aLayers\n* aEdges\n* aCurves\n* bCreateMesh\n* accuracyORcount\n"
        }
    },
    {
        "label": "WSM.APICreateEmptyBody",
        "kind": "Function",
        "detail": "APICreateEmptyBody creates an empty body.",
        "insertText": "WSM.APICreateEmptyBody(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APICreateEmptyBody](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaa10609324f9254c56e83632bc88ef514)\n\n## APICreateEmptyBody creates an empty body.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APICreateExtrusion",
        "kind": "Function",
        "detail": "Create an extrusion on the given History.",
        "insertText": "WSM.APICreateExtrusion(nHistoryID, aPoint3ds, dist, nHistoryID, aPoint3ds, dist);",
        "documentation": {
            "value": "# [WSM.APICreateExtrusion](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga429ce1a9a66e09aedd0bcd1e783b7989)\n\n## Create an extrusion on the given History.\n\n## Parameters\n* nHistoryID\n* aPoint3ds\n* dist\n* nHistoryID\n* aPoint3ds\n* dist\n"
        }
    },
    {
        "label": "WSM.APICreateGeometryFromData",
        "kind": "Function",
        "detail": "Load a model from vectors of various data in a single delta.",
        "insertText": "WSM.APICreateGeometryFromData(nHistoryID, aTextures, aMaterials, aLayers, aInstances, aFaceCollections, aEdges, aCurves, aImages, aGroupName, bCreateMesh);",
        "documentation": {
            "value": "# [WSM.APICreateGeometryFromData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga087b07bad1d2c007a2f52952f7e3fddd)\n\n## Load a model from vectors of various data in a single delta.\n\n## Parameters\n* nHistoryID\n* aTextures\n* aMaterials\n* aLayers\n* aInstances\n* aFaceCollections\n* aEdges\n* aCurves\n* aImages\n* aGroupName\n* bCreateMesh\n"
        }
    },
    {
        "label": "WSM.APICreateGroup",
        "kind": "Function",
        "insertText": "WSM.APICreateGroup();",
        "documentation": {
            "value": "# [WSM.APICreateGroup](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad46b253e3e2ec793a466d8bd39193679)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APICreateHemisphere",
        "kind": "Function",
        "detail": "Create a hemisphere with the radius and at the given center point.",
        "insertText": "WSM.APICreateHemisphere(nHistoryID, nRadius, centerPt, nAccuracyORcount);",
        "documentation": {
            "value": "# [WSM.APICreateHemisphere](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga7dafbfc42f791ece6009215add157421)\n\n## Create a hemisphere with the radius and at the given center point.\n\n## Parameters\n* nHistoryID\n* nRadius\n* centerPt\n* nAccuracyORcount\n"
        }
    },
    {
        "label": "WSM.APICreateHermiteSpline",
        "kind": "Function",
        "detail": "Tessellate a cubic spline that touches all aControlPoints Fills the tessellated points into aOutPoints bClosed specifies that the end point is the start point, so the curve must be smooth and closed startTangent is an optional Vector that specifies the tangent at the start point endTangent is an option Vector that specifies the tangent at the end point bReadOnly, if true does not put geometry into the scene, only returns the tessellated points.",
        "insertText": "WSM.APICreateHermiteSpline(nHistoryID, aControlPoints, bClosed, startTangent, endTangent, bReadOnly);",
        "documentation": {
            "value": "# [WSM.APICreateHermiteSpline](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga99217d920bb876554b05d234e560b768)\n\n## Tessellate a cubic spline that touches all aControlPoints Fills the tessellated points into aOutPoints bClosed specifies that the end point is the start point, so the curve must be smooth and closed startTangent is an optional Vector that specifies the tangent at the start point endTangent is an option Vector that specifies the tangent at the end point bReadOnly, if true does not put geometry into the scene, only returns the tessellated points.\n\n## Parameters\n* nHistoryID\n* aControlPoints\n* bClosed\n* startTangent\n* endTangent\n* bReadOnly\n"
        }
    },
    {
        "label": "WSM.APICreateHistory",
        "kind": "Function",
        "detail": "APICreateHistory() function.",
        "insertText": "WSM.APICreateHistory(nHistoryID, bNonTemporary);",
        "documentation": {
            "value": "# [WSM.APICreateHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaa45b9d933781781dd8517f5c2ea3ae9c)\n\n## APICreateHistory() function.\n\n## Parameters\n* nHistoryID\n* bNonTemporary\n"
        }
    },
    {
        "label": "WSM.APICreateImageObject",
        "kind": "Function",
        "detail": "APICreateImageObject creates a image object.",
        "insertText": "WSM.APICreateImageObject(nHistoryID, sName, nTextureID, fAlphaValue, bFeaturesVisible, aCornersVector);",
        "documentation": {
            "value": "# [WSM.APICreateImageObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaff4f924a13adcd4cc3e24f2eeb1c14f8)\n\n## APICreateImageObject creates a image object.\n\n## Parameters\n* nHistoryID\n* sName\n* nTextureID\n* fAlphaValue\n* bFeaturesVisible\n* aCornersVector\n"
        }
    },
    {
        "label": "WSM.APICreateImageObjectWithTexture",
        "kind": "Function",
        "detail": "APICreateImageObjectWithTexture creates a image object with texture.",
        "insertText": "WSM.APICreateImageObjectWithTexture(nHistoryID, sName, fAlphaValue, bFeaturesVisible, aCornersVector, aBitmapData, sTextureName);",
        "documentation": {
            "value": "# [WSM.APICreateImageObjectWithTexture](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga688616e02dcdf3bad7f8be32f372ed0e)\n\n## APICreateImageObjectWithTexture creates a image object with texture.\n\n## Parameters\n* nHistoryID\n* sName\n* fAlphaValue\n* bFeaturesVisible\n* aCornersVector\n* aBitmapData\n* sTextureName\n"
        }
    },
    {
        "label": "WSM.APICreateLayer",
        "kind": "Function",
        "detail": "Create a layer object with a given name and display flag.",
        "insertText": "WSM.APICreateLayer(nHistoryID, name, bDisplayed);",
        "documentation": {
            "value": "# [WSM.APICreateLayer](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaedd7510692ab7ba4f38408f3a7f2f3ad)\n\n## Create a layer object with a given name and display flag.\n\n## Parameters\n* nHistoryID\n* name\n* bDisplayed\n"
        }
    },
    {
        "label": "WSM.APICreateLevelObjects",
        "kind": "Function",
        "detail": "APICreateLevelObjects makes new Levels.",
        "insertText": "WSM.APICreateLevelObjects(nHistoryID, aLevelsData);",
        "documentation": {
            "value": "# [WSM.APICreateLevelObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga5c6dad372130115d0d17bbee7c10fa1c)\n\n## APICreateLevelObjects makes new Levels.\n\n## Parameters\n* nHistoryID\n* aLevelsData\n"
        }
    },
    {
        "label": "WSM.APICreateLineMesh",
        "kind": "Function",
        "detail": "Create a LineMesh.",
        "insertText": "WSM.APICreateLineMesh(nHistoryID, aPoints, aIndices, aCounts);",
        "documentation": {
            "value": "# [WSM.APICreateLineMesh](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaeb4310571c50437a7e709bc3acdadeeb)\n\n## Create a LineMesh.\n\n## Parameters\n* nHistoryID\n* aPoints\n* aIndices\n* aCounts\n"
        }
    },
    {
        "label": "WSM.APICreateMaterial",
        "kind": "Function",
        "detail": "APICreateMaterial makes a new Material.",
        "insertText": "WSM.APICreateMaterial(nHistoryID, nColor, dHorizonalScale, dVerticalScale, nTextureID, sMaterialName, sMaterialIdentifier, aAdditionalRenderData, aAdditionalTextures);",
        "documentation": {
            "value": "# [WSM.APICreateMaterial](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga6745a9bc8e858a2462610eac2d88dd15)\n\n## APICreateMaterial makes a new Material.\n\n## Parameters\n* nHistoryID\n* nColor\n* dHorizonalScale\n* dVerticalScale\n* nTextureID\n* sMaterialName\n* sMaterialIdentifier\n* aAdditionalRenderData\n* aAdditionalTextures\n"
        }
    },
    {
        "label": "WSM.APICreateMaterialWithTexture",
        "kind": "Function",
        "detail": "APICreateMaterialWithTexture makes a new Material.",
        "insertText": "WSM.APICreateMaterialWithTexture(nHistoryID, nColor, dHorizonalScale, dVerticalScale, aBitmapData, bUseBitmapAlpha, sMaterialName, sMaterialIdentifier, aAdditionalRenderData, aAdditionalTextures, sTextureName);",
        "documentation": {
            "value": "# [WSM.APICreateMaterialWithTexture](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gade28a673c19fae4238fde2a2b1075729)\n\n## APICreateMaterialWithTexture makes a new Material.\n\n## Parameters\n* nHistoryID\n* nColor\n* dHorizonalScale\n* dVerticalScale\n* aBitmapData\n* bUseBitmapAlpha\n* sMaterialName\n* sMaterialIdentifier\n* aAdditionalRenderData\n* aAdditionalTextures\n* sTextureName\n"
        }
    },
    {
        "label": "WSM.APICreateMesh",
        "kind": "Function",
        "detail": "Create a Mesh.",
        "insertText": "WSM.APICreateMesh(nHistoryID, aPoints, aTriangles, aNormals, aUVs, aColors);",
        "documentation": {
            "value": "# [WSM.APICreateMesh](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad20c40f7939b0d3316cb382e21e0c370)\n\n## Create a Mesh.\n\n## Parameters\n* nHistoryID\n* aPoints\n* aTriangles\n* aNormals\n* aUVs\n* aColors\n"
        }
    },
    {
        "label": "WSM.APICreatePointMesh",
        "kind": "Function",
        "detail": "Create a PointMesh.",
        "insertText": "WSM.APICreatePointMesh(nHistoryID, aPoints);",
        "documentation": {
            "value": "# [WSM.APICreatePointMesh](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga08a05626a1c0b5a900d8cfd7522056c3)\n\n## Create a PointMesh.\n\n## Parameters\n* nHistoryID\n* aPoints\n"
        }
    },
    {
        "label": "WSM.APICreatePolyline",
        "kind": "Function",
        "detail": "Creates a polyline using 3D sketching not linking with existing topology.",
        "insertText": "WSM.APICreatePolyline(nHistoryID, aPoint3ds, bForceClosed);",
        "documentation": {
            "value": "# [WSM.APICreatePolyline](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga057186e130d50757d1f8e4fe59d069c0)\n\n## Creates a polyline using 3D sketching not linking with existing topology.\n\n## Parameters\n* nHistoryID\n* aPoint3ds\n* bForceClosed\n"
        }
    },
    {
        "label": "WSM.APICreateRectangle",
        "kind": "Function",
        "detail": "Create a rectangle based on one edge and a third point.",
        "insertText": "WSM.APICreateRectangle(nHistoryID, firstEdgePt1, firstEdgePt2, projectionPt, bReadOnly);",
        "documentation": {
            "value": "# [WSM.APICreateRectangle](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gacb34b3d9406e32535164fcac13c0f15d)\n\n## Create a rectangle based on one edge and a third point.\n\n## Parameters\n* nHistoryID\n* firstEdgePt1\n* firstEdgePt2\n* projectionPt\n* bReadOnly\n"
        }
    },
    {
        "label": "WSM.APICreateSatelliteImageObject",
        "kind": "Function",
        "detail": "APICreateSatelliteImageObject creates a image object.",
        "insertText": "WSM.APICreateSatelliteImageObject(nHistoryID, sName, nTextureID, fAlphaValue, bFeaturesVisible, aCornersVector, coordinates, coordinatesSpan, aPixelDimensionsVector);",
        "documentation": {
            "value": "# [WSM.APICreateSatelliteImageObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gae4dcc7b96a6b50e391434e43d713a849)\n\n## APICreateSatelliteImageObject creates a image object.\n\n## Parameters\n* nHistoryID\n* sName\n* nTextureID\n* fAlphaValue\n* bFeaturesVisible\n* aCornersVector\n* coordinates\n* coordinatesSpan\n* aPixelDimensionsVector\n"
        }
    },
    {
        "label": "WSM.APICreateSeparateHistoriesForInstances",
        "kind": "Function",
        "insertText": "WSM.APICreateSeparateHistoriesForInstances();",
        "documentation": {
            "value": "# [WSM.APICreateSeparateHistoriesForInstances](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga30ce7420d951ac77657353a14280de95)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APICreateStringAttribute",
        "kind": "Function",
        "insertText": "WSM.APICreateStringAttribute();",
        "documentation": {
            "value": "# [WSM.APICreateStringAttribute](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gadac9fe98b9704536e0d4b1126faf2b0d)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APICreateTexture",
        "kind": "Function",
        "detail": "APICreateTexture creates a new Texture object Parameters: In: nHistoryID, aBitmapData, sTextureName Out: nCreatedTextureID.",
        "insertText": "WSM.APICreateTexture(nHistoryID, aBitmapData, bUseBitmapAlpha, sTextureName);",
        "documentation": {
            "value": "# [WSM.APICreateTexture](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga44669d3f02d5cabadf418e70cfe40f17)\n\n## APICreateTexture creates a new Texture object Parameters: In: nHistoryID, aBitmapData, sTextureName Out: nCreatedTextureID.\n\n## Parameters\n* nHistoryID\n* aBitmapData\n* bUseBitmapAlpha\n* sTextureName\n"
        }
    },
    {
        "label": "WSM.APICreateVertex",
        "kind": "Function",
        "detail": "Create a Vertex with the given position.",
        "insertText": "WSM.APICreateVertex(nHistoryID, position);",
        "documentation": {
            "value": "# [WSM.APICreateVertex](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga14dc1a637da6ef315198882e8fd4235e)\n\n## Create a Vertex with the given position.\n\n## Parameters\n* nHistoryID\n* position\n"
        }
    },
    {
        "label": "WSM.APIDebugObjectReadOnly",
        "kind": "Function",
        "detail": "APIDebugObjectReadOnly() function.",
        "insertText": "WSM.APIDebugObjectReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIDebugObjectReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga777fdb5fd80fc4371956fe1540d1c99a)\n\n## APIDebugObjectReadOnly() function.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIDeleteAllHistories",
        "kind": "Function",
        "detail": "Delete all Histories and reset next History Id to be 0.",
        "insertText": "WSM.APIDeleteAllHistories();",
        "documentation": {
            "value": "# [WSM.APIDeleteAllHistories](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga7bfecd5ddd201a485ee2019ed3d3a521)\n\n## Delete all Histories and reset next History Id to be 0.\n\n"
        }
    },
    {
        "label": "WSM.APIDeleteAllRedoHistory",
        "kind": "Function",
        "detail": "APIDeleteAllRedoHistory - Deletes all forward Deltas.",
        "insertText": "WSM.APIDeleteAllRedoHistory(nHistoryID, bReuseDiscardedObjectIDs);",
        "documentation": {
            "value": "# [WSM.APIDeleteAllRedoHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga53689e2188ce8cae7c9572a2bb938893)\n\n## APIDeleteAllRedoHistory - Deletes all forward Deltas.\n\n## Parameters\n* nHistoryID\n* bReuseDiscardedObjectIDs\n"
        }
    },
    {
        "label": "WSM.APIDeleteHistory",
        "kind": "Function",
        "detail": "Delete the given History and also the active history managed by ScriptInstance.",
        "insertText": "WSM.APIDeleteHistory(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIDeleteHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad0e54cea7fb29560eb0038f595fa7b91)\n\n## Delete the given History and also the active history managed by ScriptInstance.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIDeleteObject",
        "kind": "Function",
        "detail": "APIDeleteObject deletes nObjectID in the given nHistoryID.",
        "insertText": "WSM.APIDeleteObject(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIDeleteObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga515a2825c407433d0040fb5967b9ff9d)\n\n## APIDeleteObject deletes nObjectID in the given nHistoryID.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIDeleteObjects",
        "kind": "Function",
        "insertText": "WSM.APIDeleteObjects();",
        "documentation": {
            "value": "# [WSM.APIDeleteObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga44506ed673483a1c2a50a3cd9138e9fa)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIDetectFreeEdgesReadOnly",
        "kind": "Function",
        "insertText": "WSM.APIDetectFreeEdgesReadOnly();",
        "documentation": {
            "value": "# [WSM.APIDetectFreeEdgesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga386a128aeab6b931b74612871afcea3f)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIDetectSilhouettesReadOnly",
        "kind": "Function",
        "insertText": "WSM.APIDetectSilhouettesReadOnly();",
        "documentation": {
            "value": "# [WSM.APIDetectSilhouettesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga39077c3c90d21ebf77e63c84298db488)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIDisableJournaling",
        "kind": "Function",
        "detail": "APIDisableJournaling() function.",
        "insertText": "WSM.APIDisableJournaling();",
        "documentation": {
            "value": "# [WSM.APIDisableJournaling](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0db8335eb69cd946a40cd265c8bc9b69)\n\n## APIDisableJournaling() function.\n\n"
        }
    },
    {
        "label": "WSM.APIDragFace",
        "kind": "Function",
        "detail": "APIDragFace drags a face nObjectID along it normal by nDistance.",
        "insertText": "WSM.APIDragFace(nHistoryID, nObjectID, nDistance, bMerge);",
        "documentation": {
            "value": "# [WSM.APIDragFace](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gacd6eab8878fdb96eacbba5a3f7b66e2a)\n\n## APIDragFace drags a face nObjectID along it normal by nDistance.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* nDistance\n* bMerge\n"
        }
    },
    {
        "label": "WSM.APIDragFaces",
        "kind": "Function",
        "detail": "APIDragFaces drags a group of faces aaFaceIDs by aDistance for each group.",
        "insertText": "WSM.APIDragFaces(nHistoryID, aaFaceIDs, aDists, aDirs, bMerge);",
        "documentation": {
            "value": "# [WSM.APIDragFaces](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga61d39c451214ee5ca686ad2cff07b41a)\n\n## APIDragFaces drags a group of faces aaFaceIDs by aDistance for each group.\n\n## Parameters\n* nHistoryID\n* aaFaceIDs\n* aDists\n* aDirs\n* bMerge\n"
        }
    },
    {
        "label": "WSM.APIDumpResults",
        "kind": "Function",
        "detail": "Dump the list of Results managed by ScriptInstance.",
        "insertText": "WSM.APIDumpResults();",
        "documentation": {
            "value": "# [WSM.APIDumpResults](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gade9f60cbdfe8392c5fb7093ad20e6dd0)\n\n## Dump the list of Results managed by ScriptInstance.\n\n"
        }
    },
    {
        "label": "WSM.APIEditCircleEdges",
        "kind": "Function",
        "insertText": "WSM.APIEditCircleEdges();",
        "documentation": {
            "value": "# [WSM.APIEditCircleEdges](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8541a5c3c49e260618a0dfb3859c84ea)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIEditCylinderFaces",
        "kind": "Function",
        "insertText": "WSM.APIEditCylinderFaces();",
        "documentation": {
            "value": "# [WSM.APIEditCylinderFaces](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaa7286eacc3e531af31d231faecf9aaa9)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIEditSphereFaces",
        "kind": "Function",
        "insertText": "WSM.APIEditSphereFaces();",
        "documentation": {
            "value": "# [WSM.APIEditSphereFaces](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gacd102eefa474f9070fbd35c4e643fdb4)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIEditSplineEdges",
        "kind": "Function",
        "insertText": "WSM.APIEditSplineEdges();",
        "documentation": {
            "value": "# [WSM.APIEditSplineEdges](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3e9b4f1df6602db5725bc59799853f8a)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIEnableJournaling",
        "kind": "Function",
        "detail": "APIEnableJournaling If sFilePath is not provided, the journal will be stored in a string.",
        "insertText": "WSM.APIEnableJournaling(nHistoryID, sFilePath);",
        "documentation": {
            "value": "# [WSM.APIEnableJournaling](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga7f45157d9d3ef643f0e30b3ff40f5b70)\n\n## APIEnableJournaling If sFilePath is not provided, the journal will be stored in a string.\n\n## Parameters\n* nHistoryID\n* sFilePath\n"
        }
    },
    {
        "label": "WSM.APIEnableJournalingToString",
        "kind": "Function",
        "insertText": "WSM.APIEnableJournalingToString();",
        "documentation": {
            "value": "# [WSM.APIEnableJournalingToString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga24f53256564fa055bddae4fbd801f803)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIEnableJournalingTypes",
        "kind": "Function",
        "detail": "APIEnableJournalingTypes() function.",
        "insertText": "WSM.APIEnableJournalingTypes(aTypes);",
        "documentation": {
            "value": "# [WSM.APIEnableJournalingTypes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga47d8c65882ac6f8765fd76134fcfec3d)\n\n## APIEnableJournalingTypes() function.\n\n## Parameters\n* aTypes\n"
        }
    },
    {
        "label": "WSM.APIExtrudeEdges",
        "kind": "Function",
        "insertText": "WSM.APIExtrudeEdges();",
        "documentation": {
            "value": "# [WSM.APIExtrudeEdges](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga92cbd351b0829d9194ec4d645e0eee0a)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIFaceContainsPointReadOnly",
        "kind": "Function",
        "detail": "APIFaceContainsPointReadOnly() function.",
        "insertText": "WSM.APIFaceContainsPointReadOnly(nHistoryID, nFaceID, point);",
        "documentation": {
            "value": "# [WSM.APIFaceContainsPointReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga34b95b8437b7ed3b3205f324a273100d)\n\n## APIFaceContainsPointReadOnly() function.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* point\n"
        }
    },
    {
        "label": "WSM.APIFlattenFaces",
        "kind": "Function",
        "insertText": "WSM.APIFlattenFaces();",
        "documentation": {
            "value": "# [WSM.APIFlattenFaces](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga707767e2072dfd62b718048e398f73a6)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIFlattenGroupsOrInstances",
        "kind": "Function",
        "insertText": "WSM.APIFlattenGroupsOrInstances();",
        "documentation": {
            "value": "# [WSM.APIFlattenGroupsOrInstances](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab0bd76254d6d0671a286b9d3a5b28fae)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIGetActiveHistory",
        "kind": "Function",
        "detail": "Get the Active history managed by ScriptInstance.",
        "insertText": "WSM.APIGetActiveHistory();",
        "documentation": {
            "value": "# [WSM.APIGetActiveHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gadc15b47bc2efde5c6fc07053c1552b62)\n\n## Get the Active history managed by ScriptInstance.\n\n"
        }
    },
    {
        "label": "WSM.APIGetAllAggregateTransf3dsReadOnly",
        "kind": "Function",
        "detail": "APIGetAllAggregateTransf3dsReadOnly returns aggregate global transformations on a History referenced by a Group or Groups.",
        "insertText": "WSM.APIGetAllAggregateTransf3dsReadOnly(nReferencedHistoryID, nTopMostHistoryID);",
        "documentation": {
            "value": "# [WSM.APIGetAllAggregateTransf3dsReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga91e419d66f6236c9eb3b5e7ad85bd7e0)\n\n## APIGetAllAggregateTransf3dsReadOnly returns aggregate global transformations on a History referenced by a Group or Groups.\n\n## Parameters\n* nReferencedHistoryID\n* nTopMostHistoryID\n"
        }
    },
    {
        "label": "WSM.APIGetAllConnectedNonOwnedReadOnly",
        "kind": "Function",
        "detail": "APIGetAllConnectedNonOwnedReadOnly returns an array of all NonOwned Object IDs that are connected to nObjectID.",
        "insertText": "WSM.APIGetAllConnectedNonOwnedReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetAllConnectedNonOwnedReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga9a49155afa9b6acecdca30f10ff385a3)\n\n## APIGetAllConnectedNonOwnedReadOnly returns an array of all NonOwned Object IDs that are connected to nObjectID.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetAllHistoriesReadOnly",
        "kind": "Function",
        "detail": "APIGetAllHistoriesReadOnly Gets the IDs of all active histories, optionally with temporary ones.",
        "insertText": "WSM.APIGetAllHistoriesReadOnly(bWithTemporary);",
        "documentation": {
            "value": "# [WSM.APIGetAllHistoriesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaaba13812f66bb78a4d59b94c852919b6)\n\n## APIGetAllHistoriesReadOnly Gets the IDs of all active histories, optionally with temporary ones.\n\n## Parameters\n* bWithTemporary\n"
        }
    },
    {
        "label": "WSM.APIGetAllHistoryDeltasReadOnly",
        "kind": "Function",
        "detail": "Get the IDs of all deltas in the given history.",
        "insertText": "WSM.APIGetAllHistoryDeltasReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIGetAllHistoryDeltasReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga39e6ff820d6e73486ba84effcbb3d740)\n\n## Get the IDs of all deltas in the given history.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIGetAllNonOwnedReadOnly",
        "kind": "Function",
        "detail": "APIGetAllNonOwnedReadOnly returns an array of all NonOwned Object IDs.",
        "insertText": "WSM.APIGetAllNonOwnedReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIGetAllNonOwnedReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga50e9579a50a52f1fd3ff7d7b9b1128e8)\n\n## APIGetAllNonOwnedReadOnly returns an array of all NonOwned Object IDs.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIGetAllObjectsByTypeReadOnly",
        "kind": "Function",
        "detail": "Returns all the objects of type 'nType' contained by the history Parameters: In: nHistoryID, nType nType- WSM.nObjectType.nUnSpecifiedType WSM.nObjectType.nBodyType WSM.nObjectType.nLumpType WSM.nObjectType.nShellType WSM.nObjectType.nFaceType WSM.nObjectType.nLoopType WSM.nObjectType.nCoedgeType WSM.nObjectType.nEdgeType WSM.nObjectType.nVertexType Out: Array of Object IDs of the given nType.",
        "insertText": "WSM.APIGetAllObjectsByTypeReadOnly(nHistoryID, nType);",
        "documentation": {
            "value": "# [WSM.APIGetAllObjectsByTypeReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga6374ce068853c7e82abe35f2d01a4e78)\n\n## Returns all the objects of type 'nType' contained by the history Parameters: In: nHistoryID, nType nType- WSM.nObjectType.nUnSpecifiedType WSM.nObjectType.nBodyType WSM.nObjectType.nLumpType WSM.nObjectType.nShellType WSM.nObjectType.nFaceType WSM.nObjectType.nLoopType WSM.nObjectType.nCoedgeType WSM.nObjectType.nEdgeType WSM.nObjectType.nVertexType Out: Array of Object IDs of the given nType.\n\n## Parameters\n* nHistoryID\n* nType\n"
        }
    },
    {
        "label": "WSM.APIGetAllReachableHistoriesReadOnly",
        "kind": "Function",
        "detail": "Gets all the Histories reachable from the given History going either up or down the chain of Histories based on the flag bGoUp.",
        "insertText": "WSM.APIGetAllReachableHistoriesReadOnly(nHistoryID, bGoUp);",
        "documentation": {
            "value": "# [WSM.APIGetAllReachableHistoriesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga5c77baf3da1f32bff2ecfc74e12dd2b9)\n\n## Gets all the Histories reachable from the given History going either up or down the chain of Histories based on the flag bGoUp.\n\n## Parameters\n* nHistoryID\n* bGoUp\n"
        }
    },
    {
        "label": "WSM.APIGetBodyEdgesReadOnly",
        "kind": "Function",
        "detail": "APIGetBodyEdgesReadOnly returns an array of all edge IDs for the given nBodyID.",
        "insertText": "WSM.APIGetBodyEdgesReadOnly(nHistoryID, nBodyID);",
        "documentation": {
            "value": "# [WSM.APIGetBodyEdgesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8644be5b90106c7b0864c84c4bb7f79c)\n\n## APIGetBodyEdgesReadOnly returns an array of all edge IDs for the given nBodyID.\n\n## Parameters\n* nHistoryID\n* nBodyID\n"
        }
    },
    {
        "label": "WSM.APIGetBodyFacesReadOnly",
        "kind": "Function",
        "detail": "GetBodyFacesReadOnly returns an array of Face IDs.",
        "insertText": "WSM.APIGetBodyFacesReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetBodyFacesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gacade79be8fccb664c9f03b8e5c1f7fb7)\n\n## GetBodyFacesReadOnly returns an array of Face IDs.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetBoxReadOnly",
        "kind": "Function",
        "detail": "APIGetBoxReadOnly Parameters: In nHistoryID, nObjectID (Optional), transf (Optional) Out: Interval3d.",
        "insertText": "WSM.APIGetBoxReadOnly(nHistoryID, nObjectID, transf);",
        "documentation": {
            "value": "# [WSM.APIGetBoxReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaacd53cd4e3a7a917635c2e830f14888f)\n\n## APIGetBoxReadOnly Parameters: In nHistoryID, nObjectID (Optional), transf (Optional) Out: Interval3d.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* transf\n"
        }
    },
    {
        "label": "WSM.APIGetCoedgeDirectionReadOnly",
        "kind": "Function",
        "detail": "APIGetCoedgeDirectionReadOnly returns true if coedge and edge go in the same direction.",
        "insertText": "WSM.APIGetCoedgeDirectionReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetCoedgeDirectionReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaaa3dceefb29aef4ab92e8cf721667aa9)\n\n## APIGetCoedgeDirectionReadOnly returns true if coedge and edge go in the same direction.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetConnectedEdgesReadOnly",
        "kind": "Function",
        "detail": "Returns all connected edges of a seed edge.",
        "insertText": "WSM.APIGetConnectedEdgesReadOnly(nHistoryID, nEdgeID, bBreakOnNonSmooth);",
        "documentation": {
            "value": "# [WSM.APIGetConnectedEdgesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga19558223a32f7b70fe78caac0b9fdbbb)\n\n## Returns all connected edges of a seed edge.\n\n## Parameters\n* nHistoryID\n* nEdgeID\n* bBreakOnNonSmooth\n"
        }
    },
    {
        "label": "WSM.APIGetConvexityConnectedComponentReadOnly",
        "kind": "Function",
        "detail": "APIGetConvexityConnectedComponentReadOnly Parameters: In: nHistoryID, nLoopOrFaceID, nConvexity Out: aConnectedFaces.",
        "insertText": "WSM.APIGetConvexityConnectedComponentReadOnly(nHistoryID, nLoopOrFaceID, nConvexity);",
        "documentation": {
            "value": "# [WSM.APIGetConvexityConnectedComponentReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gae386ef617a4ac26e491ced14f2404815)\n\n## APIGetConvexityConnectedComponentReadOnly Parameters: In: nHistoryID, nLoopOrFaceID, nConvexity Out: aConnectedFaces.\n\n## Parameters\n* nHistoryID\n* nLoopOrFaceID\n* nConvexity\n"
        }
    },
    {
        "label": "WSM.APIGetConvexityReadOnly",
        "kind": "Function",
        "detail": "APIGetConvexityReadOnly returns the convexity of Edge or Loop ID.",
        "insertText": "WSM.APIGetConvexityReadOnly(nHistoryID, nEdgeOrLoopID);",
        "documentation": {
            "value": "# [WSM.APIGetConvexityReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac7fe9609302038335ccfd7209bfc4e54)\n\n## APIGetConvexityReadOnly returns the convexity of Edge or Loop ID.\n\n## Parameters\n* nHistoryID\n* nEdgeOrLoopID\n"
        }
    },
    {
        "label": "WSM.APIGetCreatedChangedAndDeletedInActiveDeltaReadOnly",
        "kind": "Function",
        "detail": "APIGetCreatedChangedAndDeletedInActiveDeltaReadOnly Parameters: In: History ID, WSM.nObjectType nObjectType, bool bForUndo Out: Vector of Created, Vector of Changed, Vector of Deleted,.",
        "insertText": "WSM.APIGetCreatedChangedAndDeletedInActiveDeltaReadOnly(nHistoryID, nObjectType, bForUndo);",
        "documentation": {
            "value": "# [WSM.APIGetCreatedChangedAndDeletedInActiveDeltaReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga19dc6013f2018b84066b85e1b3620968)\n\n## APIGetCreatedChangedAndDeletedInActiveDeltaReadOnly Parameters: In: History ID, WSM.nObjectType nObjectType, bool bForUndo Out: Vector of Created, Vector of Changed, Vector of Deleted,.\n\n## Parameters\n* nHistoryID\n* nObjectType\n* bForUndo\n"
        }
    },
    {
        "label": "WSM.APIGetCreatedChangedAndDeletedInDeltaRangeReadOnly",
        "kind": "Function",
        "detail": "APIGetCreatedChangedAndDeletedInDeltaRangeReadOnly Parameters: In: History ID, first Delta ID, second Delta ID, nObjectTypes Out: Vector of Created, Vector of Changed, Vector of Deleted,.",
        "insertText": "WSM.APIGetCreatedChangedAndDeletedInDeltaRangeReadOnly(nHistoryID, nStartDelta, nEndDelta, aObjectTypes);",
        "documentation": {
            "value": "# [WSM.APIGetCreatedChangedAndDeletedInDeltaRangeReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga1966f2625ef4284e154d47447e66746c)\n\n## APIGetCreatedChangedAndDeletedInDeltaRangeReadOnly Parameters: In: History ID, first Delta ID, second Delta ID, nObjectTypes Out: Vector of Created, Vector of Changed, Vector of Deleted,.\n\n## Parameters\n* nHistoryID\n* nStartDelta\n* nEndDelta\n* aObjectTypes\n"
        }
    },
    {
        "label": "WSM.APIGetDatabaseVersionReadOnly",
        "kind": "Function",
        "detail": "APIGetDatabaseVersionReadOnly Parameters: In: Out: JSON.",
        "insertText": "WSM.APIGetDatabaseVersionReadOnly();",
        "documentation": {
            "value": "# [WSM.APIGetDatabaseVersionReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad3a74cebb68df2252264717fc0f742ed)\n\n## APIGetDatabaseVersionReadOnly Parameters: In: Out: JSON.\n\n"
        }
    },
    {
        "label": "WSM.APIGetDynamoModelInformationReadOnly",
        "kind": "Function",
        "detail": "APIGetDynamoModelInformationReadOnly returns Dynamo Model information of the history.",
        "insertText": "WSM.APIGetDynamoModelInformationReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIGetDynamoModelInformationReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac126b8d300a3478a7fffed32fa689cf5)\n\n## APIGetDynamoModelInformationReadOnly returns Dynamo Model information of the history.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIGetEdgeOrVertexMarkedSmoothReadOnly",
        "kind": "Function",
        "detail": "GetEdgeMarkedSmoothReadOnly Returns whether an edge is marked as smooth.",
        "insertText": "WSM.APIGetEdgeOrVertexMarkedSmoothReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetEdgeOrVertexMarkedSmoothReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga961c1caafa119b03c4719935fc1d381e)\n\n## GetEdgeMarkedSmoothReadOnly Returns whether an edge is marked as smooth.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetEdgePointsReadOnly",
        "kind": "Function",
        "detail": "Get edge endpoints directly.",
        "insertText": "WSM.APIGetEdgePointsReadOnly(nHistoryID, nEdgeID);",
        "documentation": {
            "value": "# [WSM.APIGetEdgePointsReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0d96c05c83049865bf0993721d704e7f)\n\n## Get edge endpoints directly.\n\n## Parameters\n* nHistoryID\n* nEdgeID\n"
        }
    },
    {
        "label": "WSM.APIGetEdgeStyleReadOnly",
        "kind": "Function",
        "detail": "Get the style of an edge.",
        "insertText": "WSM.APIGetEdgeStyleReadOnly(nHistoryID, nEdgeID);",
        "documentation": {
            "value": "# [WSM.APIGetEdgeStyleReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0718888624b045aff860bf984951e84b)\n\n## Get the style of an edge.\n\n## Parameters\n* nHistoryID\n* nEdgeID\n"
        }
    },
    {
        "label": "WSM.APIGetEnabledJournalingTypesReadOnly",
        "kind": "Function",
        "detail": "APIGetEnabledJournalingTypesReadOnly returns the list of journaling 'types' that are enabled.",
        "insertText": "WSM.APIGetEnabledJournalingTypesReadOnly();",
        "documentation": {
            "value": "# [WSM.APIGetEnabledJournalingTypesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaeed6c6178972f0a9f737d3e189094aca)\n\n## APIGetEnabledJournalingTypesReadOnly returns the list of journaling 'types' that are enabled.\n\n"
        }
    },
    {
        "label": "WSM.APIGetFaceBacksideMaterialReadOnly",
        "kind": "Function",
        "detail": "Gets the material of the backside of the given face.",
        "insertText": "WSM.APIGetFaceBacksideMaterialReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIGetFaceBacksideMaterialReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gabdcfdb9bbd040e5df9ac832b216f0671)\n\n## Gets the material of the backside of the given face.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIGetFaceCentroidPoint3dReadOnly",
        "kind": "Function",
        "detail": "APIGetFaceCentroidPoint3dReadOnly returns the centroid point of nFaceID.",
        "insertText": "WSM.APIGetFaceCentroidPoint3dReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIGetFaceCentroidPoint3dReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8e61ed2dc6440be4b8be68dd7b61dd2d)\n\n## APIGetFaceCentroidPoint3dReadOnly returns the centroid point of nFaceID.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIGetFaceConnectedComponentReadOnly",
        "kind": "Function",
        "detail": "APIGetFaceConnectedComponentReadOnly Parameters: In: nHistoryID, nFaceID, bUseVertices, bSmooth Out: aConnectedFaces.",
        "insertText": "WSM.APIGetFaceConnectedComponentReadOnly(nHistoryID, nFaceID, bUseVertices, bSmooth);",
        "documentation": {
            "value": "# [WSM.APIGetFaceConnectedComponentReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac2e25aedf906c60fcbdbbd8394886fd2)\n\n## APIGetFaceConnectedComponentReadOnly Parameters: In: nHistoryID, nFaceID, bUseVertices, bSmooth Out: aConnectedFaces.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* bUseVertices\n* bSmooth\n"
        }
    },
    {
        "label": "WSM.APIGetFaceFacetsReadOnly",
        "kind": "Function",
        "detail": "APIGetFaceFacetsReadOnly gets the list of vertices grouped by triangles Parameters: In: nHistoryID, nFaceID Out: aFacets.",
        "insertText": "WSM.APIGetFaceFacetsReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIGetFaceFacetsReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga460888105c4fc6335aa6ad16021cfb47)\n\n## APIGetFaceFacetsReadOnly gets the list of vertices grouped by triangles Parameters: In: nHistoryID, nFaceID Out: aFacets.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIGetFacePlaneReadOnly",
        "kind": "Function",
        "detail": "GetFacePlaneReadOnly returns the plane of nFaceID.",
        "insertText": "WSM.APIGetFacePlaneReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIGetFacePlaneReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga67aab820453c9529fc15b65a87ff605f)\n\n## GetFacePlaneReadOnly returns the plane of nFaceID.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIGetFaceUVDataAttributeUVsReadOnly",
        "kind": "Function",
        "detail": "Gets the UVs from a FaceUVDataAttribute.",
        "insertText": "WSM.APIGetFaceUVDataAttributeUVsReadOnly(nHistoryID, nFaceUVDataAttributeID);",
        "documentation": {
            "value": "# [WSM.APIGetFaceUVDataAttributeUVsReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga08a4a071ea80feebbcecb898767a5304)\n\n## Gets the UVs from a FaceUVDataAttribute.\n\n## Parameters\n* nHistoryID\n* nFaceUVDataAttributeID\n"
        }
    },
    {
        "label": "WSM.APIGetFaceUVDataTransformReadOnly",
        "kind": "Function",
        "detail": "Gets the 2d transform, returned as a 3d transform, for the uvs on the given Face.",
        "insertText": "WSM.APIGetFaceUVDataTransformReadOnly(nHistoryID, nFaceID, bBackSide);",
        "documentation": {
            "value": "# [WSM.APIGetFaceUVDataTransformReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gadc47f4638c2fc105d92b14434870c1f2)\n\n## Gets the 2d transform, returned as a 3d transform, for the uvs on the given Face.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* bBackSide\n"
        }
    },
    {
        "label": "WSM.APIGetFaceVariantReadOnly",
        "kind": "Function",
        "detail": "APIGetFaceVariantReadOnly returns the variant of nFaceID.",
        "insertText": "WSM.APIGetFaceVariantReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIGetFaceVariantReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga949a270f6b43c57308619e50e3e1eb74)\n\n## APIGetFaceVariantReadOnly returns the variant of nFaceID.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIGetFaceVertexNormalsReadOnly",
        "kind": "Function",
        "detail": "APIGetFaceVertexNormalsReadOnly returns the plane of nFaceID.",
        "insertText": "WSM.APIGetFaceVertexNormalsReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIGetFaceVertexNormalsReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga23313222f24210d86c94632f929d9f33)\n\n## APIGetFaceVertexNormalsReadOnly returns the plane of nFaceID.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIGetGroupReferencedHistoryReadOnly",
        "kind": "Function",
        "detail": "APIGetGroupReferencedHistoryReadOnly returns the ID of the Group's or Instance's referenced History Parameters: In: nHistoryID, nGroupOrInstanceID, bDeletedInstanceOK Out: nReferencedHistoryID.",
        "insertText": "WSM.APIGetGroupReferencedHistoryReadOnly(nHistoryID, nGroupOrInstanceID, bDeletedInstanceOK);",
        "documentation": {
            "value": "# [WSM.APIGetGroupReferencedHistoryReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga94778132597500e03ee193825666106c)\n\n## APIGetGroupReferencedHistoryReadOnly returns the ID of the Group's or Instance's referenced History Parameters: In: nHistoryID, nGroupOrInstanceID, bDeletedInstanceOK Out: nReferencedHistoryID.\n\n## Parameters\n* nHistoryID\n* nGroupOrInstanceID\n* bDeletedInstanceOK\n"
        }
    },
    {
        "label": "WSM.APIGetHistoryDeltasReadOnly",
        "kind": "Function",
        "detail": "Get the IDs of the deltas in the given closed range in the given history.",
        "insertText": "WSM.APIGetHistoryDeltasReadOnly(nHistoryID, nStartDeltaID, nEndDeltaID);",
        "documentation": {
            "value": "# [WSM.APIGetHistoryDeltasReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0ecff19bd5cc5693ad8e09f197cfca46)\n\n## Get the IDs of the deltas in the given closed range in the given history.\n\n## Parameters\n* nHistoryID\n* nStartDeltaID\n* nEndDeltaID\n"
        }
    },
    {
        "label": "WSM.APIGetHistoryReferencingGroupsReadOnly",
        "kind": "Function",
        "detail": "Returns a vector with groups that reference this history.",
        "insertText": "WSM.APIGetHistoryReferencingGroupsReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIGetHistoryReferencingGroupsReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga23bdfb3f37938619b3d11395aa63caab)\n\n## Returns a vector with groups that reference this history.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIGetIdOfActiveDeltaReadOnly",
        "kind": "Function",
        "detail": "Get the active Delta ID.",
        "insertText": "WSM.APIGetIdOfActiveDeltaReadOnly(nHistoryID, nDeltaOffset);",
        "documentation": {
            "value": "# [WSM.APIGetIdOfActiveDeltaReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga275c05b6503ec6f796fe3850a0226d6b)\n\n## Get the active Delta ID.\n\n## Parameters\n* nHistoryID\n* nDeltaOffset\n"
        }
    },
    {
        "label": "WSM.APIGetImageDataReadOnly",
        "kind": "Function",
        "detail": "APIGetImageDataReadOnly gets image data Parameters: In: nHistoryID, nImageID Out: sName, nTextureID, nPosition, fAlphaValue, bFeaturesVisible, aCorners, bHasSatelliteData.",
        "insertText": "WSM.APIGetImageDataReadOnly(nHistoryID, nImageID);",
        "documentation": {
            "value": "# [WSM.APIGetImageDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaab0cfc516467f7f88ccb7506c8e7102c)\n\n## APIGetImageDataReadOnly gets image data Parameters: In: nHistoryID, nImageID Out: sName, nTextureID, nPosition, fAlphaValue, bFeaturesVisible, aCorners, bHasSatelliteData.\n\n## Parameters\n* nHistoryID\n* nImageID\n"
        }
    },
    {
        "label": "WSM.APIGetInstanceTransf3dReadOnly",
        "kind": "Function",
        "detail": "Returns the Instance's Transf3d.",
        "insertText": "WSM.APIGetInstanceTransf3dReadOnly(nHistoryID, nInstanceID);",
        "documentation": {
            "value": "# [WSM.APIGetInstanceTransf3dReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga12321af3d33313886c8747069f022bdf)\n\n## Returns the Instance's Transf3d.\n\n## Parameters\n* nHistoryID\n* nInstanceID\n"
        }
    },
    {
        "label": "WSM.APIGetInvalidID",
        "kind": "Function",
        "detail": "APIGetInvalidID Parameters: In: Out: ID.",
        "insertText": "WSM.APIGetInvalidID();",
        "documentation": {
            "value": "# [WSM.APIGetInvalidID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga792c39af2b39c52fe3c83df2e0b7fdf8)\n\n## APIGetInvalidID Parameters: In: Out: ID.\n\n"
        }
    },
    {
        "label": "WSM.APIGetLastDeltaIDReadOnly",
        "kind": "Function",
        "detail": "Get the ID of the target Delta, which is nBeforeLast before the last Delta (even for zero nBeforeLast, it may be different from the active Delta ID, if there are available Redo states).",
        "insertText": "WSM.APIGetLastDeltaIDReadOnly(nHistoryID, nLastDeltaID, nBeforeLast, nHistoryID, nBeforeLast);",
        "documentation": {
            "value": "# [WSM.APIGetLastDeltaIDReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad5efde5930c39261d52953bb3c56cd2c)\n\n## Get the ID of the target Delta, which is nBeforeLast before the last Delta (even for zero nBeforeLast, it may be different from the active Delta ID, if there are available Redo states).\n\n## Parameters\n* nHistoryID\n* nLastDeltaID\n* nBeforeLast\n* nHistoryID\n* nBeforeLast\n"
        }
    },
    {
        "label": "WSM.APIGetLayerDataReadOnly",
        "kind": "Function",
        "detail": "Get the data from a layer.",
        "insertText": "WSM.APIGetLayerDataReadOnly(nHistoryID, nLayerID);",
        "documentation": {
            "value": "# [WSM.APIGetLayerDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad9a9005ca889dd6877e2700285d44bd6)\n\n## Get the data from a layer.\n\n## Parameters\n* nHistoryID\n* nLayerID\n"
        }
    },
    {
        "label": "WSM.APIGetLevelDataReadOnly",
        "kind": "Function",
        "detail": "APIGetLevelDataReadOnly gets the elevation and name properties.",
        "insertText": "WSM.APIGetLevelDataReadOnly(nHistoryID, nLevelID);",
        "documentation": {
            "value": "# [WSM.APIGetLevelDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaa180758fc6443af6e6f680dacfd8c239)\n\n## APIGetLevelDataReadOnly gets the elevation and name properties.\n\n## Parameters\n* nHistoryID\n* nLevelID\n"
        }
    },
    {
        "label": "WSM.APIGetLineMeshDataReadOnly",
        "kind": "Function",
        "detail": "Get the data from a LineMesh.",
        "insertText": "WSM.APIGetLineMeshDataReadOnly(nHistoryID, nLineMeshID);",
        "documentation": {
            "value": "# [WSM.APIGetLineMeshDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8ae9ca75ed1ab5b038f3b681025e6159)\n\n## Get the data from a LineMesh.\n\n## Parameters\n* nHistoryID\n* nLineMeshID\n"
        }
    },
    {
        "label": "WSM.APIGetLocalCoordinateSystemReadOnly",
        "kind": "Function",
        "detail": "Get the LCS (local coordinate system) of the given History.",
        "insertText": "WSM.APIGetLocalCoordinateSystemReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIGetLocalCoordinateSystemReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaf4ae3ce300fcfefe3867c77cdd84f896)\n\n## Get the LCS (local coordinate system) of the given History.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIGetMaterialDataReadOnly",
        "kind": "Function",
        "detail": "APIGetMaterialDataReadOnly gets the Material properties.",
        "insertText": "WSM.APIGetMaterialDataReadOnly(nHistoryID, nMaterialID);",
        "documentation": {
            "value": "# [WSM.APIGetMaterialDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga79bd359a73eca71c78304955df33e98a)\n\n## APIGetMaterialDataReadOnly gets the Material properties.\n\n## Parameters\n* nHistoryID\n* nMaterialID\n"
        }
    },
    {
        "label": "WSM.APIGetMemorySizeReadOnly",
        "kind": "Function",
        "detail": "APIGetMemorySizeReadOnly Parameters: In: nHistoryID Out: nBytes.",
        "insertText": "WSM.APIGetMemorySizeReadOnly(nHistoryID, bCollapsedHistoryWithLiveObjsOnly);",
        "documentation": {
            "value": "# [WSM.APIGetMemorySizeReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga73054b9515915d707393469387ad3581)\n\n## APIGetMemorySizeReadOnly Parameters: In: nHistoryID Out: nBytes.\n\n## Parameters\n* nHistoryID\n* bCollapsedHistoryWithLiveObjsOnly\n"
        }
    },
    {
        "label": "WSM.APIGetMeshDataReadOnly",
        "kind": "Function",
        "detail": "Get the data from a Mesh.",
        "insertText": "WSM.APIGetMeshDataReadOnly(nHistoryID, nMeshID);",
        "documentation": {
            "value": "# [WSM.APIGetMeshDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8e3206567f22fa05a8ac2b9df1768bdf)\n\n## Get the data from a Mesh.\n\n## Parameters\n* nHistoryID\n* nMeshID\n"
        }
    },
    {
        "label": "WSM.APIGetObjectAttributesReadOnly",
        "kind": "Function",
        "detail": "Get all of the Attributes of the given Object.",
        "insertText": "WSM.APIGetObjectAttributesReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetObjectAttributesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga4922759134cec7662325632debe34cec)\n\n## Get all of the Attributes of the given Object.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetObjectLayersReadOnly",
        "kind": "Function",
        "detail": "APIGetObjectLayersReadOnly gets all layer ids of the given object.",
        "insertText": "WSM.APIGetObjectLayersReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetObjectLayersReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga1e9487844284c2942784fa5dc5729f8e)\n\n## APIGetObjectLayersReadOnly gets all layer ids of the given object.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetObjectLevelsReadOnly",
        "kind": "Function",
        "detail": "APIGetObjectLevelsReadOnly gets all level's ids of the given object.",
        "insertText": "WSM.APIGetObjectLevelsReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetObjectLevelsReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga1c3c3711e1cad03af9bc1a85015b3e31)\n\n## APIGetObjectLevelsReadOnly gets all level's ids of the given object.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetObjectMaterialReadOnly",
        "kind": "Function",
        "detail": "APIGetObjectMaterialReadOnly gets an Object's material.",
        "insertText": "WSM.APIGetObjectMaterialReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIGetObjectMaterialReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga58e11b67cfab4ac18d073641cde40ffa)\n\n## APIGetObjectMaterialReadOnly gets an Object's material.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIGetObjectNameReadOnly",
        "kind": "Function",
        "detail": "APIGetObjectNameReadOnly returns an object type.",
        "insertText": "WSM.APIGetObjectNameReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetObjectNameReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gafe661a098d6d787db4fd50c3e686cf7c)\n\n## APIGetObjectNameReadOnly returns an object type.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetObjectPropertiesReadOnly",
        "kind": "Function",
        "detail": "Gets the properties of a given object (Body): A name and if that particular body reports its area by level or not Parameters: In: nHistoryID, nObjectID, Out: sObjectName, bReportAreaByLevel.",
        "insertText": "WSM.APIGetObjectPropertiesReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetObjectPropertiesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8f117e262fa1b6712a7012a472b6a7cd)\n\n## Gets the properties of a given object (Body): A name and if that particular body reports its area by level or not Parameters: In: nHistoryID, nObjectID, Out: sObjectName, bReportAreaByLevel.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetObjectsByTypeReadOnly",
        "kind": "Function",
        "detail": "Returns all the objects of type 'nType' contained by the Object the given nObjectID if bUpstream is false; otherwise, return all the objects of type \"nType\" which are the parents of given object.",
        "insertText": "WSM.APIGetObjectsByTypeReadOnly(nHistoryID, nObjectID, nType, bUpstream);",
        "documentation": {
            "value": "# [WSM.APIGetObjectsByTypeReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga88045ee96cadecbca5de103f42d56154)\n\n## Returns all the objects of type 'nType' contained by the Object the given nObjectID if bUpstream is false; otherwise, return all the objects of type \"nType\" which are the parents of given object.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* nType\n* bUpstream\n"
        }
    },
    {
        "label": "WSM.APIGetObjectTextureCoordinatesReadOnly",
        "kind": "Function",
        "detail": "APIGetObjectTextureCoordinatesReadOnly generates tex coords for body or single face Parameters: In: nHistoryID, nObjectID Out: aTexCoords.",
        "insertText": "WSM.APIGetObjectTextureCoordinatesReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetObjectTextureCoordinatesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaf9b8fc2755db7c96841020dfe305e311)\n\n## APIGetObjectTextureCoordinatesReadOnly generates tex coords for body or single face Parameters: In: nHistoryID, nObjectID Out: aTexCoords.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetObjectTypeReadOnly",
        "kind": "Function",
        "detail": "APIGetObjectTypeReadOnly returns an object type.",
        "insertText": "WSM.APIGetObjectTypeReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetObjectTypeReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga20ff30fb1c7bd3545ff6b3fc0a962bb4)\n\n## APIGetObjectTypeReadOnly returns an object type.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetPointMeshDataReadOnly",
        "kind": "Function",
        "detail": "Get the data from a PointMesh.",
        "insertText": "WSM.APIGetPointMeshDataReadOnly(nHistoryID, nPointMeshID);",
        "documentation": {
            "value": "# [WSM.APIGetPointMeshDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga7a9505c1d748ccf29b6c64587055ff54)\n\n## Get the data from a PointMesh.\n\n## Parameters\n* nHistoryID\n* nPointMeshID\n"
        }
    },
    {
        "label": "WSM.APIGetPointsFromObjectIDsReadOnly",
        "kind": "Function",
        "insertText": "WSM.APIGetPointsFromObjectIDsReadOnly();",
        "documentation": {
            "value": "# [WSM.APIGetPointsFromObjectIDsReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga9fbddb1b3fc53c779475411ac4aa1f61)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIGetRenderableFaceReadOnly",
        "kind": "Function",
        "detail": "Returns vertices in groups of 3 (triangles), with associated normals and optionally texture coordinates.",
        "insertText": "WSM.APIGetRenderableFaceReadOnly(nHistoryID, nFaceID, bCalculateTexCoords, bBackSide);",
        "documentation": {
            "value": "# [WSM.APIGetRenderableFaceReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga96461182fdc8169710b913f393bbe783)\n\n## Returns vertices in groups of 3 (triangles), with associated normals and optionally texture coordinates.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* bCalculateTexCoords\n* bBackSide\n"
        }
    },
    {
        "label": "WSM.APIGetResultsCount",
        "kind": "Function",
        "detail": "Get the number of Results managed by ScriptInstance.",
        "insertText": "WSM.APIGetResultsCount();",
        "documentation": {
            "value": "# [WSM.APIGetResultsCount](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3a5407a89c004f18dd83dd81f1689575)\n\n## Get the number of Results managed by ScriptInstance.\n\n"
        }
    },
    {
        "label": "WSM.APIGetRevitFamilyInformationReadOnly",
        "kind": "Function",
        "detail": "APIGetRevitFamilyInformationReadOnly returns Revit Family information of the history.",
        "insertText": "WSM.APIGetRevitFamilyInformationReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIGetRevitFamilyInformationReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8e088858034d0318b028d53cad047a0d)\n\n## APIGetRevitFamilyInformationReadOnly returns Revit Family information of the history.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIGetSatelliteDataReadOnly",
        "kind": "Function",
        "detail": "APIGetSatelliteDataReadOnly gets satellite data from image Parameters: In: nHistoryID, nImageID Out: sName, nTextureID, nPosition, fAlphaValue, bFeaturesVisible, aCorners, bHasSatelliteData.",
        "insertText": "WSM.APIGetSatelliteDataReadOnly(nHistoryID, nImageID);",
        "documentation": {
            "value": "# [WSM.APIGetSatelliteDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab4ef570e8e55ea3418d9298946c2938c)\n\n## APIGetSatelliteDataReadOnly gets satellite data from image Parameters: In: nHistoryID, nImageID Out: sName, nTextureID, nPosition, fAlphaValue, bFeaturesVisible, aCorners, bHasSatelliteData.\n\n## Parameters\n* nHistoryID\n* nImageID\n"
        }
    },
    {
        "label": "WSM.APIGetStringAttributeKeyValueReadOnly",
        "kind": "Function",
        "detail": "Gets the key and value strings from a StringAttribute.",
        "insertText": "WSM.APIGetStringAttributeKeyValueReadOnly(nHistoryID, nStringAttributeID);",
        "documentation": {
            "value": "# [WSM.APIGetStringAttributeKeyValueReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gae5456bbdd4e32e3a1cd40d67fce4be4b)\n\n## Gets the key and value strings from a StringAttribute.\n\n## Parameters\n* nHistoryID\n* nStringAttributeID\n"
        }
    },
    {
        "label": "WSM.APIGetStringAttributesByKeyReadOnly",
        "kind": "Function",
        "detail": "Returns all StringAttributes attached to the Object given by nObjectID with key matching sKey.",
        "insertText": "WSM.APIGetStringAttributesByKeyReadOnly(nHistoryID, nObjectID, sKey);",
        "documentation": {
            "value": "# [WSM.APIGetStringAttributesByKeyReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8a56ccbf77a78a3c85ceecbc3170e73d)\n\n## Returns all StringAttributes attached to the Object given by nObjectID with key matching sKey.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* sKey\n"
        }
    },
    {
        "label": "WSM.APIGetTextureDataReadOnly",
        "kind": "Function",
        "detail": "APIGetTextureDataReadOnly gets a Texture object's bitmap data Parameters: In: nHistoryID, nTextureID Out: JSON object with data.",
        "insertText": "WSM.APIGetTextureDataReadOnly(nHistoryID, nTextureID);",
        "documentation": {
            "value": "# [WSM.APIGetTextureDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3cc11ed8dcad7b48ac9133acfeef1109)\n\n## APIGetTextureDataReadOnly gets a Texture object's bitmap data Parameters: In: nHistoryID, nTextureID Out: JSON object with data.\n\n## Parameters\n* nHistoryID\n* nTextureID\n"
        }
    },
    {
        "label": "WSM.APIGetTopLevelOwnersReadOnly",
        "kind": "Function",
        "detail": "APIGetTopLevelOwnersReadOnly returns the top level owners of the given Object.",
        "insertText": "WSM.APIGetTopLevelOwnersReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIGetTopLevelOwnersReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaba556352d6dc94c7d8e750784adf124f)\n\n## APIGetTopLevelOwnersReadOnly returns the top level owners of the given Object.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIGetVersionReadOnly",
        "kind": "Function",
        "detail": "APIGetVersionReadOnly Parameters: In: Out: JSON.",
        "insertText": "WSM.APIGetVersionReadOnly();",
        "documentation": {
            "value": "# [WSM.APIGetVersionReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab7c3d3863e60415ee3dadd0970047645)\n\n## APIGetVersionReadOnly Parameters: In: Out: JSON.\n\n"
        }
    },
    {
        "label": "WSM.APIGetVertexPoint3dReadOnly",
        "kind": "Function",
        "detail": "APIGetVertexPoint3d returns the Point3d of a Vertex Parameters: In: nHistoryID, nVertexID Out: pt.",
        "insertText": "WSM.APIGetVertexPoint3dReadOnly(nHistoryID, nVertexID);",
        "documentation": {
            "value": "# [WSM.APIGetVertexPoint3dReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3e6b35698559c932f70a8e10f77e545b)\n\n## APIGetVertexPoint3d returns the Point3d of a Vertex Parameters: In: nHistoryID, nVertexID Out: pt.\n\n## Parameters\n* nHistoryID\n* nVertexID\n"
        }
    },
    {
        "label": "WSM.APIImprint",
        "kind": "Function",
        "detail": "APIImprint Parameters: In: nHistoryID, nObjectID1, nObjectID2, bChangeBoth Out: JSON_UNDEFINED.",
        "insertText": "WSM.APIImprint(nHistoryID, nObjectID1, nObjectID2, bChangeBoth);",
        "documentation": {
            "value": "# [WSM.APIImprint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga9e085db0adb90e8b4503e7dd9c90e000)\n\n## APIImprint Parameters: In: nHistoryID, nObjectID1, nObjectID2, bChangeBoth Out: JSON_UNDEFINED.\n\n## Parameters\n* nHistoryID\n* nObjectID1\n* nObjectID2\n* bChangeBoth\n"
        }
    },
    {
        "label": "WSM.APIImprintWithPlane",
        "kind": "Function",
        "detail": "APIImprintWithPlane Parameters: In: nHistoryID, nObjectID, plane Out: JSON_UNDEFINED.",
        "insertText": "WSM.APIImprintWithPlane(nHistoryID, nObjectID, plane);",
        "documentation": {
            "value": "# [WSM.APIImprintWithPlane](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3594f8526625545bd804a2255f70dda1)\n\n## APIImprintWithPlane Parameters: In: nHistoryID, nObjectID, plane Out: JSON_UNDEFINED.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* plane\n"
        }
    },
    {
        "label": "WSM.APIIntersectsNegativeSideOfPlanesReadOnly",
        "kind": "Function",
        "insertText": "WSM.APIIntersectsNegativeSideOfPlanesReadOnly();",
        "documentation": {
            "value": "# [WSM.APIIntersectsNegativeSideOfPlanesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8add2079cfabbe6e727c457bba100aa1)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIIsEdgeManifoldReadOnly",
        "kind": "Function",
        "detail": "Returns whether an edge has exactly two coedges on two distinct faces.",
        "insertText": "WSM.APIIsEdgeManifoldReadOnly(nHistoryID, nEdgeID);",
        "documentation": {
            "value": "# [WSM.APIIsEdgeManifoldReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0bd2d39f0c8a4f0368bd3bb1ed954571)\n\n## Returns whether an edge has exactly two coedges on two distinct faces.\n\n## Parameters\n* nHistoryID\n* nEdgeID\n"
        }
    },
    {
        "label": "WSM.APIIsEdgeMergeableReadOnly",
        "kind": "Function",
        "detail": "APIIsEdgeMergeableReadOnly In: nHistoryID, nEdgeID, bUseMaterial Out:bool (true or false that the Edge is mergeable.",
        "insertText": "WSM.APIIsEdgeMergeableReadOnly(nHistoryID, nEdgeID, bUseMaterial);",
        "documentation": {
            "value": "# [WSM.APIIsEdgeMergeableReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaf2ec27603554a90fd734a8d456ad004b)\n\n## APIIsEdgeMergeableReadOnly In: nHistoryID, nEdgeID, bUseMaterial Out:bool (true or false that the Edge is mergeable.\n\n## Parameters\n* nHistoryID\n* nEdgeID\n* bUseMaterial\n"
        }
    },
    {
        "label": "WSM.APIIsEdgeOnCircleReadOnly",
        "kind": "Function",
        "detail": "APIIsEdgeOnCircleReadOnly Parameters: In: nHistoryID, nEdgeID Out: radius, center, normal, xaxis, aAllCircleSiblings, bHasCircleAttribute.",
        "insertText": "WSM.APIIsEdgeOnCircleReadOnly(nHistoryID, nEdgeID);",
        "documentation": {
            "value": "# [WSM.APIIsEdgeOnCircleReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaf1c47a2c2287482de6dc93a5ecc82fb7)\n\n## APIIsEdgeOnCircleReadOnly Parameters: In: nHistoryID, nEdgeID Out: radius, center, normal, xaxis, aAllCircleSiblings, bHasCircleAttribute.\n\n## Parameters\n* nHistoryID\n* nEdgeID\n"
        }
    },
    {
        "label": "WSM.APIIsEdgeOnSplineReadOnly",
        "kind": "Function",
        "detail": "APIIsEdgeOnSplineReadOnly Parameters: In: nHistoryID, nEdgeID Out: aControlPoints, bClosed, startTangent, endTangent, aAllSplineSiblings, bHasSplineAttribute.",
        "insertText": "WSM.APIIsEdgeOnSplineReadOnly(nHistoryID, nEdgeID);",
        "documentation": {
            "value": "# [WSM.APIIsEdgeOnSplineReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8a9fad7ce7d7cbcfc0c9bed1f2a13688)\n\n## APIIsEdgeOnSplineReadOnly Parameters: In: nHistoryID, nEdgeID Out: aControlPoints, bClosed, startTangent, endTangent, aAllSplineSiblings, bHasSplineAttribute.\n\n## Parameters\n* nHistoryID\n* nEdgeID\n"
        }
    },
    {
        "label": "WSM.APIIsEdgeSilhouetteReadOnly",
        "kind": "Function",
        "detail": "APIIsEdgeSilhouetteReadOnly Returns whether an edge is a silhouette.",
        "insertText": "WSM.APIIsEdgeSilhouetteReadOnly(nHistoryID, nEdgeID, cameraPos, cameraDir, bPerspectiveView);",
        "documentation": {
            "value": "# [WSM.APIIsEdgeSilhouetteReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad477a6d7cbd4a7449f4217dfa9a0bc6b)\n\n## APIIsEdgeSilhouetteReadOnly Returns whether an edge is a silhouette.\n\n## Parameters\n* nHistoryID\n* nEdgeID\n* cameraPos\n* cameraDir\n* bPerspectiveView\n"
        }
    },
    {
        "label": "WSM.APIIsExactMatchReadOnly",
        "kind": "Function",
        "detail": "API compares either two Histories or two Objects and sets bIsExact to true when they match exactly.",
        "insertText": "WSM.APIIsExactMatchReadOnly(nHistoryID1, nHistoryID2, nObjectID1, nObjectID2);",
        "documentation": {
            "value": "# [WSM.APIIsExactMatchReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab14c22d7009d2c8aa35b30de5ac464b1)\n\n## API compares either two Histories or two Objects and sets bIsExact to true when they match exactly.\n\n## Parameters\n* nHistoryID1\n* nHistoryID2\n* nObjectID1\n* nObjectID2\n"
        }
    },
    {
        "label": "WSM.APIIsFaceOnBlendReadOnly",
        "kind": "Function",
        "detail": "APIIsFaceOnBlendReadOnly Parameters: In: nHistoryID, nFaceID Out: radius, aPathPoints, aAllBlendSiblings, bHasBlendAttribute.",
        "insertText": "WSM.APIIsFaceOnBlendReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIIsFaceOnBlendReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga49a45e765f79e68800ac3afd66c91aaa)\n\n## APIIsFaceOnBlendReadOnly Parameters: In: nHistoryID, nFaceID Out: radius, aPathPoints, aAllBlendSiblings, bHasBlendAttribute.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIIsFaceOnCylinderReadOnly",
        "kind": "Function",
        "detail": "APIIsFaceOnCylinderReadOnly Parameters: In: nHistoryID, nFaceID Out: radius, center, normal, xaxis, aAllCylinderSiblings, bHasCylinderAttribute.",
        "insertText": "WSM.APIIsFaceOnCylinderReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIIsFaceOnCylinderReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga33b67cdb36e6c2c0503cac97fd1f088a)\n\n## APIIsFaceOnCylinderReadOnly Parameters: In: nHistoryID, nFaceID Out: radius, center, normal, xaxis, aAllCylinderSiblings, bHasCylinderAttribute.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIIsFaceOnExtrudeReadOnly",
        "kind": "Function",
        "detail": "APIIsFaceOnExtrudeReadOnly Parameters: In: nHistoryID, nFaceID Out: base, axis, xaxis, aControlPoints, bClosed, startTangent, endTangent, aAllExtrudeSiblings, bHasExtrudeAttribute.",
        "insertText": "WSM.APIIsFaceOnExtrudeReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIIsFaceOnExtrudeReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga6c45a1931cdb7ba72395b6e918829058)\n\n## APIIsFaceOnExtrudeReadOnly Parameters: In: nHistoryID, nFaceID Out: base, axis, xaxis, aControlPoints, bClosed, startTangent, endTangent, aAllExtrudeSiblings, bHasExtrudeAttribute.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIIsFaceOnSphereReadOnly",
        "kind": "Function",
        "detail": "APIIsFaceOnSphereReadOnly Parameters: In: nHistoryID, nFaceID Out: radius, center, normal, xaxis, aAllSphereSiblings, bHasSphereAttribute.",
        "insertText": "WSM.APIIsFaceOnSphereReadOnly(nHistoryID, nFaceID);",
        "documentation": {
            "value": "# [WSM.APIIsFaceOnSphereReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac922b2d5de6c96206dcb381c2066c84c)\n\n## APIIsFaceOnSphereReadOnly Parameters: In: nHistoryID, nFaceID Out: radius, center, normal, xaxis, aAllSphereSiblings, bHasSphereAttribute.\n\n## Parameters\n* nHistoryID\n* nFaceID\n"
        }
    },
    {
        "label": "WSM.APIIsHistoryLiveReadOnly",
        "kind": "Function",
        "detail": "APIIsHistoryLiveReadOnly checks if an history is alive Parameters: In: nHistoryID Out: bIsLive.",
        "insertText": "WSM.APIIsHistoryLiveReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIIsHistoryLiveReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga171c23fb3cfe63c1b14b526383cf7c19)\n\n## APIIsHistoryLiveReadOnly checks if an history is alive Parameters: In: nHistoryID Out: bIsLive.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIIsHistoryNonTemporaryReadOnly",
        "kind": "Function",
        "detail": "Returns whether a history is temporary or not.",
        "insertText": "WSM.APIIsHistoryNonTemporaryReadOnly(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIIsHistoryNonTemporaryReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga89a371f6890f6ec738bd315a5f4d295b)\n\n## Returns whether a history is temporary or not.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIIsJournalingReadOnly",
        "kind": "Function",
        "detail": "Check if Journaling is enabled.",
        "insertText": "WSM.APIIsJournalingReadOnly();",
        "documentation": {
            "value": "# [WSM.APIIsJournalingReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga21864a5679f1328db9263d9f51639fbb)\n\n## Check if Journaling is enabled.\n\n"
        }
    },
    {
        "label": "WSM.APIIsMeshManifoldReadOnly",
        "kind": "Function",
        "detail": "Returns true if the Mesh is manifold, i.e.",
        "insertText": "WSM.APIIsMeshManifoldReadOnly(nHistoryID, nMeshID);",
        "documentation": {
            "value": "# [WSM.APIIsMeshManifoldReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad645282afa2f988ff49756d88850ccc0)\n\n## Returns true if the Mesh is manifold, i.e.\n\n## Parameters\n* nHistoryID\n* nMeshID\n"
        }
    },
    {
        "label": "WSM.APIIsNonOwnedReadOnly",
        "kind": "Function",
        "detail": "APIIsNonOwnedReadOnly returns whether this object has an owner.",
        "insertText": "WSM.APIIsNonOwnedReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIIsNonOwnedReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gabd8bc85957425f7cdb946593e1ca26be)\n\n## APIIsNonOwnedReadOnly returns whether this object has an owner.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APIIsObjectLiveReadOnly",
        "kind": "Function",
        "detail": "APIIsObjectLiveReadOnly checks if an object is alive in history Parameters: In: nHistoryID, nObjectID Out: bIsLive.",
        "insertText": "WSM.APIIsObjectLiveReadOnly(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.APIIsObjectLiveReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga39a6f020d465ddab92da29c43485f68b)\n\n## APIIsObjectLiveReadOnly checks if an object is alive in history Parameters: In: nHistoryID, nObjectID Out: bIsLive.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.APILineMeshContainsPointReadOnly",
        "kind": "Function",
        "detail": "Returns true if the LineMesh contains the point.",
        "insertText": "WSM.APILineMeshContainsPointReadOnly(nHistoryID, nLineMeshID, point);",
        "documentation": {
            "value": "# [WSM.APILineMeshContainsPointReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga21308c6f8d24dcc0a281dc4062104df8)\n\n## Returns true if the LineMesh contains the point.\n\n## Parameters\n* nHistoryID\n* nLineMeshID\n* point\n"
        }
    },
    {
        "label": "WSM.APILineMeshGetPointsOnNegativeSideOfPlanesReadOnly",
        "kind": "Function",
        "detail": "Get all points nearest the given line from segments of the LineMesh that lie on the negative side of all the given Planes.",
        "insertText": "WSM.APILineMeshGetPointsOnNegativeSideOfPlanesReadOnly(nHistoryID, nLineMeshID, aPlanes, line3dPickRay, dTol);",
        "documentation": {
            "value": "# [WSM.APILineMeshGetPointsOnNegativeSideOfPlanesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gae56481c00cb8db8fcd23f0b756cbe70f)\n\n## Get all points nearest the given line from segments of the LineMesh that lie on the negative side of all the given Planes.\n\n## Parameters\n* nHistoryID\n* nLineMeshID\n* aPlanes\n* line3dPickRay\n* dTol\n"
        }
    },
    {
        "label": "WSM.APILinkMeshesForConversion",
        "kind": "Function",
        "insertText": "WSM.APILinkMeshesForConversion();",
        "documentation": {
            "value": "# [WSM.APILinkMeshesForConversion](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga595cf8fc39b1d7a7486bc8a940caee8c)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APILoadAXMFile",
        "kind": "Function",
        "detail": "Load an AXM file, both pre WSM and current.",
        "insertText": "WSM.APILoadAXMFile(nHistoryID, sFilePath, isImport, logOutputPath);",
        "documentation": {
            "value": "# [WSM.APILoadAXMFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga4556416f0477a83fabd98540bdc269f4)\n\n## Load an AXM file, both pre WSM and current.\n\n## Parameters\n* nHistoryID\n* sFilePath\n* isImport\n* logOutputPath\n"
        }
    },
    {
        "label": "WSM.APILoadDeltaFromBinaryFile",
        "kind": "Function",
        "detail": "Load Delta from a binary file and add it to the History.",
        "insertText": "WSM.APILoadDeltaFromBinaryFile(nHistoryID, sFilePath);",
        "documentation": {
            "value": "# [WSM.APILoadDeltaFromBinaryFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga580575eff5b87af30cf193a3685857c9)\n\n## Load Delta from a binary file and add it to the History.\n\n## Parameters\n* nHistoryID\n* sFilePath\n"
        }
    },
    {
        "label": "WSM.APILoadDeltaFromBinaryString",
        "kind": "Function",
        "detail": "APILoadDeltaFromBinaryString Parameters: In: nHistoryID, base64Str, [nDeltaID, [base64encoded]] Out: nDeltaID.",
        "insertText": "WSM.APILoadDeltaFromBinaryString(nHistoryID, base64Str, nDeltaID, base64encoded);",
        "documentation": {
            "value": "# [WSM.APILoadDeltaFromBinaryString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga944ab5864c55c3faa43f0d034ef6ba8b)\n\n## APILoadDeltaFromBinaryString Parameters: In: nHistoryID, base64Str, [nDeltaID, [base64encoded]] Out: nDeltaID.\n\n## Parameters\n* nHistoryID\n* base64Str\n* nDeltaID\n* base64encoded\n"
        }
    },
    {
        "label": "WSM.APILoadFromFacets",
        "kind": "Function",
        "detail": "Parameters: In: nHistoryID, facetsData, nOptions, dMaxDistanceFromOrigin, dRemoveDuplicateTol Out: IDs of created objects.",
        "insertText": "WSM.APILoadFromFacets(nHistoryID, facetsData, nOptions, dMaxDistanceFromOrigin, dRemoveDuplicateTol);",
        "documentation": {
            "value": "# [WSM.APILoadFromFacets](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga2fc1b5bc01b53909b78d6c8d8c33baee)\n\n## Parameters: In: nHistoryID, facetsData, nOptions, dMaxDistanceFromOrigin, dRemoveDuplicateTol Out: IDs of created objects.\n\n## Parameters\n* nHistoryID\n* facetsData\n* nOptions\n* dMaxDistanceFromOrigin\n* dRemoveDuplicateTol\n"
        }
    },
    {
        "label": "WSM.APILoadFromFile",
        "kind": "Function",
        "detail": "APILoadFromFile Parameters: In: nHistoryID, sFilePath, eFileType, nOptions, dMaxDistanceFromOrigin, dScaleFactor Out: iObjectIdOffset.",
        "insertText": "WSM.APILoadFromFile(nHistoryID, sFilePath, eFileType, nOptions, dMaxDistanceFromOrigin, dScaleFactor);",
        "documentation": {
            "value": "# [WSM.APILoadFromFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga840f5a2251bdf50eddff1dd4098a3d1f)\n\n## APILoadFromFile Parameters: In: nHistoryID, sFilePath, eFileType, nOptions, dMaxDistanceFromOrigin, dScaleFactor Out: iObjectIdOffset.\n\n## Parameters\n* nHistoryID\n* sFilePath\n* eFileType\n* nOptions\n* dMaxDistanceFromOrigin\n* dScaleFactor\n"
        }
    },
    {
        "label": "WSM.APILoadFromString",
        "kind": "Function",
        "detail": "Load a model from a string containing serialization of one of the supported types.",
        "insertText": "WSM.APILoadFromString(nHistoryID, sInputString, eFileType, nOptions, dMaxDistanceFromOrigin, bBase64Encoded, dScaleFactor, nHistoryID, saveString, eFileType, nOptions, dMaxDistanceFromOrigin, dScaleFactor);",
        "documentation": {
            "value": "# [WSM.APILoadFromString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga5b2b2548e6989a48a6ff949d1f1ee700)\n\n## Load a model from a string containing serialization of one of the supported types.\n\n## Parameters\n* nHistoryID\n* sInputString\n* eFileType\n* nOptions\n* dMaxDistanceFromOrigin\n* bBase64Encoded\n* dScaleFactor\n* nHistoryID\n* saveString\n* eFileType\n* nOptions\n* dMaxDistanceFromOrigin\n* dScaleFactor\n"
        }
    },
    {
        "label": "WSM.APILoadHistoryFromBinaryString",
        "kind": "Function",
        "detail": "Load the whole history (with all undo states) from an, optionally base64 encoded, string and add to to an empty History.",
        "insertText": "WSM.APILoadHistoryFromBinaryString(nHistoryID, base64Str, base64encoded);",
        "documentation": {
            "value": "# [WSM.APILoadHistoryFromBinaryString](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac2965e651e06bc118e2c381dbf3520de)\n\n## Load the whole history (with all undo states) from an, optionally base64 encoded, string and add to to an empty History.\n\n## Parameters\n* nHistoryID\n* base64Str\n* base64encoded\n"
        }
    },
    {
        "label": "WSM.APILoadMaterialsFromAXMFile",
        "kind": "Function",
        "detail": "Load only materials and their textures from an AXM file into the given history.",
        "insertText": "WSM.APILoadMaterialsFromAXMFile(nHistoryID, sFilePath);",
        "documentation": {
            "value": "# [WSM.APILoadMaterialsFromAXMFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga91dac8cfc68d30f366eccd75a2b73b01)\n\n## Load only materials and their textures from an AXM file into the given history.\n\n## Parameters\n* nHistoryID\n* sFilePath\n"
        }
    },
    {
        "label": "WSM.APILoft",
        "kind": "Function",
        "detail": "APILoft makes Faces that connect a vector of profiles.",
        "insertText": "WSM.APILoft(nHistoryID, aaProfileIDs, bDeleteInteriorProfileFaces);",
        "documentation": {
            "value": "# [WSM.APILoft](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad01f31f339d710b85550472a6fe21ecb)\n\n## APILoft makes Faces that connect a vector of profiles.\n\n## Parameters\n* nHistoryID\n* aaProfileIDs\n* bDeleteInteriorProfileFaces\n"
        }
    },
    {
        "label": "WSM.APIMergeBody",
        "kind": "Function",
        "detail": "Merges all the merge-able Edges and Vertices out of a Body.",
        "insertText": "WSM.APIMergeBody(nHistoryID, nBodyID, dSmoothCosAngle);",
        "documentation": {
            "value": "# [WSM.APIMergeBody](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga2f8d9a5195edee1acad6edf66493735d)\n\n## Merges all the merge-able Edges and Vertices out of a Body.\n\n## Parameters\n* nHistoryID\n* nBodyID\n* dSmoothCosAngle\n"
        }
    },
    {
        "label": "WSM.APIMergeDeltas",
        "kind": "Function",
        "detail": "APIMergeDeltas merges the specified Delta range.",
        "insertText": "WSM.APIMergeDeltas(nHistoryID, nStartDeltaID, nEndDeltaID, bReuseDiscardedObjectIDs);",
        "documentation": {
            "value": "# [WSM.APIMergeDeltas](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3916e89593913fc39426b9af7cdbfbc7)\n\n## APIMergeDeltas merges the specified Delta range.\n\n## Parameters\n* nHistoryID\n* nStartDeltaID\n* nEndDeltaID\n* bReuseDiscardedObjectIDs\n"
        }
    },
    {
        "label": "WSM.APIMeshComputeNonSmoothEdgesReadOnly",
        "kind": "Function",
        "detail": "Returns non-smooth edges from the Mesh.",
        "insertText": "WSM.APIMeshComputeNonSmoothEdgesReadOnly(nHistoryID, nMeshID, dCosSmoothAngle);",
        "documentation": {
            "value": "# [WSM.APIMeshComputeNonSmoothEdgesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gae0adf17850de4a981f89f781aef198b3)\n\n## Returns non-smooth edges from the Mesh.\n\n## Parameters\n* nHistoryID\n* nMeshID\n* dCosSmoothAngle\n"
        }
    },
    {
        "label": "WSM.APIMeshComputeSilhouetteEdgesReadOnly",
        "kind": "Function",
        "detail": "Returns silhouette edges from the Mesh.",
        "insertText": "WSM.APIMeshComputeSilhouetteEdgesReadOnly(nHistoryID, nMeshID, cameraPos, cameraDir, bPerspectiveView);",
        "documentation": {
            "value": "# [WSM.APIMeshComputeSilhouetteEdgesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac12cd330aa1cb7935dc974bf60bb98a2)\n\n## Returns silhouette edges from the Mesh.\n\n## Parameters\n* nHistoryID\n* nMeshID\n* cameraPos\n* cameraDir\n* bPerspectiveView\n"
        }
    },
    {
        "label": "WSM.APIMeshContainsPointReadOnly",
        "kind": "Function",
        "detail": "Returns true and the normal if the Mesh contains the point.",
        "insertText": "WSM.APIMeshContainsPointReadOnly(nHistoryID, nMeshID, point);",
        "documentation": {
            "value": "# [WSM.APIMeshContainsPointReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad4613fd00bb910aeffe8004f0e7a0f7b)\n\n## Returns true and the normal if the Mesh contains the point.\n\n## Parameters\n* nHistoryID\n* nMeshID\n* point\n"
        }
    },
    {
        "label": "WSM.APIMeshPointOnOrInsideIfManifoldReadOnly",
        "kind": "Function",
        "detail": "Return true if the given point is on the Mesh.",
        "insertText": "WSM.APIMeshPointOnOrInsideIfManifoldReadOnly(nHistoryID, nMeshID, point);",
        "documentation": {
            "value": "# [WSM.APIMeshPointOnOrInsideIfManifoldReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3418e2fd4fb70742ceaacea8794e0432)\n\n## Return true if the given point is on the Mesh.\n\n## Parameters\n* nHistoryID\n* nMeshID\n* point\n"
        }
    },
    {
        "label": "WSM.APIMoveImage",
        "kind": "Function",
        "detail": "APIMoveImage moves the image along z axis.",
        "insertText": "WSM.APIMoveImage(nHistoryID, nImageID, nShift);",
        "documentation": {
            "value": "# [WSM.APIMoveImage](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga139b1718277b7d058720fb3529886bb5)\n\n## APIMoveImage moves the image along z axis.\n\n## Parameters\n* nHistoryID\n* nImageID\n* nShift\n"
        }
    },
    {
        "label": "WSM.APIMoveObject",
        "kind": "Function",
        "detail": "APIMoveObject moves the given object with displacement.",
        "insertText": "WSM.APIMoveObject(nHistoryID, objectID, displacement);",
        "documentation": {
            "value": "# [WSM.APIMoveObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0c70bdeac7488ad7510da204d5c13d03)\n\n## APIMoveObject moves the given object with displacement.\n\n## Parameters\n* nHistoryID\n* objectID\n* displacement\n"
        }
    },
    {
        "label": "WSM.APIMoveObjects",
        "kind": "Function",
        "insertText": "WSM.APIMoveObjects();",
        "documentation": {
            "value": "# [WSM.APIMoveObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gabcd3084cb1caa7f3f39f521a02b8d05a)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIMoveVertices",
        "kind": "Function",
        "insertText": "WSM.APIMoveVertices();",
        "documentation": {
            "value": "# [WSM.APIMoveVertices](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga2d8783bf8416e41722a7c9c69d6351f9)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIOffset3d",
        "kind": "Function",
        "detail": "APIOffset3d offsets all the Faces in the given Object by the amount specified.",
        "insertText": "WSM.APIOffset3d(nHistoryID, nObjectID, dDistance);",
        "documentation": {
            "value": "# [WSM.APIOffset3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gadd5278d3fe53a5b322a370467046ae12)\n\n## APIOffset3d offsets all the Faces in the given Object by the amount specified.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* dDistance\n"
        }
    },
    {
        "label": "WSM.APIOffsetEdges",
        "kind": "Function",
        "insertText": "WSM.APIOffsetEdges();",
        "documentation": {
            "value": "# [WSM.APIOffsetEdges](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8a5269f5ae2e065e9f36afeb0397dd03)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIOffsetFace",
        "kind": "Function",
        "detail": "APIOffsetFace offsets a copy of the boundary a face by given distance.",
        "insertText": "WSM.APIOffsetFace(nHistoryID, nFaceID, dOffsetDistance, bOffsetHolesToo, trans, bReadOnly);",
        "documentation": {
            "value": "# [WSM.APIOffsetFace](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab8cb0ce8d443451f781a3f329a9a27ae)\n\n## APIOffsetFace offsets a copy of the boundary a face by given distance.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* dOffsetDistance\n* bOffsetHolesToo\n* trans\n* bReadOnly\n"
        }
    },
    {
        "label": "WSM.APIPointMeshContainsPointReadOnly",
        "kind": "Function",
        "detail": "Returns true if the PointMesh contains the point.",
        "insertText": "WSM.APIPointMeshContainsPointReadOnly(nHistoryID, nPointMeshID, point);",
        "documentation": {
            "value": "# [WSM.APIPointMeshContainsPointReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaa0f458b14145603de6db716931cc2112)\n\n## Returns true if the PointMesh contains the point.\n\n## Parameters\n* nHistoryID\n* nPointMeshID\n* point\n"
        }
    },
    {
        "label": "WSM.APIPointMeshGetPointsOnNegativeSideOfPlanesReadOnly",
        "kind": "Function",
        "detail": "Get all points of the PointMesh that lie on the negative side of all the given Planes.",
        "insertText": "WSM.APIPointMeshGetPointsOnNegativeSideOfPlanesReadOnly(nHistoryID, nPointMeshID, aPlanes, dTol);",
        "documentation": {
            "value": "# [WSM.APIPointMeshGetPointsOnNegativeSideOfPlanesReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaf3e53f69e39e47bf4e7dd6e327a1242e)\n\n## Get all points of the PointMesh that lie on the negative side of all the given Planes.\n\n## Parameters\n* nHistoryID\n* nPointMeshID\n* aPlanes\n* dTol\n"
        }
    },
    {
        "label": "WSM.APIPushMirrorTransformationsOntoGeometry",
        "kind": "Function",
        "detail": "Pushes mirror Instance transformations onto the underlying geometry sharing referenced Histories as much as possible.",
        "insertText": "WSM.APIPushMirrorTransformationsOntoGeometry(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APIPushMirrorTransformationsOntoGeometry](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3ac7ad17f2f3cc768a5aec9efb7bee36)\n\n## Pushes mirror Instance transformations onto the underlying geometry sharing referenced Histories as much as possible.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APIRayFireReadOnly",
        "kind": "Function",
        "detail": "APIRayFireReadOnly calls WSM.APIRayFireReadOnly.",
        "insertText": "WSM.APIRayFireReadOnly(nHistoryID, line3dPickRay, dRayRadius, bVertices, bEdges, bFaces);",
        "documentation": {
            "value": "# [WSM.APIRayFireReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gadbc4997a662997cc60571981ecbb8871)\n\n## APIRayFireReadOnly calls WSM.APIRayFireReadOnly.\n\n## Parameters\n* nHistoryID\n* line3dPickRay\n* dRayRadius\n* bVertices\n* bEdges\n* bFaces\n"
        }
    },
    {
        "label": "WSM.APIRayFireSortedReadOnly",
        "kind": "Function",
        "detail": "APIRayFireSortedReadOnly calls WSM.APIRayFireReadOnly.",
        "insertText": "WSM.APIRayFireSortedReadOnly(nHistoryID, line3dPickRay, dRayRadius, bVertices, bEdges, bFaces, dMaxParam, bSearchInGroups, aIgnoreObjects);",
        "documentation": {
            "value": "# [WSM.APIRayFireSortedReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gabaf482c6f3f976cf8c55b5d9675cdcda)\n\n## APIRayFireSortedReadOnly calls WSM.APIRayFireReadOnly.\n\n## Parameters\n* nHistoryID\n* line3dPickRay\n* dRayRadius\n* bVertices\n* bEdges\n* bFaces\n* dMaxParam\n* bSearchInGroups\n* aIgnoreObjects\n"
        }
    },
    {
        "label": "WSM.APIRedoHistory",
        "kind": "Function",
        "detail": "APIRedoHistory redoes History.",
        "insertText": "WSM.APIRedoHistory(nHistoryID, nApplyOnDeltaID);",
        "documentation": {
            "value": "# [WSM.APIRedoHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga6e228044dab5d8a6b384a90e6e38d48a)\n\n## APIRedoHistory redoes History.\n\n## Parameters\n* nHistoryID\n* nApplyOnDeltaID\n"
        }
    },
    {
        "label": "WSM.APIRedoHistoryToDelta",
        "kind": "Function",
        "detail": "APIRedoHistoryToDelta redoes History.",
        "insertText": "WSM.APIRedoHistoryToDelta(nHistoryID, nDeltaID);",
        "documentation": {
            "value": "# [WSM.APIRedoHistoryToDelta](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gade1ae8024cae4bf56908e034c42ccb57)\n\n## APIRedoHistoryToDelta redoes History.\n\n## Parameters\n* nHistoryID\n* nDeltaID\n"
        }
    },
    {
        "label": "WSM.APIRegisterProgressCallbacksReadOnly",
        "kind": "Function",
        "detail": "Register API progress callback.",
        "insertText": "WSM.APIRegisterProgressCallbacksReadOnly(startCbkStr, progressCbkStr, finishCbkStr, progressIncrement, progressStart, progressEnd);",
        "documentation": {
            "value": "# [WSM.APIRegisterProgressCallbacksReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaa54ac0b15482942b065917cb1bab73da)\n\n## Register API progress callback.\n\n## Parameters\n* startCbkStr\n* progressCbkStr\n* finishCbkStr\n* progressIncrement\n* progressStart\n* progressEnd\n"
        }
    },
    {
        "label": "WSM.APIRemoveObjectsLayers",
        "kind": "Function",
        "insertText": "WSM.APIRemoveObjectsLayers();",
        "documentation": {
            "value": "# [WSM.APIRemoveObjectsLayers](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga13f1d9c1ab566f50488872b59c38b81f)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIRemoveSatelliteData",
        "kind": "Function",
        "detail": "APIRemoveSatelliteData removes satellite data from image object Parameters: In: nHistoryID, nImageID Out: JSON_UNDEFINED;.",
        "insertText": "WSM.APIRemoveSatelliteData(nHistoryID, nImageID);",
        "documentation": {
            "value": "# [WSM.APIRemoveSatelliteData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaf1baa54e1d8b3209d9c04fc147ec0d28)\n\n## APIRemoveSatelliteData removes satellite data from image object Parameters: In: nHistoryID, nImageID Out: JSON_UNDEFINED;.\n\n## Parameters\n* nHistoryID\n* nImageID\n"
        }
    },
    {
        "label": "WSM.APIReverseFaces",
        "kind": "Function",
        "insertText": "WSM.APIReverseFaces();",
        "documentation": {
            "value": "# [WSM.APIReverseFaces](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gadb398e8ab44d1db4e463e0f8e5f5e601)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIRotateFace",
        "kind": "Function",
        "detail": "APIRotateFace rotates face by given radian using default rotation axis.",
        "insertText": "WSM.APIRotateFace(nHistoryID, nFaceID, aRadian);",
        "documentation": {
            "value": "# [WSM.APIRotateFace](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga1a5b01fd685ccae36a2c5a7b62390b9c)\n\n## APIRotateFace rotates face by given radian using default rotation axis.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* aRadian\n"
        }
    },
    {
        "label": "WSM.APIRotateFaceBetweenPoints",
        "kind": "Function",
        "detail": "Rotates a Face between two given points Both points are projected into the face plane The angle of rotation is a radian from 0 to 2PI, determined by the angle counterclockwise from Vector(startPt-faceCenter) to Vector(endPt-faceCenter), with normal as the face's normal Parameters: In: nHistoryID, nFaceID, startPt, endPt Out: JSON_UNDEFINED;.",
        "insertText": "WSM.APIRotateFaceBetweenPoints(nHistoryID, nFaceID, startPt, endPt);",
        "documentation": {
            "value": "# [WSM.APIRotateFaceBetweenPoints](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga9587c64370af1391ef72d397289673bb)\n\n## Rotates a Face between two given points Both points are projected into the face plane The angle of rotation is a radian from 0 to 2PI, determined by the angle counterclockwise from Vector(startPt-faceCenter) to Vector(endPt-faceCenter), with normal as the face's normal Parameters: In: nHistoryID, nFaceID, startPt, endPt Out: JSON_UNDEFINED;.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* startPt\n* endPt\n"
        }
    },
    {
        "label": "WSM.APISaveAllActiveObjectsToBinaryFileReadOnly",
        "kind": "Function",
        "detail": "Save all active Objects to a binary file.",
        "insertText": "WSM.APISaveAllActiveObjectsToBinaryFileReadOnly(nHistoryID, sFilePath);",
        "documentation": {
            "value": "# [WSM.APISaveAllActiveObjectsToBinaryFileReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab09c08b5e68216beadae87579fbc6b65)\n\n## Save all active Objects to a binary file.\n\n## Parameters\n* nHistoryID\n* sFilePath\n"
        }
    },
    {
        "label": "WSM.APISaveDeltaToBinaryStringReadOnly",
        "kind": "Function",
        "detail": "APISaveDeltaToBinaryStringReadOnly Parameters: In: nHistoryID, [nDeltaID] Out: base64Str, deltaID.",
        "insertText": "WSM.APISaveDeltaToBinaryStringReadOnly(nHistoryID, nDeltaID);",
        "documentation": {
            "value": "# [WSM.APISaveDeltaToBinaryStringReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab8ffa2468cfd5552893e4041cd693884)\n\n## APISaveDeltaToBinaryStringReadOnly Parameters: In: nHistoryID, [nDeltaID] Out: base64Str, deltaID.\n\n## Parameters\n* nHistoryID\n* nDeltaID\n"
        }
    },
    {
        "label": "WSM.APISaveDeltaToSolidDefReadOnly",
        "kind": "Function",
        "detail": "Gets the changed, created, and deleted objects in the most recent delta and encodes this information in a solid-def JSON string so that solid-def stored in HFDM can be kept up to date.",
        "insertText": "WSM.APISaveDeltaToSolidDefReadOnly(nHistoryID, bForUndo, nHistoryID, bForUndo);",
        "documentation": {
            "value": "# [WSM.APISaveDeltaToSolidDefReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga50107330f7a83f3754f86df2bfe98e89)\n\n## Gets the changed, created, and deleted objects in the most recent delta and encodes this information in a solid-def JSON string so that solid-def stored in HFDM can be kept up to date.\n\n## Parameters\n* nHistoryID\n* bForUndo\n* nHistoryID\n* bForUndo\n"
        }
    },
    {
        "label": "WSM.APISaveHistoryToBinaryFileReadOnly",
        "kind": "Function",
        "detail": "Save the whole history (with all undo states) to a binary file.",
        "insertText": "WSM.APISaveHistoryToBinaryFileReadOnly(nHistoryID, sFilePath, aLayerDisplayedNegateVec);",
        "documentation": {
            "value": "# [WSM.APISaveHistoryToBinaryFileReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga4451180716e3049738810ba9216af31b)\n\n## Save the whole history (with all undo states) to a binary file.\n\n## Parameters\n* nHistoryID\n* sFilePath\n* aLayerDisplayedNegateVec\n"
        }
    },
    {
        "label": "WSM.APISaveHistoryToBinaryStringReadOnly",
        "kind": "Function",
        "detail": "Save the whole history (with all undo states) to a binary string.",
        "insertText": "WSM.APISaveHistoryToBinaryStringReadOnly(nHistoryID, bBase64Encode, aLayerDisplayedNegateVec);",
        "documentation": {
            "value": "# [WSM.APISaveHistoryToBinaryStringReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga9985bb4b7c3e4d871b5c381bdc5008de)\n\n## Save the whole history (with all undo states) to a binary string.\n\n## Parameters\n* nHistoryID\n* bBase64Encode\n* aLayerDisplayedNegateVec\n"
        }
    },
    {
        "label": "WSM.APISaveLastDeltaToBinaryFile",
        "kind": "Function",
        "detail": "Save last Delta and all changed Objects to a binary file.",
        "insertText": "WSM.APISaveLastDeltaToBinaryFile(nHistoryID, sFilePath);",
        "documentation": {
            "value": "# [WSM.APISaveLastDeltaToBinaryFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gafdd4978f9a836c71454302ed90a97122)\n\n## Save last Delta and all changed Objects to a binary file.\n\n## Parameters\n* nHistoryID\n* sFilePath\n"
        }
    },
    {
        "label": "WSM.APISaveToAXMFileReadOnly",
        "kind": "Function",
        "detail": "Saves Objects to an AXM file.",
        "insertText": "WSM.APISaveToAXMFileReadOnly(nHistoryID, aObjectIDs, sFilePath, aPreviewImage, bWithChildren, nHistoryID, aObjectIDs, sFilePath, aPreviewImage, bWithChildren);",
        "documentation": {
            "value": "# [WSM.APISaveToAXMFileReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga7f8f4e9ccadd88319c7af52d21cbae58)\n\n## Saves Objects to an AXM file.\n\n## Parameters\n* nHistoryID\n* aObjectIDs\n* sFilePath\n* aPreviewImage\n* bWithChildren\n* nHistoryID\n* aObjectIDs\n* sFilePath\n* aPreviewImage\n* bWithChildren\n"
        }
    },
    {
        "label": "WSM.APISaveToFileReadOnly",
        "kind": "Function",
        "insertText": "WSM.APISaveToFileReadOnly();",
        "documentation": {
            "value": "# [WSM.APISaveToFileReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaa460f8e3b57e2410baf677bd14d73c2a)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISaveToStringReadOnly",
        "kind": "Function",
        "insertText": "WSM.APISaveToStringReadOnly();",
        "documentation": {
            "value": "# [WSM.APISaveToStringReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga637a1a2f788d9f813221cbae70df5b9e)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIScaleFace",
        "kind": "Function",
        "detail": "Scales a Face by given scale factor, around its centroid.",
        "insertText": "WSM.APIScaleFace(nHistoryID, nFaceID, aScaleFactor);",
        "documentation": {
            "value": "# [WSM.APIScaleFace](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga1e3b046611c9db00fd1b267bbadf3fd9)\n\n## Scales a Face by given scale factor, around its centroid.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* aScaleFactor\n"
        }
    },
    {
        "label": "WSM.APISeparate",
        "kind": "Function",
        "detail": "APISeparate Parameters: In: nHistoryID, nBodyID Out: A vector of new Body IDs.",
        "insertText": "WSM.APISeparate(nHistoryID, nBodyID);",
        "documentation": {
            "value": "# [WSM.APISeparate](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gada31814b4889d19e3550342ef55e4d85)\n\n## APISeparate Parameters: In: nHistoryID, nBodyID Out: A vector of new Body IDs.\n\n## Parameters\n* nHistoryID\n* nBodyID\n"
        }
    },
    {
        "label": "WSM.APISetDynamoModelInformation",
        "kind": "Function",
        "detail": "APISetDynamoModelInformation sets Dynamo Model information of the history.",
        "insertText": "WSM.APISetDynamoModelInformation(nHistoryID, id, name, config, delta);",
        "documentation": {
            "value": "# [WSM.APISetDynamoModelInformation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaafa35fdf0e1a4931a528c605369432d3)\n\n## APISetDynamoModelInformation sets Dynamo Model information of the history.\n\n## Parameters\n* nHistoryID\n* id\n* name\n* config\n* delta\n"
        }
    },
    {
        "label": "WSM.APISetEdgesOrVerticesMarkedSmooth",
        "kind": "Function",
        "insertText": "WSM.APISetEdgesOrVerticesMarkedSmooth();",
        "documentation": {
            "value": "# [WSM.APISetEdgesOrVerticesMarkedSmooth](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaee317faa793088b043f86f92ca33ea4b)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISetEdgesStyle",
        "kind": "Function",
        "insertText": "WSM.APISetEdgesStyle();",
        "documentation": {
            "value": "# [WSM.APISetEdgesStyle](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga4e3befcbcfc16160b864229ddc61d16a)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISetFaceBacksideMaterial",
        "kind": "Function",
        "insertText": "WSM.APISetFaceBacksideMaterial();",
        "documentation": {
            "value": "# [WSM.APISetFaceBacksideMaterial](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad0165f2a6b96a73dea8bcdcca6964a35)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISetFaceUVDataAttributes",
        "kind": "Function",
        "insertText": "WSM.APISetFaceUVDataAttributes();",
        "documentation": {
            "value": "# [WSM.APISetFaceUVDataAttributes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga35a9eb3e348e939e1954142be9ce8f78)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISetImageData",
        "kind": "Function",
        "detail": "APISetImageData sets data to image object Parameters: In: nHistoryID, nImageID, sName, nTextureID, fAlphaValue, aCorners Out: JSON_UNDEFINED;.",
        "insertText": "WSM.APISetImageData(nHistoryID, nImageID, sName, nTextureID, fAlphaValue, bFeaturesVisible, aCornersVector);",
        "documentation": {
            "value": "# [WSM.APISetImageData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga539d59ab6bec1545e8b52b1812e2e410)\n\n## APISetImageData sets data to image object Parameters: In: nHistoryID, nImageID, sName, nTextureID, fAlphaValue, aCorners Out: JSON_UNDEFINED;.\n\n## Parameters\n* nHistoryID\n* nImageID\n* sName\n* nTextureID\n* fAlphaValue\n* bFeaturesVisible\n* aCornersVector\n"
        }
    },
    {
        "label": "WSM.APISetLayerData",
        "kind": "Function",
        "detail": "Set the data of a layer.",
        "insertText": "WSM.APISetLayerData(nHistoryID, nLayerID, name, bDisplayed);",
        "documentation": {
            "value": "# [WSM.APISetLayerData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga1513f472aea5f5afa36f111da480fb3d)\n\n## Set the data of a layer.\n\n## Parameters\n* nHistoryID\n* nLayerID\n* name\n* bDisplayed\n"
        }
    },
    {
        "label": "WSM.APISetLayersDisplayed",
        "kind": "Function",
        "insertText": "WSM.APISetLayersDisplayed();",
        "documentation": {
            "value": "# [WSM.APISetLayersDisplayed](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga01d5b44717675978f1d75f552385230d)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISetLevelsData",
        "kind": "Function",
        "insertText": "WSM.APISetLevelsData();",
        "documentation": {
            "value": "# [WSM.APISetLevelsData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga1479068cb5e49aeb535e1b232ae2c796)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISetLocalCoordinateSystem",
        "kind": "Function",
        "detail": "Set the LCS (local coordinate system) of the given History.",
        "insertText": "WSM.APISetLocalCoordinateSystem(nHistoryID, transf3d);",
        "documentation": {
            "value": "# [WSM.APISetLocalCoordinateSystem](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga976686c1fa7c1becb5e1a1775a1f73a0)\n\n## Set the LCS (local coordinate system) of the given History.\n\n## Parameters\n* nHistoryID\n* transf3d\n"
        }
    },
    {
        "label": "WSM.APISetMaterialColor",
        "kind": "Function",
        "detail": "APISetMaterialColor sets the color on a Material.",
        "insertText": "WSM.APISetMaterialColor(nHistoryID, nMaterialID, nColor);",
        "documentation": {
            "value": "# [WSM.APISetMaterialColor](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaa7d05daa2fa0998410e0ceafcb38ed27)\n\n## APISetMaterialColor sets the color on a Material.\n\n## Parameters\n* nHistoryID\n* nMaterialID\n* nColor\n"
        }
    },
    {
        "label": "WSM.APISetMaterialData",
        "kind": "Function",
        "detail": "APISetMaterialData sets all the data of a Material.",
        "insertText": "WSM.APISetMaterialData(nHistoryID, nMaterialID, nColor, dHorizontalScale, dVerticalScale, nTextureID, sMaterialName, sMaterialIdentifier, aAdditionalRenderData, aAdditionalTextures);",
        "documentation": {
            "value": "# [WSM.APISetMaterialData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga60227207046347eb1e68f37299added7)\n\n## APISetMaterialData sets all the data of a Material.\n\n## Parameters\n* nHistoryID\n* nMaterialID\n* nColor\n* dHorizontalScale\n* dVerticalScale\n* nTextureID\n* sMaterialName\n* sMaterialIdentifier\n* aAdditionalRenderData\n* aAdditionalTextures\n"
        }
    },
    {
        "label": "WSM.APISetMaterialTexture",
        "kind": "Function",
        "detail": "APISetMaterialTexture sets the texture properties on a Material.",
        "insertText": "WSM.APISetMaterialTexture(nHistoryID, nMaterialID, dHorizontalScale, dVerticalScale, nTextureID);",
        "documentation": {
            "value": "# [WSM.APISetMaterialTexture](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gabaf6cb8f7c84d353c277d4e81b8b9385)\n\n## APISetMaterialTexture sets the texture properties on a Material.\n\n## Parameters\n* nHistoryID\n* nMaterialID\n* dHorizontalScale\n* dVerticalScale\n* nTextureID\n"
        }
    },
    {
        "label": "WSM.APISetObjectProperties",
        "kind": "Function",
        "detail": "Sets the properties of a given object (Body): A name and if that particular body reports its area by level or not.",
        "insertText": "WSM.APISetObjectProperties(nHistoryID, nObjectID, sObjectName, bReportAreaByLevel, aDefaultLevelIDs);",
        "documentation": {
            "value": "# [WSM.APISetObjectProperties](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga4104d485265e3cc5ef802d319c8e8c4e)\n\n## Sets the properties of a given object (Body): A name and if that particular body reports its area by level or not.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* sObjectName\n* bReportAreaByLevel\n* aDefaultLevelIDs\n"
        }
    },
    {
        "label": "WSM.APISetObjectsLevels",
        "kind": "Function",
        "insertText": "WSM.APISetObjectsLevels();",
        "documentation": {
            "value": "# [WSM.APISetObjectsLevels](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0020e0c097a6a4122552a5ddf8dbc819)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISetObjectsMaterial",
        "kind": "Function",
        "insertText": "WSM.APISetObjectsMaterial();",
        "documentation": {
            "value": "# [WSM.APISetObjectsMaterial](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga9d7903f726e74fa0c53b403b07a2dc60)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISetRevitFamilyInformation",
        "kind": "Function",
        "detail": "APISetRevitFamilyInformation sets Revit Family information of the history.",
        "insertText": "WSM.APISetRevitFamilyInformation(nHistoryID, bIsGeneratedFromRFA, bIsGeneratedFromBuiltinRFA, familyCategory, familyReference, familyType, familyExtraData);",
        "documentation": {
            "value": "# [WSM.APISetRevitFamilyInformation](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga241da07d74138ba3264d6f1e92a115cc)\n\n## APISetRevitFamilyInformation sets Revit Family information of the history.\n\n## Parameters\n* nHistoryID\n* bIsGeneratedFromRFA\n* bIsGeneratedFromBuiltinRFA\n* familyCategory\n* familyReference\n* familyType\n* familyExtraData\n"
        }
    },
    {
        "label": "WSM.APISetSatelliteData",
        "kind": "Function",
        "detail": "APISetSatelliteData sets satellite data to image object Parameters: In: nHistoryID, nImageID, coordinates, coordinatesSpan, aPixelDim Out: JSON_UNDEFINED;.",
        "insertText": "WSM.APISetSatelliteData(nHistoryID, nImageID, coordinates, coordinatesSpan, aPixelDimensions);",
        "documentation": {
            "value": "# [WSM.APISetSatelliteData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gabcea81b8ae33684273831c0dcbca4d36)\n\n## APISetSatelliteData sets satellite data to image object Parameters: In: nHistoryID, nImageID, coordinates, coordinatesSpan, aPixelDim Out: JSON_UNDEFINED;.\n\n## Parameters\n* nHistoryID\n* nImageID\n* coordinates\n* coordinatesSpan\n* aPixelDimensions\n"
        }
    },
    {
        "label": "WSM.APISetStringAttributeValue",
        "kind": "Function",
        "detail": "Sets the value strings for a StringAttribute In: nHistoryID, nStringAttributeID, sValue.",
        "insertText": "WSM.APISetStringAttributeValue(nHistoryID, nStringAttributeID, sValue);",
        "documentation": {
            "value": "# [WSM.APISetStringAttributeValue](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga93acf7be8a57fa0ed1a4710dc96d6147)\n\n## Sets the value strings for a StringAttribute In: nHistoryID, nStringAttributeID, sValue.\n\n## Parameters\n* nHistoryID\n* nStringAttributeID\n* sValue\n"
        }
    },
    {
        "label": "WSM.APISetTextureData",
        "kind": "Function",
        "detail": "APISetTexture data sets the bitmap data on a texture Parameters: In: nHistoryID, nTextureID, sBitmapData, nBytes Out: JSON_UNDEFINED;.",
        "insertText": "WSM.APISetTextureData(nHistoryID, nTextureID, aBitmapData, bUseBitmapAlpha, sTextureName);",
        "documentation": {
            "value": "# [WSM.APISetTextureData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga244a6c48b41f2d3e7822e86d2a64fe13)\n\n## APISetTexture data sets the bitmap data on a texture Parameters: In: nHistoryID, nTextureID, sBitmapData, nBytes Out: JSON_UNDEFINED;.\n\n## Parameters\n* nHistoryID\n* nTextureID\n* aBitmapData\n* bUseBitmapAlpha\n* sTextureName\n"
        }
    },
    {
        "label": "WSM.APIShell",
        "kind": "Function",
        "detail": "APIShell shells the given Body by the specified distance.",
        "insertText": "WSM.APIShell(nHistoryID, nBodyID, dDistance, aOpenFaceIDs);",
        "documentation": {
            "value": "# [WSM.APIShell](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga9b58921aa7b6a8109e187e4479e8bbf7)\n\n## APIShell shells the given Body by the specified distance.\n\n## Parameters\n* nHistoryID\n* nBodyID\n* dDistance\n* aOpenFaceIDs\n"
        }
    },
    {
        "label": "WSM.APISlice",
        "kind": "Function",
        "detail": "APISlice When aIgnoreObjects is not empty, only objects that are not part of aIgnoreObjects are sliced.",
        "insertText": "WSM.APISlice(nHistoryID, nDestinationHistoryID, nObjectID, plane, aIgnoreObjects);",
        "documentation": {
            "value": "# [WSM.APISlice](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab0989887d0ffde2f56108c0d50344b11)\n\n## APISlice When aIgnoreObjects is not empty, only objects that are not part of aIgnoreObjects are sliced.\n\n## Parameters\n* nHistoryID\n* nDestinationHistoryID\n* nObjectID\n* plane\n* aIgnoreObjects\n"
        }
    },
    {
        "label": "WSM.APISplitAtNonManifoldEdgesAndVertices",
        "kind": "Function",
        "detail": "Changes the model so that every edge on more than two faces and every vertex with more than one edge group is copied so that these conditions no longer occur.",
        "insertText": "WSM.APISplitAtNonManifoldEdgesAndVertices(nHistoryID);",
        "documentation": {
            "value": "# [WSM.APISplitAtNonManifoldEdgesAndVertices](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaaaa4bb46fc34155802c645f34137ebdb)\n\n## Changes the model so that every edge on more than two faces and every vertex with more than one edge group is copied so that these conditions no longer occur.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.APISubtract",
        "kind": "Function",
        "detail": "APISubtract Parameters: In: nHistoryID, nObjectID1, nObjectID2 Out: JSON_UNDEFINED.",
        "insertText": "WSM.APISubtract(nHistoryID, nObjectID1, nObjectID2, aExtraObjectsIDs);",
        "documentation": {
            "value": "# [WSM.APISubtract](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga972c6a33efa3c5bd45710579abeb4a41)\n\n## APISubtract Parameters: In: nHistoryID, nObjectID1, nObjectID2 Out: JSON_UNDEFINED.\n\n## Parameters\n* nHistoryID\n* nObjectID1\n* nObjectID2\n* aExtraObjectsIDs\n"
        }
    },
    {
        "label": "WSM.APISubtractNonDestructive",
        "kind": "Function",
        "insertText": "WSM.APISubtractNonDestructive();",
        "documentation": {
            "value": "# [WSM.APISubtractNonDestructive](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3f2bd2e170b8f89b965e23da5a49fc69)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APISweep",
        "kind": "Function",
        "insertText": "WSM.APISweep();",
        "documentation": {
            "value": "# [WSM.APISweep](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab1e386e565a28100cd6bbe3ba83f1cc1)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APITaperFace",
        "kind": "Function",
        "detail": "Taper a Face by angle around the given axis The angle of rotation is a radian from -PI/2 to PI/2 The angle of rotation is relative to the direction of the axis and the normal of the face.",
        "insertText": "WSM.APITaperFace(nHistoryID, nFaceID, dRadians, axis);",
        "documentation": {
            "value": "# [WSM.APITaperFace](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga3ddffea9ddec91186f19ca00f59413fa)\n\n## Taper a Face by angle around the given axis The angle of rotation is a radian from -PI/2 to PI/2 The angle of rotation is relative to the direction of the axis and the normal of the face.\n\n## Parameters\n* nHistoryID\n* nFaceID\n* dRadians\n* axis\n"
        }
    },
    {
        "label": "WSM.APITransformObject",
        "kind": "Function",
        "detail": "APITransformObject transforms nObjectID by the given transform (transf3d).",
        "insertText": "WSM.APITransformObject(nHistoryID, nObjectID, transf3d);",
        "documentation": {
            "value": "# [WSM.APITransformObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad2d3397f094cb7c7a1170ec84508fac5)\n\n## APITransformObject transforms nObjectID by the given transform (transf3d).\n\n## Parameters\n* nHistoryID\n* nObjectID\n* transf3d\n"
        }
    },
    {
        "label": "WSM.APITransformObjects",
        "kind": "Function",
        "insertText": "WSM.APITransformObjects();",
        "documentation": {
            "value": "# [WSM.APITransformObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga4508feaa56d92040db0ede337d59695c)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIUndoHistory",
        "kind": "Function",
        "detail": "APIUndoHistory undoes History.",
        "insertText": "WSM.APIUndoHistory(nHistoryID, bAndDeleteRedo, nApplyOnDeltaID);",
        "documentation": {
            "value": "# [WSM.APIUndoHistory](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gabbec15e71171dd58a4c18d6c81e68323)\n\n## APIUndoHistory undoes History.\n\n## Parameters\n* nHistoryID\n* bAndDeleteRedo\n* nApplyOnDeltaID\n"
        }
    },
    {
        "label": "WSM.APIUndoHistoryToDelta",
        "kind": "Function",
        "detail": "APIUndoHistoryToDelta undoes History.",
        "insertText": "WSM.APIUndoHistoryToDelta(nHistoryID, nDeltaID);",
        "documentation": {
            "value": "# [WSM.APIUndoHistoryToDelta](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gab77959a13d48aa9923eca63cca7ff92b)\n\n## APIUndoHistoryToDelta undoes History.\n\n## Parameters\n* nHistoryID\n* nDeltaID\n"
        }
    },
    {
        "label": "WSM.APIUndoOrRedoHistoryToDelta",
        "kind": "Function",
        "detail": "Step backward or forward until the given Delta is reached.",
        "insertText": "WSM.APIUndoOrRedoHistoryToDelta(nHistoryID, nDeltaID, bAndDeleteRedo);",
        "documentation": {
            "value": "# [WSM.APIUndoOrRedoHistoryToDelta](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gad650f674b1f9b050edddcc741c8c1a92)\n\n## Step backward or forward until the given Delta is reached.\n\n## Parameters\n* nHistoryID\n* nDeltaID\n* bAndDeleteRedo\n"
        }
    },
    {
        "label": "WSM.APIUnite",
        "kind": "Function",
        "detail": "APIUnite Parameters: In: nHistoryID, nObjectID1, nObjectID2 Out: JSON_UNDEFINED.",
        "insertText": "WSM.APIUnite(nHistoryID, nObjectID1, nObjectID2, aExtraObjectsIDs);",
        "documentation": {
            "value": "# [WSM.APIUnite](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga4c0edd7394d4dd992ea79b3a14142557)\n\n## APIUnite Parameters: In: nHistoryID, nObjectID1, nObjectID2 Out: JSON_UNDEFINED.\n\n## Parameters\n* nHistoryID\n* nObjectID1\n* nObjectID2\n* aExtraObjectsIDs\n"
        }
    },
    {
        "label": "WSM.APIUniteNonDestructive",
        "kind": "Function",
        "insertText": "WSM.APIUniteNonDestructive();",
        "documentation": {
            "value": "# [WSM.APIUniteNonDestructive](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga1ed13972e0db0773ca7f65872e88c2b6)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.APIValidID",
        "kind": "Function",
        "detail": "APIValidID.",
        "insertText": "WSM.APIValidID(nID);",
        "documentation": {
            "value": "# [WSM.APIValidID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0a5d0a37ed9984d58da7a4acef161b42)\n\n## APIValidID.\n\n## Parameters\n* nID\n"
        }
    },
    {
        "label": "WSM.Color",
        "kind": "Function",
        "detail": "Color constructs a Color.",
        "insertText": "WSM.Color(r, g, b, a);",
        "documentation": {
            "value": "# [WSM.Color](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gadccb21d5dcd090cfb27a61eb8a65bb27)\n\n## Color constructs a Color.\n\n## Parameters\n* r\n* g\n* b\n* a\n"
        }
    },
    {
        "label": "WSM.ColorAreEqual",
        "kind": "Function",
        "detail": "ColorAreEqual returns true if the two given colors are equal.",
        "insertText": "WSM.ColorAreEqual(c1, c2);",
        "documentation": {
            "value": "# [WSM.ColorAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga0e430d1634d9a5c12e77fac27dbacb41)\n\n## ColorAreEqual returns true if the two given colors are equal.\n\n## Parameters\n* c1\n* c2\n"
        }
    },
    {
        "label": "WSM.FacetsBodyData",
        "kind": "Function",
        "detail": "GroupInstancePath creation method In: m_points, m_polygonIndices, m_polygonSmoothingIds, m_colors, m_polygonColorIndices, m_pointColors Out: FacetsBodyData.",
        "insertText": "WSM.FacetsBodyData(m_points, m_polygonIndices, m_polygonSmoothingIds, m_colors, m_polygonColorIndices, m_pointColors);",
        "documentation": {
            "value": "# [WSM.FacetsBodyData](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaab1eeee085d4e9a2e6c07c5105281190)\n\n## GroupInstancePath creation method In: m_points, m_polygonIndices, m_polygonSmoothingIds, m_colors, m_polygonColorIndices, m_pointColors Out: FacetsBodyData.\n\n## Parameters\n* m_points\n* m_polygonIndices\n* m_polygonSmoothingIds\n* m_colors\n* m_polygonColorIndices\n* m_pointColors\n"
        }
    },
    {
        "label": "WSM.GroupInstancePath",
        "kind": "Function",
        "insertText": "WSM.GroupInstancePath();",
        "documentation": {
            "value": "# [WSM.GroupInstancePath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gac95e73901dd8b0a9fc85ae7b052d804b)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.GroupInstancePathAreEqual",
        "kind": "Function",
        "insertText": "WSM.GroupInstancePathAreEqual();",
        "documentation": {
            "value": "# [WSM.GroupInstancePathAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga70c57f77154cd0d3ca534e75f74ded1c)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Is32Bit",
        "kind": "Function",
        "detail": "Is32Bit returns true if WSM is compiled in 32 bit.",
        "insertText": "WSM.Is32Bit();",
        "documentation": {
            "value": "# [WSM.Is32Bit](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga8a0b8bb624039fe1f4513f498366c5e3)\n\n## Is32Bit returns true if WSM is compiled in 32 bit.\n\n"
        }
    },
    {
        "label": "WSM.ObjectHistoryID",
        "kind": "Function",
        "insertText": "WSM.ObjectHistoryID();",
        "documentation": {
            "value": "# [WSM.ObjectHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#ga450d8b6eca684e619d537b810e6443ff)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.ObjectHistoryIDAreEqual",
        "kind": "Function",
        "detail": "ObjectHistoryIDAreEqual equals method In: ObjectID, ObjectID Out: bool.",
        "insertText": "WSM.ObjectHistoryIDAreEqual(id1, id2);",
        "documentation": {
            "value": "# [WSM.ObjectHistoryIDAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm.html#gaecef7eb2ef4363bc0fdf005644438431)\n\n## ObjectHistoryIDAreEqual equals method In: ObjectID, ObjectID Out: bool.\n\n## Parameters\n* id1\n* id2\n"
        }
    },
    {
        "label": "WSM.AppHelper.GetDisplayHistoryID",
        "kind": "Function",
        "detail": "Request the id of the top level history being displayed - app supplied.",
        "insertText": "WSM.AppHelper.GetDisplayHistoryID();",
        "documentation": {
            "value": "# [WSM.AppHelper.GetDisplayHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__apphelper.html#ga1fc501466170a3e3ddc05a0b555a40a6)\n\n## Request the id of the top level history being displayed - app supplied.\n\n"
        }
    },
    {
        "label": "WSM.AppHelper.GetHistoryID",
        "kind": "Function",
        "insertText": "WSM.AppHelper.GetHistoryID();",
        "documentation": {
            "value": "# [WSM.AppHelper.GetHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__apphelper.html#ga83414b93110d5ca59c957473761f3272)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.AppHelper.Initialize",
        "kind": "Function",
        "insertText": "WSM.AppHelper.Initialize();",
        "documentation": {
            "value": "# [WSM.AppHelper.Initialize](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__apphelper.html#gae93a20142a46a32550888d88b81509a1)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.AppHelper.NewModel",
        "kind": "Function",
        "detail": "NewModel deletes the History and creates a new History with the same History ID returned from GetDisplayHistoryID.",
        "insertText": "WSM.AppHelper.NewModel();",
        "documentation": {
            "value": "# [WSM.AppHelper.NewModel](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__apphelper.html#gabe55d7ef520c358f742e80c3639fc3d7)\n\n## NewModel deletes the History and creates a new History with the same History ID returned from GetDisplayHistoryID.\n\n"
        }
    },
    {
        "label": "WSM.Atf.APILoadWithATF",
        "kind": "Function",
        "detail": "APILoadWithATF() function.",
        "insertText": "WSM.Atf.APILoadWithATF(nHistoryID, sFilePath, eFileType, nOptions);",
        "documentation": {
            "value": "# [WSM.Atf.APILoadWithATF](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__atf.html#gaac0d14b5b67faf54e6849abcfee6e2e8)\n\n## APILoadWithATF() function.\n\n## Parameters\n* nHistoryID\n* sFilePath\n* eFileType\n* nOptions\n"
        }
    },
    {
        "label": "WSM.Atf.APITestAtfLoopBack",
        "kind": "Function",
        "insertText": "WSM.Atf.APITestAtfLoopBack();",
        "documentation": {
            "value": "# [WSM.Atf.APITestAtfLoopBack](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__atf.html#ga26a687d08e20893768466c0285d320ec)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Atf.APIWriteWithATF",
        "kind": "Function",
        "insertText": "WSM.Atf.APIWriteWithATF();",
        "documentation": {
            "value": "# [WSM.Atf.APIWriteWithATF](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__atf.html#gad77d4130a637a6b6e3065b82507ddd66)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Geom.Interval3d",
        "kind": "Function",
        "insertText": "WSM.Geom.Interval3d();",
        "documentation": {
            "value": "# [WSM.Geom.Interval3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga2cef7b8a15cece688c99f1765073d359)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Geom.Interval3dAreEqual",
        "kind": "Function",
        "detail": "Interval3dAreEqual determines if the two given points are equal.",
        "insertText": "WSM.Geom.Interval3dAreEqual(interval3d1, interval3d2);",
        "documentation": {
            "value": "# [WSM.Geom.Interval3dAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga374bcaaadb7e2a8100c9f9cecaacb1af)\n\n## Interval3dAreEqual determines if the two given points are equal.\n\n## Parameters\n* interval3d1\n* interval3d2\n"
        }
    },
    {
        "label": "WSM.Geom.InvertTransform",
        "kind": "Function",
        "detail": "Invert an existing transform Parameters: In: trans Out: inverted trans.",
        "insertText": "WSM.Geom.InvertTransform(trans);",
        "documentation": {
            "value": "# [WSM.Geom.InvertTransform](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gac6f2c0fe05a1b8f4b3c21af5ce46c883)\n\n## Invert an existing transform Parameters: In: trans Out: inverted trans.\n\n## Parameters\n* trans\n"
        }
    },
    {
        "label": "WSM.Geom.IsIdentityTransform",
        "kind": "Function",
        "detail": "Check whether a transform is the identity transform Parameters: In: trans Out: true if identity transform.",
        "insertText": "WSM.Geom.IsIdentityTransform(trans);",
        "documentation": {
            "value": "# [WSM.Geom.IsIdentityTransform](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga2a90bc669ca7c55346bd6be66bcf4962)\n\n## Check whether a transform is the identity transform Parameters: In: trans Out: true if identity transform.\n\n## Parameters\n* trans\n"
        }
    },
    {
        "label": "WSM.Geom.IsLine3d",
        "kind": "Function",
        "insertText": "WSM.Geom.IsLine3d();",
        "documentation": {
            "value": "# [WSM.Geom.IsLine3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gab9f5f8ebd827b7aac422b9f4778f6ce9)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Geom.IsPlane",
        "kind": "Function",
        "insertText": "WSM.Geom.IsPlane();",
        "documentation": {
            "value": "# [WSM.Geom.IsPlane](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga7605949e0796ea2134adfae9f86367b3)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Geom.IsPoint3d",
        "kind": "Function",
        "insertText": "WSM.Geom.IsPoint3d();",
        "documentation": {
            "value": "# [WSM.Geom.IsPoint3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gada0d52213877c4f5e59ce824014f0d9d)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Geom.IsTransf3d",
        "kind": "Function",
        "insertText": "WSM.Geom.IsTransf3d();",
        "documentation": {
            "value": "# [WSM.Geom.IsTransf3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga7a1536e07d08ed0cc90dedd317f65ffe)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Geom.IsVector3d",
        "kind": "Function",
        "insertText": "WSM.Geom.IsVector3d();",
        "documentation": {
            "value": "# [WSM.Geom.IsVector3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga2f6b0bb08749db390bfeadccd81c9db3)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Geom.Line3d",
        "kind": "Function",
        "insertText": "WSM.Geom.Line3d();",
        "documentation": {
            "value": "# [WSM.Geom.Line3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gaf660daef88b22705d6bc9ef4559e8257)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Geom.Line3dAreEqual",
        "kind": "Function",
        "detail": "Line3dAreEqual determines if the two given lines are equal.",
        "insertText": "WSM.Geom.Line3dAreEqual(line1, line2);",
        "documentation": {
            "value": "# [WSM.Geom.Line3dAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga8cc16cda38407b9ca2c95ebe06305952)\n\n## Line3dAreEqual determines if the two given lines are equal.\n\n## Parameters\n* line1\n* line2\n"
        }
    },
    {
        "label": "WSM.Geom.MakeRigidTransform",
        "kind": "Function",
        "detail": "Create a rigid transformation.",
        "insertText": "WSM.Geom.MakeRigidTransform(origin, xDir, yDir, zDir);",
        "documentation": {
            "value": "# [WSM.Geom.MakeRigidTransform](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga01d36da9031c5a9275867b30dfa7bca6)\n\n## Create a rigid transformation.\n\n## Parameters\n* origin\n* xDir\n* yDir\n* zDir\n"
        }
    },
    {
        "label": "WSM.Geom.MakeRotationTransform",
        "kind": "Function",
        "detail": "Create a transform for rotation Parameters: In: axis In: angle Out: transf3d.",
        "insertText": "WSM.Geom.MakeRotationTransform(axis, angle);",
        "documentation": {
            "value": "# [WSM.Geom.MakeRotationTransform](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gaad6892eb90cfacd15779600a7c6cc058)\n\n## Create a transform for rotation Parameters: In: axis In: angle Out: transf3d.\n\n## Parameters\n* axis\n* angle\n"
        }
    },
    {
        "label": "WSM.Geom.MakeScalingTransform",
        "kind": "Function",
        "detail": "Create a transform for scaling Parameters: In: scaleCenter In: factorVec (x, y, z scaling factors) Out: transf3d.",
        "insertText": "WSM.Geom.MakeScalingTransform(scaleCenter, factorVec);",
        "documentation": {
            "value": "# [WSM.Geom.MakeScalingTransform](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gaae106a4d416270c5330199d2c20421a2)\n\n## Create a transform for scaling Parameters: In: scaleCenter In: factorVec (x, y, z scaling factors) Out: transf3d.\n\n## Parameters\n* scaleCenter\n* factorVec\n"
        }
    },
    {
        "label": "WSM.Geom.Plane",
        "kind": "Function",
        "detail": "Plane constructs a Plane.",
        "insertText": "WSM.Geom.Plane(pt, normal);",
        "documentation": {
            "value": "# [WSM.Geom.Plane](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga8927be8e8b4f869266f22b03f3d25324)\n\n## Plane constructs a Plane.\n\n## Parameters\n* pt\n* normal\n"
        }
    },
    {
        "label": "WSM.Geom.PlaneAreEqual",
        "kind": "Function",
        "detail": "PlaneAreEqual determines if the two given Vectors are equal.",
        "insertText": "WSM.Geom.PlaneAreEqual(plane1, plane2);",
        "documentation": {
            "value": "# [WSM.Geom.PlaneAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gaa81a931e059b55d62acdc9998d1e75c7)\n\n## PlaneAreEqual determines if the two given Vectors are equal.\n\n## Parameters\n* plane1\n* plane2\n"
        }
    },
    {
        "label": "WSM.Geom.Point2d",
        "kind": "Function",
        "detail": "Point2d constructs a Point2d.",
        "insertText": "WSM.Geom.Point2d(x, y);",
        "documentation": {
            "value": "# [WSM.Geom.Point2d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga67c24eae073ccde173cc9c3f1ab7a26b)\n\n## Point2d constructs a Point2d.\n\n## Parameters\n* x\n* y\n"
        }
    },
    {
        "label": "WSM.Geom.Point2dAreEqual",
        "kind": "Function",
        "detail": "Point2dAreEqual determines if the two given points are equal.",
        "insertText": "WSM.Geom.Point2dAreEqual(pt1, pt2);",
        "documentation": {
            "value": "# [WSM.Geom.Point2dAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga2c31e7733ed13706b0dcb53423b2712f)\n\n## Point2dAreEqual determines if the two given points are equal.\n\n## Parameters\n* pt1\n* pt2\n"
        }
    },
    {
        "label": "WSM.Geom.Point3d",
        "kind": "Function",
        "detail": "Point3d constructs a Point3d.",
        "insertText": "WSM.Geom.Point3d(x, y, z);",
        "documentation": {
            "value": "# [WSM.Geom.Point3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga9257cba6d00dfc2245702a2fc701db4f)\n\n## Point3d constructs a Point3d.\n\n## Parameters\n* x\n* y\n* z\n"
        }
    },
    {
        "label": "WSM.Geom.Point3dAreEqual",
        "kind": "Function",
        "detail": "Point3dAreEqual determines if the two given points are equal.",
        "insertText": "WSM.Geom.Point3dAreEqual(pt1, pt2);",
        "documentation": {
            "value": "# [WSM.Geom.Point3dAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga1ff8a1386c53d3d3ea3c595e3106a196)\n\n## Point3dAreEqual determines if the two given points are equal.\n\n## Parameters\n* pt1\n* pt2\n"
        }
    },
    {
        "label": "WSM.Geom.Transf3d",
        "kind": "Function",
        "insertText": "WSM.Geom.Transf3d();",
        "documentation": {
            "value": "# [WSM.Geom.Transf3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gaad9b8a5a1706b1f8b93d8d98839e56a6)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Geom.Transf3dAreEqual",
        "kind": "Function",
        "detail": "Transf3dAreEqual tests if the two given Trans3ds are equal.",
        "insertText": "WSM.Geom.Transf3dAreEqual(trans1, trans2);",
        "documentation": {
            "value": "# [WSM.Geom.Transf3dAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga30dfdf51baf02549ea56398ee685415c)\n\n## Transf3dAreEqual tests if the two given Trans3ds are equal.\n\n## Parameters\n* trans1\n* trans2\n"
        }
    },
    {
        "label": "WSM.Geom.TranslateTransform",
        "kind": "Function",
        "detail": "Translate an existing transform by moveVec Parameters: In: trans In: moveVec Out: trans (translated by moveVec)",
        "insertText": "WSM.Geom.TranslateTransform(trans, moveVec);",
        "documentation": {
            "value": "# [WSM.Geom.TranslateTransform](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gaa72657e114543ea552fe51f93011f0e9)\n\n## Translate an existing transform by moveVec Parameters: In: trans In: moveVec Out: trans (translated by moveVec)\n\n## Parameters\n* trans\n* moveVec\n"
        }
    },
    {
        "label": "WSM.Geom.UnitVector3d",
        "kind": "Function",
        "detail": "UnitVector3d constructs a UnitVector3d.",
        "insertText": "WSM.Geom.UnitVector3d(x, y, z);",
        "documentation": {
            "value": "# [WSM.Geom.UnitVector3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#gab90ffc21e88814b1cd26106cd8d9cf3f)\n\n## UnitVector3d constructs a UnitVector3d.\n\n## Parameters\n* x\n* y\n* z\n"
        }
    },
    {
        "label": "WSM.Geom.UnitVector3dAreEqual",
        "kind": "Function",
        "detail": "UnitVector3dAreEqual determines if the two given Vectors are equal.",
        "insertText": "WSM.Geom.UnitVector3dAreEqual(v1, v2);",
        "documentation": {
            "value": "# [WSM.Geom.UnitVector3dAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga6b1e31ec04d404dc2faca064dff1e36a)\n\n## UnitVector3dAreEqual determines if the two given Vectors are equal.\n\n## Parameters\n* v1\n* v2\n"
        }
    },
    {
        "label": "WSM.Geom.Vector2d",
        "kind": "Function",
        "detail": "Vector2d constructs a Vector2d.",
        "insertText": "WSM.Geom.Vector2d(x, y);",
        "documentation": {
            "value": "# [WSM.Geom.Vector2d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga4889b61a4c8a6ae1824f41274b0016db)\n\n## Vector2d constructs a Vector2d.\n\n## Parameters\n* x\n* y\n"
        }
    },
    {
        "label": "WSM.Geom.Vector2dAreEqual",
        "kind": "Function",
        "detail": "Vector2dAreEqual determines if the two given Vectors are equal.",
        "insertText": "WSM.Geom.Vector2dAreEqual(v1, v2);",
        "documentation": {
            "value": "# [WSM.Geom.Vector2dAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga6ca20e88d1fe2e3ed8b1db37899434f2)\n\n## Vector2dAreEqual determines if the two given Vectors are equal.\n\n## Parameters\n* v1\n* v2\n"
        }
    },
    {
        "label": "WSM.Geom.Vector3d",
        "kind": "Function",
        "detail": "Vector3d constructs a Vector3d.",
        "insertText": "WSM.Geom.Vector3d(x, y, z);",
        "documentation": {
            "value": "# [WSM.Geom.Vector3d](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga4beaefb4738741444d8b9fc662dec97d)\n\n## Vector3d constructs a Vector3d.\n\n## Parameters\n* x\n* y\n* z\n"
        }
    },
    {
        "label": "WSM.Geom.Vector3dAreEqual",
        "kind": "Function",
        "detail": "Vector3dAreEqual determines if the two given Vectors are equal.",
        "insertText": "WSM.Geom.Vector3dAreEqual(v1, v2);",
        "documentation": {
            "value": "# [WSM.Geom.Vector3dAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__geom.html#ga81c713a28ee0fb26d5f47d4b3979b78c)\n\n## Vector3dAreEqual determines if the two given Vectors are equal.\n\n## Parameters\n* v1\n* v2\n"
        }
    },
    {
        "label": "WSM.GroupInstancePath.AppendObjectHistoryID",
        "kind": "Function",
        "detail": "AppendObjectHistoryID appends the given ObjectHistoryID to the end of the GroupInstancePath In: groupInstancePath, ObjectID Out: bool.",
        "insertText": "WSM.GroupInstancePath.AppendObjectHistoryID(groupInstancePath, nObjectID);",
        "documentation": {
            "value": "# [WSM.GroupInstancePath.AppendObjectHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__groupinstancepath.html#gaffe14a2f2f2d75c7ba884068d11b4fd8)\n\n## AppendObjectHistoryID appends the given ObjectHistoryID to the end of the GroupInstancePath In: groupInstancePath, ObjectID Out: bool.\n\n## Parameters\n* groupInstancePath\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.GroupInstancePath.AreEqual",
        "kind": "Function",
        "insertText": "WSM.GroupInstancePath.AreEqual();",
        "documentation": {
            "value": "# [WSM.GroupInstancePath.AreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__groupinstancepath.html#ga22c2a30a997b9d5ddff65d8ae92eb911)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.GroupInstancePath.GetFinalObjectHistoryID",
        "kind": "Function",
        "detail": "GetFinalObjectHistoryID returns the final ObjectHistoryID from the path.",
        "insertText": "WSM.GroupInstancePath.GetFinalObjectHistoryID(groupInstancePath);",
        "documentation": {
            "value": "# [WSM.GroupInstancePath.GetFinalObjectHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__groupinstancepath.html#gab72283dba8ce68db455148e36152f31c)\n\n## GetFinalObjectHistoryID returns the final ObjectHistoryID from the path.\n\n## Parameters\n* groupInstancePath\n"
        }
    },
    {
        "label": "WSM.GroupInstancePath.GetObjectTransform",
        "kind": "Function",
        "detail": "GetObjectTransform returns a transform that accounts for the instance transforms, if any.",
        "insertText": "WSM.GroupInstancePath.GetObjectTransform(groupInstancePath);",
        "documentation": {
            "value": "# [WSM.GroupInstancePath.GetObjectTransform](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__groupinstancepath.html#gabe871903c868389a939b91b71041ae28)\n\n## GetObjectTransform returns a transform that accounts for the instance transforms, if any.\n\n## Parameters\n* groupInstancePath\n"
        }
    },
    {
        "label": "WSM.GroupInstancePath.GetTopObjectHistoryID",
        "kind": "Function",
        "detail": "GetTopObjectHistoryID returns the top ObjectHistoryID from the path.",
        "insertText": "WSM.GroupInstancePath.GetTopObjectHistoryID(groupInstancePath);",
        "documentation": {
            "value": "# [WSM.GroupInstancePath.GetTopObjectHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__groupinstancepath.html#ga9850fded133b4655c2e243ccee089cb2)\n\n## GetTopObjectHistoryID returns the top ObjectHistoryID from the path.\n\n## Parameters\n* groupInstancePath\n"
        }
    },
    {
        "label": "WSM.GroupInstancePath.IsPrefixOf",
        "kind": "Function",
        "detail": "IsPrefixOf returns true if path1 path is a strict prefix of path2.",
        "insertText": "WSM.GroupInstancePath.IsPrefixOf(path1, path2);",
        "documentation": {
            "value": "# [WSM.GroupInstancePath.IsPrefixOf](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__groupinstancepath.html#ga1e6a501492ece8d4ce0fadad422fe0b1)\n\n## IsPrefixOf returns true if path1 path is a strict prefix of path2.\n\n## Parameters\n* path1\n* path2\n"
        }
    },
    {
        "label": "WSM.GroupInstancePath.IsValid",
        "kind": "Function",
        "insertText": "WSM.GroupInstancePath.IsValid();",
        "documentation": {
            "value": "# [WSM.GroupInstancePath.IsValid](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__groupinstancepath.html#ga1a815a44376baacf657ccfa351e9d19d)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.AddLineInference",
        "kind": "Function",
        "detail": "AddLineInference adds a custom line inference.",
        "insertText": "WSM.InferenceEngine.AddLineInference(inference);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.AddLineInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gabed7f76d1fb505066de3bd98eb1cfc7a)\n\n## AddLineInference adds a custom line inference.\n\n## Parameters\n* inference\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.AddLineInferencesForObject",
        "kind": "Function",
        "detail": "AddLineInferencesForObject- Add line inferences for every Edge associated with the given GroupInstancePath.",
        "insertText": "WSM.InferenceEngine.AddLineInferencesForObject(groupInstancePath);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.AddLineInferencesForObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga23e5aa1effdd6e4e06b92297c64041a0)\n\n## AddLineInferencesForObject- Add line inferences for every Edge associated with the given GroupInstancePath.\n\n## Parameters\n* groupInstancePath\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.AddPlaneInference",
        "kind": "Function",
        "detail": "AddPlaneInference adds a custom plane inference.",
        "insertText": "WSM.InferenceEngine.AddPlaneInference(inference);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.AddPlaneInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gad56c23f03642539c55439b09ddd086d6)\n\n## AddPlaneInference adds a custom plane inference.\n\n## Parameters\n* inference\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.AddPointInference",
        "kind": "Function",
        "detail": "AddPointInference adds a custom point inference.",
        "insertText": "WSM.InferenceEngine.AddPointInference(inference);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.AddPointInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga817d50d0eee79d3fe11cdf01ae730cd1)\n\n## AddPointInference adds a custom point inference.\n\n## Parameters\n* inference\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.ClearCustomLineInferences",
        "kind": "Function",
        "detail": "ClearCustomLineInferences clears all custom line inferences Parameters: In: Out: JSON_UNDEFINED.",
        "insertText": "WSM.InferenceEngine.ClearCustomLineInferences();",
        "documentation": {
            "value": "# [WSM.InferenceEngine.ClearCustomLineInferences](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gad2455fffaf455c404ad78f4b1eb3dd82)\n\n## ClearCustomLineInferences clears all custom line inferences Parameters: In: Out: JSON_UNDEFINED.\n\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.ClearCustomPlaneInference",
        "kind": "Function",
        "detail": "ClearCustomPlaneInference clears the custom plane inference Parameters: In: Out: JSON_UNDEFINED.",
        "insertText": "WSM.InferenceEngine.ClearCustomPlaneInference();",
        "documentation": {
            "value": "# [WSM.InferenceEngine.ClearCustomPlaneInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga6300ef5fb8da0c643469cf191b1d25a6)\n\n## ClearCustomPlaneInference clears the custom plane inference Parameters: In: Out: JSON_UNDEFINED.\n\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.ClearCustomPointInferences",
        "kind": "Function",
        "detail": "ClearCustomPointInferences clears all custom point inferences Parameters: In: Out: JSON_UNDEFINED.",
        "insertText": "WSM.InferenceEngine.ClearCustomPointInferences();",
        "documentation": {
            "value": "# [WSM.InferenceEngine.ClearCustomPointInferences](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gaa29de21433a860459d12defd81f58b8f)\n\n## ClearCustomPointInferences clears all custom point inferences Parameters: In: Out: JSON_UNDEFINED.\n\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.ClearIgnoreObjects",
        "kind": "Function",
        "detail": "ClearIgnoreObjects- Clear the ignored objects set.",
        "insertText": "WSM.InferenceEngine.ClearIgnoreObjects();",
        "documentation": {
            "value": "# [WSM.InferenceEngine.ClearIgnoreObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga2a112707fcc4d2481263efe0e4edc493)\n\n## ClearIgnoreObjects- Clear the ignored objects set.\n\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.DisableHoveredInferences",
        "kind": "Function",
        "detail": "DisableHoveredInferences is a way to permanently disable line inferences.",
        "insertText": "WSM.InferenceEngine.DisableHoveredInferences(disable);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.DisableHoveredInferences](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga9c77ef995107f5243a0b1a1025eff45c)\n\n## DisableHoveredInferences is a way to permanently disable line inferences.\n\n## Parameters\n* disable\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.FindInputPoint",
        "kind": "Function",
        "detail": "FindInputPoint Parameters: In: pickRay, previousInputPoint Out: InputPoint.",
        "insertText": "WSM.InferenceEngine.FindInputPoint(pickRay, previousInputPoint, pickRay, previousInputPoint);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.FindInputPoint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga18176be3ec53e00aa83c205a4a427f4f)\n\n## FindInputPoint Parameters: In: pickRay, previousInputPoint Out: InputPoint.\n\n## Parameters\n* pickRay\n* previousInputPoint\n* pickRay\n* previousInputPoint\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.HaveLockedInference",
        "kind": "Function",
        "detail": "HaveLockedInference checkes whether there is a locked inference.",
        "insertText": "WSM.InferenceEngine.HaveLockedInference();",
        "documentation": {
            "value": "# [WSM.InferenceEngine.HaveLockedInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga27f592fe54833f20f5f36a3706d96a75)\n\n## HaveLockedInference checkes whether there is a locked inference.\n\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.IgnoreObject",
        "kind": "Function",
        "detail": "IgnoreObject- Add given object to the ignored objects set.",
        "insertText": "WSM.InferenceEngine.IgnoreObject(nObjectID, andChildren);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.IgnoreObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga78e79a285cd4c99bd54a769d39d62459)\n\n## IgnoreObject- Add given object to the ignored objects set.\n\n## Parameters\n* nObjectID\n* andChildren\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.InputPoint",
        "kind": "Function",
        "detail": "InputPoint- Constructor for an InputPoint object Parameters: In: point3d Out: InputPoint.",
        "insertText": "WSM.InferenceEngine.InputPoint(point3d);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.InputPoint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gaa6b58228a962170853abafacfc4e8e25)\n\n## InputPoint- Constructor for an InputPoint object Parameters: In: point3d Out: InputPoint.\n\n## Parameters\n* point3d\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.InputPointsAreEqual",
        "kind": "Function",
        "detail": "InputPointsEqual Parameters: In: inputPoint1, inputPoint2 Out: bool.",
        "insertText": "WSM.InferenceEngine.InputPointsAreEqual(inputPoint1, inputPoint2);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.InputPointsAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gafc80196353791f9e831cc56ea7e20b0d)\n\n## InputPointsEqual Parameters: In: inputPoint1, inputPoint2 Out: bool.\n\n## Parameters\n* inputPoint1\n* inputPoint2\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.LineInference",
        "kind": "Function",
        "detail": "LineInference- Constructor for a line inference object Parameters: In: line3d In: LineInferenceType Out: line inference.",
        "insertText": "WSM.InferenceEngine.LineInference(line3d, lineInferenceType);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.LineInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gae9701f2e94c1bc6d21bdb7f6cd955154)\n\n## LineInference- Constructor for a line inference object Parameters: In: line3d In: LineInferenceType Out: line inference.\n\n## Parameters\n* line3d\n* lineInferenceType\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.LockInference",
        "kind": "Function",
        "detail": "LockInference will cause the InputPointFinder to constrain the resulting InputPoint that it finds to the given Inference.",
        "insertText": "WSM.InferenceEngine.LockInference(inference);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.LockInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gad5476b772bc985e6d6a8947d490d4244)\n\n## LockInference will cause the InputPointFinder to constrain the resulting InputPoint that it finds to the given Inference.\n\n## Parameters\n* inference\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.PointInference",
        "kind": "Function",
        "detail": "PointInference- Constructor for a point inference object Parameters: In: point3d Out: point inference.",
        "insertText": "WSM.InferenceEngine.PointInference(point3d);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.PointInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga99703a54e820911932fe4d195c5eb6b1)\n\n## PointInference- Constructor for a point inference object Parameters: In: point3d Out: point inference.\n\n## Parameters\n* point3d\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.PushHoveredLineInference",
        "kind": "Function",
        "detail": "PushHoveredLineInference pushes the given lineInf onto the stack of hovered line inferences.",
        "insertText": "WSM.InferenceEngine.PushHoveredLineInference(inference);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.PushHoveredLineInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga787aedba368a4d5069336cbb187adee8)\n\n## PushHoveredLineInference pushes the given lineInf onto the stack of hovered line inferences.\n\n## Parameters\n* inference\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.PushHoveredPointInference",
        "kind": "Function",
        "detail": "PushHoveredPointInference pushes the given ptInf onto the stack of hovered point inferences.",
        "insertText": "WSM.InferenceEngine.PushHoveredPointInference(inference);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.PushHoveredPointInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga783bd98255d89726d8c5c02dc4a84f11)\n\n## PushHoveredPointInference pushes the given ptInf onto the stack of hovered point inferences.\n\n## Parameters\n* inference\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.ReleaseLockedInference",
        "kind": "Function",
        "detail": "ReleaseLockedInference clears the locked Inference.",
        "insertText": "WSM.InferenceEngine.ReleaseLockedInference();",
        "documentation": {
            "value": "# [WSM.InferenceEngine.ReleaseLockedInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga62ecf72d4e855112f8f3338eaef0fcde)\n\n## ReleaseLockedInference clears the locked Inference.\n\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.Reset",
        "kind": "Function",
        "detail": "Reset Parameters: In: Out: JSON.",
        "insertText": "WSM.InferenceEngine.Reset();",
        "documentation": {
            "value": "# [WSM.InferenceEngine.Reset](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga5a907ab0655f7f6e9a02edfc907a01fd)\n\n## Reset Parameters: In: Out: JSON.\n\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.SetHoveredInferencesEnabled",
        "kind": "Function",
        "detail": "SetHoveredInferencesEnabled disables hovered inferences until Reset is called.",
        "insertText": "WSM.InferenceEngine.SetHoveredInferencesEnabled(enabled);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.SetHoveredInferencesEnabled](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga22ecbb9139ec6185d63ffb646135ffd2)\n\n## SetHoveredInferencesEnabled disables hovered inferences until Reset is called.\n\n## Parameters\n* enabled\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.SetUseExternalInputPointFinder",
        "kind": "Function",
        "detail": "SetUseExternalInputPointFinder- Set the flag to control using the external input point finder.",
        "insertText": "WSM.InferenceEngine.SetUseExternalInputPointFinder(use);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.SetUseExternalInputPointFinder](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gaacfee572b4c1b0f6251ec2afe570534c)\n\n## SetUseExternalInputPointFinder- Set the flag to control using the external input point finder.\n\n## Parameters\n* use\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.SetUseExternalInputPointFinderForTesting",
        "kind": "Function",
        "detail": "SetUseExternalInputPointFinderForTesting- Set the flag to control using the external input point finder.",
        "insertText": "WSM.InferenceEngine.SetUseExternalInputPointFinderForTesting(use);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.SetUseExternalInputPointFinderForTesting](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga8794a6aa0a2a6bd9cdb4a061b5800a5e)\n\n## SetUseExternalInputPointFinderForTesting- Set the flag to control using the external input point finder.\n\n## Parameters\n* use\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.SetVertexSnappingOnSplines",
        "kind": "Function",
        "detail": "SetVertexSnappingOnSplines- Set the flag to control turning on / off Vertex snapping on curves.",
        "insertText": "WSM.InferenceEngine.SetVertexSnappingOnSplines(snap);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.SetVertexSnappingOnSplines](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#ga32f8a5202b01557bb8db378c1a3aba41)\n\n## SetVertexSnappingOnSplines- Set the flag to control turning on / off Vertex snapping on curves.\n\n## Parameters\n* snap\n"
        }
    },
    {
        "label": "WSM.InferenceEngine.UseAsObscuringObject",
        "kind": "Function",
        "detail": "UseAsObscuringObject- This, unlike ignoreObject, will not use picks against this object, but it will also not try to pick farther into the scene, defaulting to the ground plane after a hit Parameters: In: nObjectID (size_t) In: andChildren (bool) Out: JSON_UNDEFINED.",
        "insertText": "WSM.InferenceEngine.UseAsObscuringObject(nObjectID, andChildren);",
        "documentation": {
            "value": "# [WSM.InferenceEngine.UseAsObscuringObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__inferenceengine.html#gad57718268aea6d9f473fefafed359256)\n\n## UseAsObscuringObject- This, unlike ignoreObject, will not use picks against this object, but it will also not try to pick farther into the scene, defaulting to the ground plane after a hit Parameters: In: nObjectID (size_t) In: andChildren (bool) Out: JSON_UNDEFINED.\n\n## Parameters\n* nObjectID\n* andChildren\n"
        }
    },
    {
        "label": "WSM.RenderHelper.APIGetEdgesRenderDataReadOnly",
        "kind": "Function",
        "detail": "APIGetEdgesRenderDataReadOnly() function.",
        "insertText": "WSM.RenderHelper.APIGetEdgesRenderDataReadOnly(historyID, edgeIDs, includeSmooth);",
        "documentation": {
            "value": "# [WSM.RenderHelper.APIGetEdgesRenderDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__renderhelper.html#gad002cac4576c4bfe56878716ca006cc6)\n\n## APIGetEdgesRenderDataReadOnly() function.\n\n## Parameters\n* historyID\n* edgeIDs\n* includeSmooth\n"
        }
    },
    {
        "label": "WSM.RenderHelper.APIGetFacesRenderDataReadOnly",
        "kind": "Function",
        "detail": "APIGetFacesRenderDataReadOnly() function.",
        "insertText": "WSM.RenderHelper.APIGetFacesRenderDataReadOnly(historyID, faceIDs);",
        "documentation": {
            "value": "# [WSM.RenderHelper.APIGetFacesRenderDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__renderhelper.html#gaec9ac2685e761740c354357038af146f)\n\n## APIGetFacesRenderDataReadOnly() function.\n\n## Parameters\n* historyID\n* faceIDs\n"
        }
    },
    {
        "label": "WSM.RenderHelper.APIGetObjectFacesRenderDataReadOnly",
        "kind": "Function",
        "detail": "APIGetObjectFacesRenderDataReadOnly() function.",
        "insertText": "WSM.RenderHelper.APIGetObjectFacesRenderDataReadOnly(historyID, objectID);",
        "documentation": {
            "value": "# [WSM.RenderHelper.APIGetObjectFacesRenderDataReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__renderhelper.html#ga9de3ec225f9a936c2258e7af51a9cc01)\n\n## APIGetObjectFacesRenderDataReadOnly() function.\n\n## Parameters\n* historyID\n* objectID\n"
        }
    },
    {
        "label": "WSM.Sat.APILoadSatFile",
        "kind": "Function",
        "insertText": "WSM.Sat.APILoadSatFile();",
        "documentation": {
            "value": "# [WSM.Sat.APILoadSatFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__sat.html#ga703c8c074199a22a2bdfbc1958c8319e)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Skup.APIReadSketchupFile",
        "kind": "Function",
        "insertText": "WSM.Skup.APIReadSketchupFile();",
        "documentation": {
            "value": "# [WSM.Skup.APIReadSketchupFile](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__skup.html#ga5dc03b69d9de67030f30ccdcd9341824)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Tools.APICameraChanged",
        "kind": "Function",
        "detail": "APICameraChanged() function.",
        "insertText": "WSM.Tools.APICameraChanged(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APICameraChanged](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gaa170cb5c836bd42d4bde300bbeed16ce)\n\n## APICameraChanged() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APICreateGeometry",
        "kind": "Function",
        "detail": "APICreateGeometry() function.",
        "insertText": "WSM.Tools.APICreateGeometry(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APICreateGeometry](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gaff642e9ceb09fdb6e7f6cd26f6702c07)\n\n## APICreateGeometry() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APICreateTool",
        "kind": "Function",
        "detail": "APICreateTool() function.",
        "insertText": "WSM.Tools.APICreateTool(nType, toolArgs);",
        "documentation": {
            "value": "# [WSM.Tools.APICreateTool](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga7050351d4a12cf0dfef3b61b0a535ff3)\n\n## APICreateTool() function.\n\n## Parameters\n* nType\n* toolArgs\n"
        }
    },
    {
        "label": "WSM.Tools.APIDestroyTool",
        "kind": "Function",
        "detail": "APIDestroyTool() function.",
        "insertText": "WSM.Tools.APIDestroyTool(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APIDestroyTool](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gad4a5322be27d0d7d0c750765bbc3bb27)\n\n## APIDestroyTool() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APIFinalize",
        "kind": "Function",
        "detail": "APIFinalize() function.",
        "insertText": "WSM.Tools.APIFinalize(nToolID, pickray);",
        "documentation": {
            "value": "# [WSM.Tools.APIFinalize](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gafe042273b42236036630d0a6326f430a)\n\n## APIFinalize() function.\n\n## Parameters\n* nToolID\n* pickray\n"
        }
    },
    {
        "label": "WSM.Tools.APIGetAllLiveToolsReadOnly",
        "kind": "Function",
        "detail": "APIGetAllLiveToolsReadOnly() function.",
        "insertText": "WSM.Tools.APIGetAllLiveToolsReadOnly();",
        "documentation": {
            "value": "# [WSM.Tools.APIGetAllLiveToolsReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga25416275f42fb3914a9da191b3f22466)\n\n## APIGetAllLiveToolsReadOnly() function.\n\n"
        }
    },
    {
        "label": "WSM.Tools.APIGetCurrentPointReadOnly",
        "kind": "Function",
        "detail": "APIGetCurrentPointReadOnly() function.",
        "insertText": "WSM.Tools.APIGetCurrentPointReadOnly(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APIGetCurrentPointReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga29324d7e290d1499cfa4cf9dcfae0cc7)\n\n## APIGetCurrentPointReadOnly() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APIGetPointReadOnly",
        "kind": "Function",
        "detail": "APIGetPointReadOnly() function.",
        "insertText": "WSM.Tools.APIGetPointReadOnly(nToolID, nPointIndex);",
        "documentation": {
            "value": "# [WSM.Tools.APIGetPointReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga91f8655f52630513df72628e69f064a6)\n\n## APIGetPointReadOnly() function.\n\n## Parameters\n* nToolID\n* nPointIndex\n"
        }
    },
    {
        "label": "WSM.Tools.APIGetResultDescriptionReadOnly",
        "kind": "Function",
        "detail": "APIGetResultDescriptionReadOnly() function.",
        "insertText": "WSM.Tools.APIGetResultDescriptionReadOnly(nResult);",
        "documentation": {
            "value": "# [WSM.Tools.APIGetResultDescriptionReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga37bab5b4d477185b392a5845bff9c8d2)\n\n## APIGetResultDescriptionReadOnly() function.\n\n## Parameters\n* nResult\n"
        }
    },
    {
        "label": "WSM.Tools.APIGetToolStateReadOnly",
        "kind": "Function",
        "detail": "APIGetToolStateReadOnly() function.",
        "insertText": "WSM.Tools.APIGetToolStateReadOnly(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APIGetToolStateReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga7bf5df482fd15cbb33136a79b90539db)\n\n## APIGetToolStateReadOnly() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APIGetToolTypeReadOnly",
        "kind": "Function",
        "detail": "APIGetToolTypeReadOnly() function.",
        "insertText": "WSM.Tools.APIGetToolTypeReadOnly(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APIGetToolTypeReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga13c2b28edb8915eed74efcede5a98646)\n\n## APIGetToolTypeReadOnly() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APILockInference",
        "kind": "Function",
        "detail": "APILockInference() function.",
        "insertText": "WSM.Tools.APILockInference(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APILockInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gaba1da3caf5240858ec7efcce8bbe79cc)\n\n## APILockInference() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APIModDoModification",
        "kind": "Function",
        "detail": "APIModDoModification() function.",
        "insertText": "WSM.Tools.APIModDoModification(nToolID, bEndOfContinuous);",
        "documentation": {
            "value": "# [WSM.Tools.APIModDoModification](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga0fa4b2533c841b23b8d26826837db138)\n\n## APIModDoModification() function.\n\n## Parameters\n* nToolID\n* bEndOfContinuous\n"
        }
    },
    {
        "label": "WSM.Tools.APIModFiltersInitialSelectionReadOnly",
        "kind": "Function",
        "detail": "APIModFiltersInitialSelectionReadOnly() function.",
        "insertText": "WSM.Tools.APIModFiltersInitialSelectionReadOnly(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APIModFiltersInitialSelectionReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga2a364af6f8b5841b542717fdafed6613)\n\n## APIModFiltersInitialSelectionReadOnly() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APIModGetFinishMessageReadOnly",
        "kind": "Function",
        "detail": "APIModGetFinishMessageReadOnly() function.",
        "insertText": "WSM.Tools.APIModGetFinishMessageReadOnly(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APIModGetFinishMessageReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga61a929360270a1bac79f5d019fe8e87e)\n\n## APIModGetFinishMessageReadOnly() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APIModIsInteractiveReadOnly",
        "kind": "Function",
        "detail": "APIModIsInteractiveReadOnly() function.",
        "insertText": "WSM.Tools.APIModIsInteractiveReadOnly(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APIModIsInteractiveReadOnly](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gac36a3b5b48a0e5927e92b03b34ea1247)\n\n## APIModIsInteractiveReadOnly() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APIModResetModel",
        "kind": "Function",
        "detail": "APIModResetModel() function.",
        "insertText": "WSM.Tools.APIModResetModel(nToolID, bDeleteRedo);",
        "documentation": {
            "value": "# [WSM.Tools.APIModResetModel](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gad5827e606e9d50bf22dc4dc4eb1156a5)\n\n## APIModResetModel() function.\n\n## Parameters\n* nToolID\n* bDeleteRedo\n"
        }
    },
    {
        "label": "WSM.Tools.APIModSetObjectsToModify",
        "kind": "Function",
        "detail": "APIModSetObjectsToModify() function.",
        "insertText": "WSM.Tools.APIModSetObjectsToModify(nToolID, aObjectsToModify);",
        "documentation": {
            "value": "# [WSM.Tools.APIModSetObjectsToModify](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga7d1a93518bb611a136ac6786899022a8)\n\n## APIModSetObjectsToModify() function.\n\n## Parameters\n* nToolID\n* aObjectsToModify\n"
        }
    },
    {
        "label": "WSM.Tools.APIModSetObjectsToModifyGroupInstancePath",
        "kind": "Function",
        "insertText": "WSM.Tools.APIModSetObjectsToModifyGroupInstancePath();",
        "documentation": {
            "value": "# [WSM.Tools.APIModSetObjectsToModifyGroupInstancePath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga19cfa711c1dd60f361d69b3414790927)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Tools.APIPickAndPlacePoint",
        "kind": "Function",
        "detail": "APIPickAndPlacePoint() function.",
        "insertText": "WSM.Tools.APIPickAndPlacePoint(nToolID, pickray);",
        "documentation": {
            "value": "# [WSM.Tools.APIPickAndPlacePoint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga71dbe8a7d89d4aefd90229b189e8c593)\n\n## APIPickAndPlacePoint() function.\n\n## Parameters\n* nToolID\n* pickray\n"
        }
    },
    {
        "label": "WSM.Tools.APIPlacePoint",
        "kind": "Function",
        "detail": "APIPlacePoint() function.",
        "insertText": "WSM.Tools.APIPlacePoint(nToolID, pInputPoint);",
        "documentation": {
            "value": "# [WSM.Tools.APIPlacePoint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga97fa845c51a42757cef7739a1d21124c)\n\n## APIPlacePoint() function.\n\n## Parameters\n* nToolID\n* pInputPoint\n"
        }
    },
    {
        "label": "WSM.Tools.APIReset",
        "kind": "Function",
        "detail": "Register/Unregister AppHelper is not done from JS side FormIt/host application must expose this initialization.",
        "insertText": "WSM.Tools.APIReset();",
        "documentation": {
            "value": "# [WSM.Tools.APIReset](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gac069eb13e9ecc6552ea47b3c702772c3)\n\n## Register/Unregister AppHelper is not done from JS side FormIt/host application must expose this initialization.\n\n"
        }
    },
    {
        "label": "WSM.Tools.APIResetCurrentPoint",
        "kind": "Function",
        "detail": "APIResetCurrentPoint() function.",
        "insertText": "WSM.Tools.APIResetCurrentPoint(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APIResetCurrentPoint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga65f8e51933a66534829a5d797e6b07bb)\n\n## APIResetCurrentPoint() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APIResetTool",
        "kind": "Function",
        "detail": "APIResetTool() function.",
        "insertText": "WSM.Tools.APIResetTool(nToolID, nReason);",
        "documentation": {
            "value": "# [WSM.Tools.APIResetTool](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga1ca6bdb88806da1671b368642cf50c33)\n\n## APIResetTool() function.\n\n## Parameters\n* nToolID\n* nReason\n"
        }
    },
    {
        "label": "WSM.Tools.APIResetToolModelChange",
        "kind": "Function",
        "insertText": "WSM.Tools.APIResetToolModelChange();",
        "documentation": {
            "value": "# [WSM.Tools.APIResetToolModelChange](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga5a7d17f6a59c49f517ed527fefec988e)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Tools.APISetDefaultPoints",
        "kind": "Function",
        "detail": "APISetDefaultPoints() function.",
        "insertText": "WSM.Tools.APISetDefaultPoints(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APISetDefaultPoints](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gae59b7fd336969a39b533a4c673ae7e17)\n\n## APISetDefaultPoints() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APISetEditingMode",
        "kind": "Function",
        "detail": "APISetEditingMode() function.",
        "insertText": "WSM.Tools.APISetEditingMode(nToolID, bEditingMode);",
        "documentation": {
            "value": "# [WSM.Tools.APISetEditingMode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gaf86aff679fe111b3db0d0f1ae3895f02)\n\n## APISetEditingMode() function.\n\n## Parameters\n* nToolID\n* bEditingMode\n"
        }
    },
    {
        "label": "WSM.Tools.APISetOperationMode",
        "kind": "Function",
        "detail": "APISetOperationMode() function.",
        "insertText": "WSM.Tools.APISetOperationMode(nToolID, nMode);",
        "documentation": {
            "value": "# [WSM.Tools.APISetOperationMode](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga1f6cab26643d6486a7306d5473a35780)\n\n## APISetOperationMode() function.\n\n## Parameters\n* nToolID\n* nMode\n"
        }
    },
    {
        "label": "WSM.Tools.APIUnlockInference",
        "kind": "Function",
        "detail": "APIUnlockInference() function.",
        "insertText": "WSM.Tools.APIUnlockInference(nToolID);",
        "documentation": {
            "value": "# [WSM.Tools.APIUnlockInference](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga8d0fbe4da32aa046f02d4c46dc30ea7f)\n\n## APIUnlockInference() function.\n\n## Parameters\n* nToolID\n"
        }
    },
    {
        "label": "WSM.Tools.APIUpdateCurrentPoint",
        "kind": "Function",
        "detail": "APIUpdateCurrentPoint() function.",
        "insertText": "WSM.Tools.APIUpdateCurrentPoint(nToolID, pickray);",
        "documentation": {
            "value": "# [WSM.Tools.APIUpdateCurrentPoint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga5dc35f0b4bc412eee95916d4c2f5495a)\n\n## APIUpdateCurrentPoint() function.\n\n## Parameters\n* nToolID\n* pickray\n"
        }
    },
    {
        "label": "WSM.Tools.APIUpdatePoint",
        "kind": "Function",
        "detail": "APIUpdatePoint() function.",
        "insertText": "WSM.Tools.APIUpdatePoint(nToolID, nPointIndex, pInputPoint, bFinal);",
        "documentation": {
            "value": "# [WSM.Tools.APIUpdatePoint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#gacac2df8aef25d00aacf7774a150a7e4b)\n\n## APIUpdatePoint() function.\n\n## Parameters\n* nToolID\n* nPointIndex\n* pInputPoint\n* bFinal\n"
        }
    },
    {
        "label": "WSM.Tools.APIUpdatePointPick",
        "kind": "Function",
        "detail": "APIUpdatePointPick() function.",
        "insertText": "WSM.Tools.APIUpdatePointPick(nToolID, nPointIndex, pickray, bFinal);",
        "documentation": {
            "value": "# [WSM.Tools.APIUpdatePointPick](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga4f8454b99065ca4415cff3a0ed9d1891)\n\n## APIUpdatePointPick() function.\n\n## Parameters\n* nToolID\n* nPointIndex\n* pickray\n* bFinal\n"
        }
    },
    {
        "label": "WSM.Tools.CompareOutputFiles",
        "kind": "Function",
        "detail": "CompareOutputFiles() function.",
        "insertText": "WSM.Tools.CompareOutputFiles(sGoodFile, sResultFile);",
        "documentation": {
            "value": "# [WSM.Tools.CompareOutputFiles](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__tools.html#ga4b938a6bed4a9b993cfff77285c71ad1)\n\n## CompareOutputFiles() function.\n\n## Parameters\n* sGoodFile\n* sResultFile\n"
        }
    },
    {
        "label": "WSM.Utils.AngleFullCircleInRadians",
        "kind": "Function",
        "insertText": "WSM.Utils.AngleFullCircleInRadians();",
        "documentation": {
            "value": "# [WSM.Utils.AngleFullCircleInRadians](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga28540c795bcfd1ceba37c31b7abfee23)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.AppendSelectionToGroupInstancePathArray",
        "kind": "Function",
        "insertText": "WSM.Utils.AppendSelectionToGroupInstancePathArray();",
        "documentation": {
            "value": "# [WSM.Utils.AppendSelectionToGroupInstancePathArray](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gac3b01641e9833ad9e74afb293d52ae48)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.AppendToGroupInstancePathArray",
        "kind": "Function",
        "insertText": "WSM.Utils.AppendToGroupInstancePathArray();",
        "documentation": {
            "value": "# [WSM.Utils.AppendToGroupInstancePathArray](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gac1a1d088e6d79c28cf12f88ca49129c5)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.ComputeFaceCentroid",
        "kind": "Function",
        "detail": "ComputeFaceCentroid Parameters: In: historyID, faceID Out: success (bool), centroid (WSM.Point3d)",
        "insertText": "WSM.Utils.ComputeFaceCentroid(historyID, faceID);",
        "documentation": {
            "value": "# [WSM.Utils.ComputeFaceCentroid](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga8078aa006ac5bc99bc30e48a7cdfc59f)\n\n## ComputeFaceCentroid Parameters: In: historyID, faceID Out: success (bool), centroid (WSM.Point3d)\n\n## Parameters\n* historyID\n* faceID\n"
        }
    },
    {
        "label": "WSM.Utils.ComputeFaceNormal",
        "kind": "Function",
        "detail": "ComputeFaceNormal Parameters: In: historyID, faceID Out: bool, WSM.UnitVector3d.",
        "insertText": "WSM.Utils.ComputeFaceNormal(historyID, faceID);",
        "documentation": {
            "value": "# [WSM.Utils.ComputeFaceNormal](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga7869467db79a7ef5205d863a8367e548)\n\n## ComputeFaceNormal Parameters: In: historyID, faceID Out: bool, WSM.UnitVector3d.\n\n## Parameters\n* historyID\n* faceID\n"
        }
    },
    {
        "label": "WSM.Utils.ConvertToFaces",
        "kind": "Function",
        "insertText": "WSM.Utils.ConvertToFaces();",
        "documentation": {
            "value": "# [WSM.Utils.ConvertToFaces](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gac48d24f6a842596ca2c9c8ad17070fb9)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.ConvertToTopLevel",
        "kind": "Function",
        "insertText": "WSM.Utils.ConvertToTopLevel();",
        "documentation": {
            "value": "# [WSM.Utils.ConvertToTopLevel](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga381d3e675c35574387744761d85d4063)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.ConvertToTopLevelPaths",
        "kind": "Function",
        "insertText": "WSM.Utils.ConvertToTopLevelPaths();",
        "documentation": {
            "value": "# [WSM.Utils.ConvertToTopLevelPaths](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga9e769c9ce4ce65bd6ee9a3892b03bcdd)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.DeleteObjectsIncludeSmoothAttachments",
        "kind": "Function",
        "insertText": "WSM.Utils.DeleteObjectsIncludeSmoothAttachments();",
        "documentation": {
            "value": "# [WSM.Utils.DeleteObjectsIncludeSmoothAttachments](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga7e21cb34d6e322948a16a07de66ba5a0)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.ExpandSelection",
        "kind": "Function",
        "insertText": "WSM.Utils.ExpandSelection();",
        "documentation": {
            "value": "# [WSM.Utils.ExpandSelection](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga4990f15c6f4e92f0277a276de9fccac4)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.GetAllNonOwnedGeometricObjects",
        "kind": "Function",
        "detail": "GetAllNonOwnedGeometricObjects Parameters: In: nHistoryID Out: vector<size_t>",
        "insertText": "WSM.Utils.GetAllNonOwnedGeometricObjects(nHistoryID);",
        "documentation": {
            "value": "# [WSM.Utils.GetAllNonOwnedGeometricObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga7467534f2fa92b382d75da8ab8f4dcd5)\n\n## GetAllNonOwnedGeometricObjects Parameters: In: nHistoryID Out: vector<size_t>\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.Utils.GetAxisAlignedBoundingBox",
        "kind": "Function",
        "insertText": "WSM.Utils.GetAxisAlignedBoundingBox();",
        "documentation": {
            "value": "# [WSM.Utils.GetAxisAlignedBoundingBox](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaa347e070f44e0b77f3b173f28d38658a)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.GetCoedgePoints",
        "kind": "Function",
        "detail": "GetCoedgePoints Parameters: In: nHistoryID, coedgeID Out: bool, WSM.Point3d, WSM.Point3d.",
        "insertText": "WSM.Utils.GetCoedgePoints(nHistoryID, coedgeID);",
        "documentation": {
            "value": "# [WSM.Utils.GetCoedgePoints](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga1af134ac90c3f49f618db54b4f25de76)\n\n## GetCoedgePoints Parameters: In: nHistoryID, coedgeID Out: bool, WSM.Point3d, WSM.Point3d.\n\n## Parameters\n* nHistoryID\n* coedgeID\n"
        }
    },
    {
        "label": "WSM.Utils.GetEdgeCurveType",
        "kind": "Function",
        "detail": "GetEdgeCurveType Parameters: In: nHistoryID, edgeId Out: type, size_t AttribID.",
        "insertText": "WSM.Utils.GetEdgeCurveType(nHistoryID, edgeId);",
        "documentation": {
            "value": "# [WSM.Utils.GetEdgeCurveType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga45168be2dc298ccdf4d9dd857b4cee7d)\n\n## GetEdgeCurveType Parameters: In: nHistoryID, edgeId Out: type, size_t AttribID.\n\n## Parameters\n* nHistoryID\n* edgeId\n"
        }
    },
    {
        "label": "WSM.Utils.GetEdgeIDFromCoedge",
        "kind": "Function",
        "detail": "GetEdgeIDFromCoedge Parameters: In: nHistoryID, coedgeID Out: size_t.",
        "insertText": "WSM.Utils.GetEdgeIDFromCoedge(nHistoryID, coedgeID);",
        "documentation": {
            "value": "# [WSM.Utils.GetEdgeIDFromCoedge](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaf187e07efb1c228f8bff1ef75ff4da55)\n\n## GetEdgeIDFromCoedge Parameters: In: nHistoryID, coedgeID Out: size_t.\n\n## Parameters\n* nHistoryID\n* coedgeID\n"
        }
    },
    {
        "label": "WSM.Utils.GetEdgeLine",
        "kind": "Function",
        "detail": "GetEdgeLine Parameters: In: nHistoryID, edge Out: Line3d.",
        "insertText": "WSM.Utils.GetEdgeLine(nHistoryID, edge);",
        "documentation": {
            "value": "# [WSM.Utils.GetEdgeLine](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga08411ba2e49a19da7cc8d9e98f6c613b)\n\n## GetEdgeLine Parameters: In: nHistoryID, edge Out: Line3d.\n\n## Parameters\n* nHistoryID\n* edge\n"
        }
    },
    {
        "label": "WSM.Utils.GetFaceIDFromCoedge",
        "kind": "Function",
        "detail": "GetFaceIDFromCoedge Parameters: In: nHistoryID, coedgeID Out: size_t.",
        "insertText": "WSM.Utils.GetFaceIDFromCoedge(nHistoryID, coedgeID);",
        "documentation": {
            "value": "# [WSM.Utils.GetFaceIDFromCoedge](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gab814642a1818fefe9fa4eb556f0a36d7)\n\n## GetFaceIDFromCoedge Parameters: In: nHistoryID, coedgeID Out: size_t.\n\n## Parameters\n* nHistoryID\n* coedgeID\n"
        }
    },
    {
        "label": "WSM.Utils.GetFacePoints",
        "kind": "Function",
        "insertText": "WSM.Utils.GetFacePoints();",
        "documentation": {
            "value": "# [WSM.Utils.GetFacePoints](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga636f0cda90da462e904ac601d5b77c71)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.GetGroupInstanceNonOwnedGeometricObjects",
        "kind": "Function",
        "insertText": "WSM.Utils.GetGroupInstanceNonOwnedGeometricObjects();",
        "documentation": {
            "value": "# [WSM.Utils.GetGroupInstanceNonOwnedGeometricObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gae1f5f8e476eb2f5540ffa3cc5ba1f20b)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.GetGroupInstancePathFinalObjectHistoryID",
        "kind": "Function",
        "insertText": "WSM.Utils.GetGroupInstancePathFinalObjectHistoryID();",
        "documentation": {
            "value": "# [WSM.Utils.GetGroupInstancePathFinalObjectHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga92f664c1ba50c0be028aa1464c2526c7)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.GetMemoryInfo",
        "kind": "Function",
        "detail": "GetMemoryInfo Parameters: In: nHistoryID Out: aRefdHistoryIDs, nFullSize, nCollapsedSize.",
        "insertText": "WSM.Utils.GetMemoryInfo(nHistoryID);",
        "documentation": {
            "value": "# [WSM.Utils.GetMemoryInfo](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga06c8b55af25b0a61364e2a199cf7f2e4)\n\n## GetMemoryInfo Parameters: In: nHistoryID Out: aRefdHistoryIDs, nFullSize, nCollapsedSize.\n\n## Parameters\n* nHistoryID\n"
        }
    },
    {
        "label": "WSM.Utils.GetStringAttributeForObject",
        "kind": "Function",
        "detail": "Gets the string attribute value for a given object and key.",
        "insertText": "WSM.Utils.GetStringAttributeForObject(nHistoryID, nObjectID, key);",
        "documentation": {
            "value": "# [WSM.Utils.GetStringAttributeForObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga3402193847b8954d4b69eb38045f9dc7)\n\n## Gets the string attribute value for a given object and key.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* key\n"
        }
    },
    {
        "label": "WSM.Utils.GetVertexCurveAttributes",
        "kind": "Function",
        "detail": "GetVertexCurveAttributes Parameters: In: historyID, vertexID Out: std.vector<std.pair<size_t, size_t>> aAttributeIDs.",
        "insertText": "WSM.Utils.GetVertexCurveAttributes(historyID, vertexID);",
        "documentation": {
            "value": "# [WSM.Utils.GetVertexCurveAttributes](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga8eceedec0ac4198e60fe6569113ac713)\n\n## GetVertexCurveAttributes Parameters: In: historyID, vertexID Out: std.vector<std.pair<size_t, size_t>> aAttributeIDs.\n\n## Parameters\n* historyID\n* vertexID\n"
        }
    },
    {
        "label": "WSM.Utils.GroupInstancePathArray",
        "kind": "Function",
        "insertText": "WSM.Utils.GroupInstancePathArray();",
        "documentation": {
            "value": "# [WSM.Utils.GroupInstancePathArray](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaa6bfbe9409cc16eb0b308f67048bc41c)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.GroupInstancePathsAreEqual",
        "kind": "Function",
        "insertText": "WSM.Utils.GroupInstancePathsAreEqual();",
        "documentation": {
            "value": "# [WSM.Utils.GroupInstancePathsAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga1c015680eb1857e7e027a94db5961e0b)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.HasSmoothEdge",
        "kind": "Function",
        "detail": "HasSmoothEdge Parameters: In: nHistoryID, nObjectID Out: true/false.",
        "insertText": "WSM.Utils.HasSmoothEdge(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.Utils.HasSmoothEdge](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga5b13590abd206eee37d52836966786ef)\n\n## HasSmoothEdge Parameters: In: nHistoryID, nObjectID Out: true/false.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.Utils.IsBackFace",
        "kind": "Function",
        "insertText": "WSM.Utils.IsBackFace();",
        "documentation": {
            "value": "# [WSM.Utils.IsBackFace](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga1092338ba90cdef5b0aa70417f849952)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.IsLayerHidden",
        "kind": "Function",
        "detail": "IsLayerHidden Parameters: In: nHistoryID, id Out: true/false.",
        "insertText": "WSM.Utils.IsLayerHidden(nHistoryID, id);",
        "documentation": {
            "value": "# [WSM.Utils.IsLayerHidden](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gadd54a5d36335cbdb99c689bb0c2872e3)\n\n## IsLayerHidden Parameters: In: nHistoryID, id Out: true/false.\n\n## Parameters\n* nHistoryID\n* id\n"
        }
    },
    {
        "label": "WSM.Utils.IsLayerNotPickable",
        "kind": "Function",
        "detail": "IsLayerNotPickable Parameters: In: nHistoryID, id Out: true/false.",
        "insertText": "WSM.Utils.IsLayerNotPickable(nHistoryID, id);",
        "documentation": {
            "value": "# [WSM.Utils.IsLayerNotPickable](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaab48384b7c9a9da0ba0cca7e7bc8c69a)\n\n## IsLayerNotPickable Parameters: In: nHistoryID, id Out: true/false.\n\n## Parameters\n* nHistoryID\n* id\n"
        }
    },
    {
        "label": "WSM.Utils.IsObjectHidden",
        "kind": "Function",
        "detail": "IsObjectHidden Parameters: In: nHistoryID, nObjectID Out: true/false.",
        "insertText": "WSM.Utils.IsObjectHidden(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.Utils.IsObjectHidden](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaa1536101902466b7f6c892f392b54ff9)\n\n## IsObjectHidden Parameters: In: nHistoryID, nObjectID Out: true/false.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.Utils.IsObjectHiddenByPath",
        "kind": "Function",
        "insertText": "WSM.Utils.IsObjectHiddenByPath();",
        "documentation": {
            "value": "# [WSM.Utils.IsObjectHiddenByPath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaba7975d85786e78dc65c5613a9f60680)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.IsObjectNotPickable",
        "kind": "Function",
        "detail": "IsObjectNotPickable Parameters: In: nHistoryID, nObjectID Out: true/false.",
        "insertText": "WSM.Utils.IsObjectNotPickable(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.Utils.IsObjectNotPickable](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaff07261b7e911e5eaa3d144c59083e55)\n\n## IsObjectNotPickable Parameters: In: nHistoryID, nObjectID Out: true/false.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.Utils.IsObjectNotPickableByPath",
        "kind": "Function",
        "insertText": "WSM.Utils.IsObjectNotPickableByPath();",
        "documentation": {
            "value": "# [WSM.Utils.IsObjectNotPickableByPath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga1de03d671e2d922513e543dacdc53188)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.IsObjectType",
        "kind": "Function",
        "insertText": "WSM.Utils.IsObjectType();",
        "documentation": {
            "value": "# [WSM.Utils.IsObjectType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga5bbe659d41dc1fadbe0250e51b9b30e9)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.IsOnCurveJunction",
        "kind": "Function",
        "insertText": "WSM.Utils.IsOnCurveJunction();",
        "documentation": {
            "value": "# [WSM.Utils.IsOnCurveJunction](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga20abe862d9f2213b742c3646062d224b)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.IsOwnerOf",
        "kind": "Function",
        "detail": "Checks whether parent is an owner of child Parameters: In: parent, child as WSM.GroupInstancePath Out: true/false.",
        "insertText": "WSM.Utils.IsOwnerOf(parent, child);",
        "documentation": {
            "value": "# [WSM.Utils.IsOwnerOf](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gad1b86638215a864b0ffe266617abde4e)\n\n## Checks whether parent is an owner of child Parameters: In: parent, child as WSM.GroupInstancePath Out: true/false.\n\n## Parameters\n* parent\n* child\n"
        }
    },
    {
        "label": "WSM.Utils.IsSelectAllConnected",
        "kind": "Function",
        "insertText": "WSM.Utils.IsSelectAllConnected();",
        "documentation": {
            "value": "# [WSM.Utils.IsSelectAllConnected](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga99ac89e69ed7b1c7473b530ac6e1c0c5)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.IsSilhouetteEdge",
        "kind": "Function",
        "detail": "IsSilhouetteEdge Parameters: In: nHistoryID, edgeId, cameraPos, cameraDir, perspectiveView Out: true/false.",
        "insertText": "WSM.Utils.IsSilhouetteEdge(nHistoryID, edgeId, cameraPos, cameraDir, perspectiveView);",
        "documentation": {
            "value": "# [WSM.Utils.IsSilhouetteEdge](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gabc0c58d06e109b77a0baf72bff152fca)\n\n## IsSilhouetteEdge Parameters: In: nHistoryID, edgeId, cameraPos, cameraDir, perspectiveView Out: true/false.\n\n## Parameters\n* nHistoryID\n* edgeId\n* cameraPos\n* cameraDir\n* perspectiveView\n"
        }
    },
    {
        "label": "WSM.Utils.IsSmooth",
        "kind": "Function",
        "insertText": "WSM.Utils.IsSmooth();",
        "documentation": {
            "value": "# [WSM.Utils.IsSmooth](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga079ff4b3eb482d8450fe8c4c71c388ec)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.IsTopLevelObjectHidden",
        "kind": "Function",
        "detail": "IsTopLevelObjectHidden Parameters: In: path Out: true/false.",
        "insertText": "WSM.Utils.IsTopLevelObjectHidden(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.Utils.IsTopLevelObjectHidden](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gab6f7943ee1ca5ef3036e47f7fbcfbddb)\n\n## IsTopLevelObjectHidden Parameters: In: path Out: true/false.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.Utils.IsTopLevelObjectHiddenByPath",
        "kind": "Function",
        "insertText": "WSM.Utils.IsTopLevelObjectHiddenByPath();",
        "documentation": {
            "value": "# [WSM.Utils.IsTopLevelObjectHiddenByPath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga256ddffdc80ddb09d6a7a1f8947bb955)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.IsVertexEditable",
        "kind": "Function",
        "detail": "IsVertexEditable Parameters: In: nHistoryID, nObjectID Out: true/false.",
        "insertText": "WSM.Utils.IsVertexEditable(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.Utils.IsVertexEditable](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga1410399bc8cb0d7798bd353d58ca5b64)\n\n## IsVertexEditable Parameters: In: nHistoryID, nObjectID Out: true/false.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.Utils.IsVertexOnCurve",
        "kind": "Function",
        "detail": "IsVertexOnCurve Parameters: In: historyID, vertexID Out: true/false.",
        "insertText": "WSM.Utils.IsVertexOnCurve(historyID, vertexID);",
        "documentation": {
            "value": "# [WSM.Utils.IsVertexOnCurve](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga0280031915eab02864e85b0226e0e566)\n\n## IsVertexOnCurve Parameters: In: historyID, vertexID Out: true/false.\n\n## Parameters\n* historyID\n* vertexID\n"
        }
    },
    {
        "label": "WSM.Utils.MakePickRayFromWindow",
        "kind": "Function",
        "detail": "MakePickRayFromWindow Parameters: In: firstWindowSelectPoint, secondWindowSelectPoint Out: PickRay.",
        "insertText": "WSM.Utils.MakePickRayFromWindow(firstWindowSelectPoint, secondWindowSelectPoint);",
        "documentation": {
            "value": "# [WSM.Utils.MakePickRayFromWindow](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaf7eadb5c8dc99317a8ad0227e5ccb193)\n\n## MakePickRayFromWindow Parameters: In: firstWindowSelectPoint, secondWindowSelectPoint Out: PickRay.\n\n## Parameters\n* firstWindowSelectPoint\n* secondWindowSelectPoint\n"
        }
    },
    {
        "label": "WSM.Utils.MatchesSelectionType",
        "kind": "Function",
        "insertText": "WSM.Utils.MatchesSelectionType();",
        "documentation": {
            "value": "# [WSM.Utils.MatchesSelectionType](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gadf6f9f3a03254ca29435bf8584279dc0)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.ObjectCanBeHidden",
        "kind": "Function",
        "detail": "ObjectCanBeHidden Parameters: In: nHistoryID, nObjectID Out: true/false.",
        "insertText": "WSM.Utils.ObjectCanBeHidden(nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.Utils.ObjectCanBeHidden](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gac8d05b7fe981e4348a6a6be320a6b991)\n\n## ObjectCanBeHidden Parameters: In: nHistoryID, nObjectID Out: true/false.\n\n## Parameters\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.Utils.ObjectHistoryID",
        "kind": "Function",
        "detail": "ObjectHistoryID constructs an ObjectHistoryID.",
        "insertText": "WSM.Utils.ObjectHistoryID(nHistoryID, nObjectID, nHistoryID, nObjectID);",
        "documentation": {
            "value": "# [WSM.Utils.ObjectHistoryID](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gabaf76d74626cf3717dc6c8a08f1c5885)\n\n## ObjectHistoryID constructs an ObjectHistoryID.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* nHistoryID\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.Utils.ObjectHistoryIDArray",
        "kind": "Function",
        "insertText": "WSM.Utils.ObjectHistoryIDArray();",
        "documentation": {
            "value": "# [WSM.Utils.ObjectHistoryIDArray](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga2cb7a97575dd70b33da35782fa2db618)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.ObjectIDArray",
        "kind": "Function",
        "insertText": "WSM.Utils.ObjectIDArray();",
        "documentation": {
            "value": "# [WSM.Utils.ObjectIDArray](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga7214a412a58178835d6f6b0a6d657744)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.ObjectIDsAreEqual",
        "kind": "Function",
        "detail": "ObjectIDsAreEqual Parameters: In: id1, id2 Out: areSame (bool)",
        "insertText": "WSM.Utils.ObjectIDsAreEqual(id1, id2);",
        "documentation": {
            "value": "# [WSM.Utils.ObjectIDsAreEqual](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga10b8682be868a0cc55c3ac7566c47b91)\n\n## ObjectIDsAreEqual Parameters: In: id1, id2 Out: areSame (bool)\n\n## Parameters\n* id1\n* id2\n"
        }
    },
    {
        "label": "WSM.Utils.ObjectTypeFilter",
        "kind": "Function",
        "detail": "Default constructor for WSM.Utils.ObjectTypeFilter.",
        "insertText": "WSM.Utils.ObjectTypeFilter();",
        "documentation": {
            "value": "# [WSM.Utils.ObjectTypeFilter](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gad4dcf86f993bbcb357569aa0ff94e605)\n\n## Default constructor for WSM.Utils.ObjectTypeFilter.\n\n"
        }
    },
    {
        "label": "WSM.Utils.PickBody",
        "kind": "Function",
        "detail": "PickBody Parameters: In: pickRay Out: size_t.",
        "insertText": "WSM.Utils.PickBody(pickray);",
        "documentation": {
            "value": "# [WSM.Utils.PickBody](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga1429b40ef3f1a5bf3e2c867a4404c318)\n\n## PickBody Parameters: In: pickRay Out: size_t.\n\n## Parameters\n* pickray\n"
        }
    },
    {
        "label": "WSM.Utils.PickGeometry",
        "kind": "Function",
        "detail": "PickGeometry Parameters: In: pickray, pickVertices, pickEdges, pickFaces, pickInstances, bAllowAdjustRayRadius Out: size_t.",
        "insertText": "WSM.Utils.PickGeometry(pickray, pickFilter, bAllowAdjustRayRadius);",
        "documentation": {
            "value": "# [WSM.Utils.PickGeometry](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga56f6b56f5f4c8d3b37f1f3658c0413ae)\n\n## PickGeometry Parameters: In: pickray, pickVertices, pickEdges, pickFaces, pickInstances, bAllowAdjustRayRadius Out: size_t.\n\n## Parameters\n* pickray\n* pickFilter\n* bAllowAdjustRayRadius\n"
        }
    },
    {
        "label": "WSM.Utils.PickObjectsWithFilter",
        "kind": "Function",
        "detail": "PickObjectsWithFilter Parameters: In: pickray, filter, currentSelectionLevel Out: WSM.GroupInstancePath firstSelectedObject, std.vector<WSM.GroupInstancePath> allSelectedObjects, ObjectsAndPickPoints aObjectsAndPickPoints.",
        "insertText": "WSM.Utils.PickObjectsWithFilter(pickray, filter, currentSelectionLevel);",
        "documentation": {
            "value": "# [WSM.Utils.PickObjectsWithFilter](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga7a19c0147775eb3972643b56038d8d89)\n\n## PickObjectsWithFilter Parameters: In: pickray, filter, currentSelectionLevel Out: WSM.GroupInstancePath firstSelectedObject, std.vector<WSM.GroupInstancePath> allSelectedObjects, ObjectsAndPickPoints aObjectsAndPickPoints.\n\n## Parameters\n* pickray\n* filter\n* currentSelectionLevel\n"
        }
    },
    {
        "label": "WSM.Utils.PickObjectsWithRay",
        "kind": "Function",
        "detail": "PickObjectsWithRay Parameters: In: pickRay, pickFilter, bAllowAdjustRayRadius Out: ObjectIDsAndPickPoints aObjectsAndPickPoints.",
        "insertText": "WSM.Utils.PickObjectsWithRay(pickray, pickFilter, bAllowAdjustRayRadius, bIgnoreInContext);",
        "documentation": {
            "value": "# [WSM.Utils.PickObjectsWithRay](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga6b9546679c43c44290d1fa9424d4a7b9)\n\n## PickObjectsWithRay Parameters: In: pickRay, pickFilter, bAllowAdjustRayRadius Out: ObjectIDsAndPickPoints aObjectsAndPickPoints.\n\n## Parameters\n* pickray\n* pickFilter\n* bAllowAdjustRayRadius\n* bIgnoreInContext\n"
        }
    },
    {
        "label": "WSM.Utils.PickRay",
        "kind": "Function",
        "detail": "PickRay constructs a PickRay.",
        "insertText": "WSM.Utils.PickRay(pickrayLine, planes, screenPickRayRadius, perspectiveScaleFactor, baseRadius, normalizedScreenPoint);",
        "documentation": {
            "value": "# [WSM.Utils.PickRay](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga4e2f25261e07bdd943fc00b996c316c6)\n\n## PickRay constructs a PickRay.\n\n## Parameters\n* pickrayLine\n* planes\n* screenPickRayRadius\n* perspectiveScaleFactor\n* baseRadius\n* normalizedScreenPoint\n"
        }
    },
    {
        "label": "WSM.Utils.PickRayFromLine",
        "kind": "Function",
        "detail": "PickRay constructs a PickRay.",
        "insertText": "WSM.Utils.PickRayFromLine(pickrayLine);",
        "documentation": {
            "value": "# [WSM.Utils.PickRayFromLine](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaed910eafd0ee4472c60892e1a89f3308)\n\n## PickRay constructs a PickRay.\n\n## Parameters\n* pickrayLine\n"
        }
    },
    {
        "label": "WSM.Utils.PickRayFromNormalizedScreenPoint",
        "kind": "Function",
        "detail": "PickRayFromNormalizedScreenPoint() function.",
        "insertText": "WSM.Utils.PickRayFromNormalizedScreenPoint(ptX, ptY, yUp);",
        "documentation": {
            "value": "# [WSM.Utils.PickRayFromNormalizedScreenPoint](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaf3674a94f6873b13197176600b1fc96f)\n\n## PickRayFromNormalizedScreenPoint() function.\n\n## Parameters\n* ptX\n* ptY\n* yUp\n"
        }
    },
    {
        "label": "WSM.Utils.RayFireWithObjects",
        "kind": "Function",
        "insertText": "WSM.Utils.RayFireWithObjects();",
        "documentation": {
            "value": "# [WSM.Utils.RayFireWithObjects](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga8a632feb69cef2d2d48ffcd210a79496)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.SelectionFromGroupInstancePathArray",
        "kind": "Function",
        "insertText": "WSM.Utils.SelectionFromGroupInstancePathArray();",
        "documentation": {
            "value": "# [WSM.Utils.SelectionFromGroupInstancePathArray](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga9a893a29590cc2aa975993b94a19922c)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.SelectionToGroupInstancePath",
        "kind": "Function",
        "detail": "SelectionToGroupInstancePath Parameters: In: nObjectID Out: GroupInstancePath.",
        "insertText": "WSM.Utils.SelectionToGroupInstancePath(nObjectID);",
        "documentation": {
            "value": "# [WSM.Utils.SelectionToGroupInstancePath](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaade6498a5824849cee4688e3b794943f)\n\n## SelectionToGroupInstancePath Parameters: In: nObjectID Out: GroupInstancePath.\n\n## Parameters\n* nObjectID\n"
        }
    },
    {
        "label": "WSM.Utils.SelectionToGroupInstancePathArray",
        "kind": "Function",
        "insertText": "WSM.Utils.SelectionToGroupInstancePathArray();",
        "documentation": {
            "value": "# [WSM.Utils.SelectionToGroupInstancePathArray](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga18d471589c4a76d066daf2d611db5612)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.SetOrCreateStringAttributeForObject",
        "kind": "Function",
        "detail": "Sets the value of a string attribute of a given object, if that object has such an attribute with the given key.",
        "insertText": "WSM.Utils.SetOrCreateStringAttributeForObject(nHistoryID, nObjectID, key, value, nCB, bIsSharedOnSplit);",
        "documentation": {
            "value": "# [WSM.Utils.SetOrCreateStringAttributeForObject](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gab88bb68e8193def353774f18d6aa3d17)\n\n## Sets the value of a string attribute of a given object, if that object has such an attribute with the given key.\n\n## Parameters\n* nHistoryID\n* nObjectID\n* key\n* value\n* nCB\n* bIsSharedOnSplit\n"
        }
    },
    {
        "label": "WSM.Utils.SetToOwnerBody",
        "kind": "Function",
        "insertText": "WSM.Utils.SetToOwnerBody();",
        "documentation": {
            "value": "# [WSM.Utils.SetToOwnerBody](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#gaacafc87f27fa72e7004cc0471f23c42a)\n\n## \n\n"
        }
    },
    {
        "label": "WSM.Utils.TestPickImages",
        "kind": "Function",
        "insertText": "WSM.Utils.TestPickImages();",
        "documentation": {
            "value": "# [WSM.Utils.TestPickImages](https://formit3d.github.io/FormItExamplePlugins/docs/FormItJSAPI/group__mod__jsapi__wsm__utils.html#ga19de17be576ec75d3524898208533042)\n\n## \n\n"
        }
    }
]